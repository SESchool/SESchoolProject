<?xml version='1.0' encoding="EUC-KR"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- WARNING: This is an autogenerated file -->

<sqlMap namespace="T_LMS_propose">

	<!-- 부분수강 수강신청할 정보를 가져온다. -->
	<select id="selectProposeSelApplyInfo" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeSelApplyInfo */
		SELECT A.OPENSUBJID, A.SUBJCLASS, OPENSUBJNM
		, A.ADMINRECOM, A.MILEAGEPOINT, A.SUBJTYPE
		, A.SUBJMONTH, A.SUBJDAY
		, B.NAME, B.HANDPHONE, B.EMAIL
		,
		TO_NUMBER(A.OPENSUBJID)||'_'||B.USERID||'_'||TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		MOID
		, ( SELECT SUM(BIYONG) FROM T_LMS_OPENSUBJ_GROUP WHERE GROUPID IN
		($p_groupids$) ) PRICE
		, CARDMETHOD, ACNTMETHOD, BANKMETHOD, PHONEMETHOD, A.ISMILEAGE
		FROM T_LMS_OPENSUBJ A
		, T_LMS_MEMBER B
		, ( SELECT NVL(MIN(DECODE(AA.PAYMETHOD, '01', 'Y' ) ),'N') CARDMETHOD
		, NVL(MIN(DECODE(AA.PAYMETHOD, '02', 'Y') ),'N') ACNTMETHOD
		, NVL(MIN(DECODE(AA.PAYMETHOD, '03', 'Y') ),'N') BANKMETHOD
		, NVL(MIN(DECODE(AA.PAYMETHOD, '04', 'Y') ),'N') PHONEMETHOD
		FROM ( SELECT PAYMETHOD
		FROM T_LMS_PAYMETHOD
		WHERE SUBJ = #p_opensubjid# ) AA
		, ( SELECT CODE, CODENM
		FROM T_LMS_CODE
		WHERE GUBUN = '0112' ) BB
		WHERE AA.PAYMETHOD(+) = BB.CODE
		) C
		WHERE A.OPENSUBJID = #p_opensubjid#
		AND B.USERID = #p_userid#
	</select>

	<!-- GLMP 수강신청 폼 정보를 가져온다. -->
	<select id="selectProposeFormGLMP" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeFormGLMP */
		SELECT SUBJ, YEAR, SUBJSEQ, B.USERID
		, NVL(KOR_NAME,B.NAME) KOR_NAME, HANSA_NAME, ENG_NAME, PICTURE
		, HOBBY, GOLF_HANDI
		, NVL(A.JUMIN,B.RESNO) JUMIN, NVL(BIRTH_YEAR,SUBSTR(B.BIRTHDAY,1,4))
		BIRTH_YEAR, NVL(BIRTH_MONTH,SUBSTR(B.BIRTHDAY,5,2)) BIRTH_MONTH,
		NVL(BIRTH_DAY,SUBSTR(B.BIRTHDAY,7,2)) BIRTH_DAY
		, NVL(ZIPCODE,B.POST1||'-'||POST2) ZIPCODE, NVL(ADDRESS,B.ADDR)
		ADDRESS, NVL(A.TEL,B.HOMETEL) TEL, NVL(A.HANDPHONE,B.HANDPHONE)
		HANDPHONE
		, CAR, RELISION, CARNUM, NVL(A.EMAIL,B.EMAIL) EMAIL, PASSPORT
		, NVL(O_NAME,B.COMPNM) O_NAME, NVL(O_POSITION,B.JIKUPNM) O_POSITION,
		NVL(O_ZIPCODE,B.CORPZIP) O_ZIPCODE, NVL(O_ADDRESS,B.CORPADDR1||'
		'||B.CORPADDR2) O_ADDRESS
		/*근무처*/, NVL(O_TEL,B.COMPTEL) O_TEL, NVL(O_FAX,CORPFAX) O_FAX, O_TURNOVER,
		O_HOMEPAGE, O_MANAGETYPE, O_BIZFIELD
		, C_NAME, C_TEL, C_DEPTPOSNM, C_HANDPHONE, C_FAX, C_EMAIL
		/*학력*/, H_GRADYEARMON, H_NAME, H_MAJOR, H_STATE, U_GRADYEARMON, U_NAME,
		U_MAJOR, U_STATE, G_GRADYEARMON, G_NAME, G_MAJOR, G_STATE,
		E_GRADYEARMON, E_NAME, E_STATE
		/*경력*/, C_YEARMON1, C_DETAIL1, C_YEARMON2, C_DETAIL2, C_YEARMON3, C_DETAIL3
		/*배우자*/, W_KORNAME, W_ENGNAME, W_PASSPORT, W_JUMIN
		/*추천인*/, R_NAME, R_RELATION, R_COMPNM, R_POSITION, R_TEL
		FROM T_LMS_PROPOSEFORM A
		, T_LMS_MEMBER B
		WHERE B.USERID = A.USERID(+)
		AND A.SUBJ(+) = #p_subj# AND A.YEAR(+) = #p_year# AND A.SUBJSEQ(+) =
		#p_subjseq# AND A.USERID(+) = #p_userid#
		AND B.USERID = #p_userid#
	</select>

	<!-- 수강 및 결제 상태 정보를 가져온다. -->
	<select id="selectPropPayState" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectPropPayState */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, C.USERID
		, D.SEQ, D.TID, D.INSTALLMENT_SEQ, D.MOID
		, C.CHKFINAL, D.RECOGSTATE, GET_CODENM('0048', D.RECOGSTATE)
		RECOGSTATENM, C.APPDATE
		, C.COSTSUPPORT, C.PRICETYPE, D.AMOUNT, C.PRICE, C.BIYONG,
		C.BOOKPRICESUM
		, B.SUBJNM, B.SUBJTYPE, B.TRAININGCLASS
		, (SELECT ISGRADUATED FROM T_LMS_STOLD WHERE SUBJ = C.SUBJ AND YEAR =
		C.YEAR AND SUBJSEQ = C.SUBJSEQ AND USERID = C.USERID) ISGRADUATED
		FROM T_LMS_SUBJSEQ A
		, T_LMS_SUBJ B
		, T_LMS_PROPOSE C
		, T_LMS_PAYMENT D
		WHERE A.SUBJ = B.SUBJ
		AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
		AND C.SUBJ = D.SUBJ AND C.YEAR = D.YEAR AND C.SUBJSEQ = D.SUBJSEQ AND
		C.USERID = D.USERID
		AND B.SUBJTYPE = 'C'
		AND C.USERID = #p_userid#
		AND D.SEQ = #p_seq#
		<isEqual property="p_tid" compareValue="">
			AND D.TID = #p_tid#
		</isEqual>
		<isEqual property="t_moid" compareValue="">
			AND D.MOID = #p_moid#
		</isEqual>
	</select>

	<!-- 무역협회회원사인지 여부를 가져온다. -->
	<select id="selectKitaMemberAuthCheck" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectKitaMemberAuthCheck */
		SELECT I1.COMPANY_KOR, NVL(I2.MINAP, 0) CNT
		FROM MEMBER_INFO@KOBZ_CMEMBER I1
		, ( SELECT C.MEMBER_ID MEMBER_ID, C.COMPANY_KOR COMPANY_KOR,
		GET_FEE_ARREAR@KOBZ_CMEMBER(C.MEMBER_ID,'Y','A') MINAP
		FROM FEE_YEAR@KOBZ_CMEMBER A
		, MEMBER_INFO@KOBZ_CMEMBER C
		WHERE A.MEMBER_ID = C.MEMBER_ID
		AND C.MEMBER_GBN = '1'
		<isEqual property="p_authtype" compareValue="">
			AND 1=2
		</isEqual>
		<isEqual property="p_authtype" compareValue="member_id">
			AND C.MEMBER_ID = #p_authnum#
		</isEqual>
		<isEqual property="p_authtype" compareValue="enter_reg_no">
			AND C.ENTER_REG_NO = #p_authnum#
		</isEqual>
		GROUP BY C.MEMBER_ID, C.COMPANY_KOR
		HAVING MONTHS_BETWEEN(TO_CHAR(SYSDATE,
		'YYYYMMDD'),MAX(NVL(A.YEAR,'1900'))||MAX(SUBSTR(NVL(REG_RE_MEM_DATE,REG_DATE),5,2))||'01')
		> 14
		) I2
		WHERE I1.MEMBER_ID = I2.MEMBER_ID(+)
		<isEqual property="p_authtype" compareValue="">
			AND 1=2
		</isEqual>
		<isEqual property="p_authtype" compareValue="member_id">
			AND I1.MEMBER_ID = #p_authnum#
		</isEqual>
		<isEqual property="p_authtype" compareValue="enter_reg_no">
			AND I1.ENTER_REG_NO = #p_authnum#
		</isEqual>
		AND I1.MEMBER_GBN = '1'
	</select>

	<!-- 분납결제시 결제 가능한 가장 작은 seq 를 가져온다. -->
	<select id="selectPayInstallmentSeqMin" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectPayInstallmentSeqMin */
		SELECT MIN(SEQ) SEQ
		FROM T_LMS_SUBJSEQPAYMGR
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq#
		AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN PAYSTART AND PAYEND
	</select>

	<!-- B2C 학습자 > 결재현황리스트 에서 지원신청리스트 + 수강신청 리스트 + 결제이력 리스트를 보여준다. -->
	<!-- 환불 완료 상태 값 노출을 위해 recogstate != 'E' , recogstate = 'E' 나눠서 select 함. -->
	<select id="selectProposePayStateList" resultClass="cmap" parameterClass="cmap">
        /* propose.selectProposePayStateList */
        SELECT
        	nvl(SUBSTR((SELECT INDATE FROM T_LMS_STUDENT WHERE SUBJ=A.SUBJ AND SUBJSEQ=A.SUBJSEQ AND USERID = D.USERID AND YEAR=A.YEAR ), 0, 8), SUBSTR(A.EDUSTART, 0, 8) ) STINDATE, 
        	A.SUBJ, A.YEAR, A.SUBJSEQ,  B.TRAININGCLASS, B.OUTSOURCINGTYPE 
            , F.SEQ, F.TID, F.INSTALLMENT_SEQ
            , B.ISONOFF, GET_CODENM('0001', B.ISONOFF) ISONOFFNM
            , A.SUBJNM
            , TO_NUMBER(A.SUBJSEQGR) SUBJSEQGR
            , NVL(A.ISINSTALLMENT,'N') ISINSTALLMENT
            , CASE WHEN D.APPDATE IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(D.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
              END APPDATE
            , A.EDUSTART, A.EDUEND
            , A.PROPSTART, A.PROPEND
            , A.REFUNDEND
            , CASE WHEN SYSDATE BETWEEN TO_DATE(A.PROPSTART,'YYYYMMDDHH24') AND TO_DATE(A.PROPEND,'YYYYMMDDHH24') THEN 'Y'
                   ELSE 'N'
              END PAYDAYYN
            , CASE WHEN A.PROPSTART IS NULL OR A.PROPEND IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(A.PROPSTART,'YYYYMMDDHH24'),'YYYY.MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(A.PROPEND,'YYYYMMDDHH24'),'YYYY.MM.DD')
              END PAYDATE
            , (SELECT ISGRADUATED FROM T_LMS_STOLD WHERE SUBJ = D.SUBJ AND YEAR = D.YEAR AND SUBJSEQ = D.SUBJSEQ AND USERID = D.USERID) ISGRADUATED
            , D.CHKFINAL
            , CASE WHEN D.CHKFINAL IS NULL THEN '-'
                   WHEN D.CHKFINAL = 'Y' THEN '승인'
                   WHEN D.CHKFINAL = 'N' THEN '취소'
                   ELSE '대기'
              END CHKFINALNM
            , E.PAPERPASSYN, DECODE(E.PAPERPASSYN,NULL,'-','Y','합격','N','불합격') PAPERPASSYNNM
            , E.INTERVIEWPASSYN, DECODE(E.INTERVIEWPASSYN,NULL,'-','Y','합격','N','불합격') INTERVIEWPASSYNNM
            , DECODE(E.USERID,NULL,'N','Y') VOLUNTEERYN
            , DECODE(D.USERID,NULL,'N','Y') PROPOSEYN
            , D.ISOPTSUBJECTSELECT
            , D.TRAINEETYPE, GET_CODENM('0058',D.TRAINEETYPE) TRAINEETYPENM     /* 훈련생 구분 */
            , D.ABNORMALTYPE, GET_CODENM('0059',D.ABNORMALTYPE) ABNORMALTYPENM  /* 비정규직 구분 */
            , F.RECOGSTATE, GET_CODENM('0048',F.RECOGSTATE) RECOGSTATENM
            , F.PAYMETHOD, GET_CODENM('0056',F.PAYMETHOD) PAYMETHODNM
            , D.COSTSUPPORT, GET_CODENM('0006',D.COSTSUPPORT) COSTSUPPORTNM
            , F.AMOUNT, D.PRICE
            , B.BIYONGGUBUN, B.BIYONG, B.MEMBERBIYONG 
            , B.TRAININGAREA <!-- 추가_2013.12.10_가입 area  -->
            , (SELECT DISTINCT REPRESENT 	<!-- 추가_대표ID인지 확인  -->
            	FROM T_LMS_PROPOSESTUDENT 
           		WHERE SUBJ = A.SUBJ 
                 AND SUBJSEQ = A.SUBJSEQ 
                 AND REPRESENT = #p_userid#
          		) REPRESENT 
        	FROM T_LMS_SUBJSEQ A
            , T_LMS_SUBJ B
            , ( SELECT DISTINCT A.SUBJ, A.YEAR, A.SUBJSEQ
                FROM T_LMS_SUBJSEQ A
                    , ( SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_VOLUNTEER A
                        WHERE USERID = #p_userid#
                      UNION
                        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_PROPOSE A
                            , T_LMS_SUBJSEQ B
                        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
                            AND A.USERID = #p_userid#
                      UNION
                        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_PAYMENT A
                        WHERE A.ISLICENSE = 'N' AND A.USERID = #p_userid# and recogstate != 'E'
                      ) B
                WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND A.SUBJTYPE = 'C'
              ) C
            , T_LMS_PROPOSE D
            , T_LMS_VOLUNTEER E
            , T_LMS_PAYMENT F
        WHERE A.SUBJ = B.SUBJ
            AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
            AND A.SUBJ = D.SUBJ(+) AND A.YEAR = D.YEAR(+) AND A.SUBJSEQ = D.SUBJSEQ(+) AND D.USERID(+) = #p_userid#
            AND A.SUBJ = E.SUBJ(+) AND A.YEAR = E.YEAR(+) AND A.SUBJSEQ = E.SUBJSEQ(+) AND E.USERID(+) = #p_userid#
            AND D.TID = F.TID(+)
        UNION ALL
          SELECT
          	nvl(SUBSTR((SELECT INDATE FROM T_LMS_STUDENT WHERE SUBJ=A.SUBJ AND SUBJSEQ=A.SUBJSEQ AND USERID = D.USERID AND YEAR=A.YEAR ), 0, 8), SUBSTR(A.EDUSTART, 0, 8) ) STINDATE,
          	A.SUBJ, A.YEAR, A.SUBJSEQ,  B.TRAININGCLASS, B.OUTSOURCINGTYPE 
            , F.SEQ, F.TID, F.INSTALLMENT_SEQ
            , B.ISONOFF, GET_CODENM('0001', B.ISONOFF) ISONOFFNM
            , A.SUBJNM
            , TO_NUMBER(A.SUBJSEQGR) SUBJSEQGR
            , NVL(A.ISINSTALLMENT,'N') ISINSTALLMENT
            , CASE WHEN D.APPDATE IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(D.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
              END APPDATE
            , A.EDUSTART, A.EDUEND
            , A.PROPSTART, A.PROPEND
            , A.REFUNDEND
            , CASE WHEN SYSDATE BETWEEN TO_DATE(A.PROPSTART,'YYYYMMDDHH24') AND TO_DATE(A.PROPEND,'YYYYMMDDHH24') THEN 'Y'
                   ELSE 'N'
              END PAYDAYYN
            , CASE WHEN A.PROPSTART IS NULL OR A.PROPEND IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(A.PROPSTART,'YYYYMMDDHH24'),'YYYY.MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(A.PROPEND,'YYYYMMDDHH24'),'YYYY.MM.DD')
              END PAYDATE
            , (SELECT ISGRADUATED FROM T_LMS_STOLD WHERE SUBJ = D.SUBJ AND YEAR = D.YEAR AND SUBJSEQ = D.SUBJSEQ AND USERID = D.USERID) ISGRADUATED
            , D.CHKFINAL
            , CASE WHEN D.CHKFINAL IS NULL THEN '-'
                   WHEN D.CHKFINAL = 'Y' THEN '승인'
                   WHEN D.CHKFINAL = 'N' THEN '취소'
                   ELSE '대기'
              END CHKFINALNM
            , E.PAPERPASSYN, DECODE(E.PAPERPASSYN,NULL,'-','Y','합격','N','불합격') PAPERPASSYNNM
            , E.INTERVIEWPASSYN, DECODE(E.INTERVIEWPASSYN,NULL,'-','Y','합격','N','불합격') INTERVIEWPASSYNNM
            , DECODE(E.USERID,NULL,'N','Y') VOLUNTEERYN
            , DECODE(D.USERID,NULL,'N','Y') PROPOSEYN
            , D.ISOPTSUBJECTSELECT
            , D.TRAINEETYPE, GET_CODENM('0058',D.TRAINEETYPE) TRAINEETYPENM     /* 훈련생 구분 */
            , D.ABNORMALTYPE, GET_CODENM('0059',D.ABNORMALTYPE) ABNORMALTYPENM  /* 비정규직 구분 */
            , F.RECOGSTATE, GET_CODENM('0048',F.RECOGSTATE) RECOGSTATENM
            , F.PAYMETHOD, GET_CODENM('0056',F.PAYMETHOD) PAYMETHODNM
            , D.COSTSUPPORT, GET_CODENM('0006',D.COSTSUPPORT) COSTSUPPORTNM
            , F.AMOUNT, D.PRICE
            , B.BIYONGGUBUN, B.BIYONG, B.MEMBERBIYONG
            , B.TRAININGAREA <!-- 추가_2013.12.10_가입 area  -->	
            , '' REPRESENT 	<!-- 추가_대표ID인지 확인  -->
        FROM T_LMS_SUBJSEQ A
            , T_LMS_SUBJ B
            , ( SELECT DISTINCT A.SUBJ, A.YEAR, A.SUBJSEQ
                FROM T_LMS_SUBJSEQ A
                    , ( 
                        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_PAYMENT A
                        WHERE A.ISLICENSE = 'N' AND A.USERID = #p_userid# and recogstate = 'E'
                      ) B
                WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND A.SUBJTYPE = 'C'
              ) C
            , T_LMS_PROPOSE D
            , T_LMS_VOLUNTEER E
            , T_LMS_PAYMENT F
        WHERE A.SUBJ = B.SUBJ
            AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
            AND A.SUBJ = f.SUBJ(+) AND A.YEAR =f.YEAR(+) AND A.SUBJSEQ = f.SUBJSEQ(+) AND f.USERID(+) = #p_userid#
            AND f.SUBJ =d.SUBJ(+) AND f.YEAR =d.YEAR(+) AND f.SUBJSEQ = d.SUBJSEQ(+) AND d.USERID(+) = #p_userid#
            AND A.SUBJ = E.SUBJ(+) AND A.YEAR = E.YEAR(+) AND A.SUBJSEQ = E.SUBJSEQ(+) AND E.USERID(+) = #p_userid#
            AND F.RECOGSTATE = 'E'
        UNION ALL
        SELECT SUBSTR(D.INDATE, 0, 8) STINDATE
        , A.SUBJ, A.YEAR, A.SUBJSEQ,  '' TRAININGCLASS, '' OUTSOURCINGTYPE 
            , B.SEQ, B.TID, B.INSTALLMENT_SEQ
            , '' ISONOFF, '' ISONOFFNM
            , OPENSUBJNM SUBJNM
            , TO_NUMBER(A.SUBJSEQ) SUBJSEQGR
            , 'N' ISINSTALLMENT
            , CASE WHEN A.APPDATE IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(A.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
              END APPDATE
            , D.EDUSTART, D.EDUEND
            , C.STARTDT, C.ENDDT
            , '' REFUNDEND
            , CASE WHEN SYSDATE BETWEEN TO_DATE(C.STARTDT,'YYYYMMDDHH24') AND TO_DATE(C.ENDDT,'YYYYMMDDHH24') THEN 'Y'
                   ELSE 'N'
              END PAYDAYYN
            , CASE WHEN C.STARTDT IS NULL OR C.ENDDT IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(C.STARTDT,'YYYYMMDDHH24'),'YYYY.MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(C.ENDDT,'YYYYMMDDHH24'),'YYYY.MM.DD')
              END PAYDATE
            , '' ISGRADUATED
            , A.CHKFINAL
            , CASE WHEN A.CHKFINAL IS NULL THEN '-'
                   WHEN A.CHKFINAL = 'Y' THEN '승인'
                   WHEN A.CHKFINAL = 'N' THEN '취소'
                   ELSE '대기'
              END CHKFINALNM
            , '' PAPERPASSYN, '' PAPERPASSYNNM
            , '' INTERVIEWPASSYN, '' INTERVIEWPASSYNNM
            , 'N' VOLUNTEERYN
            , 'Y' PROPOSEYN
            , '' ISOPTSUBJECTSELECT
            , '' TRAINEETYPE, '' TRAINEETYPENM     /* 훈련생 구분 */
            , '' ABNORMALTYPE, '' ABNORMALTYPENM  /* 비정규직 구분 */
            , B.RECOGSTATE, GET_CODENM('0048',B.RECOGSTATE) RECOGSTATENM
            , B.PAYMETHOD, GET_CODENM('0112',B.PAYMETHOD) PAYMETHODNM
            , '' COSTSUPPORT, '' COSTSUPPORTNM
            , B.AMOUNT, A.PRICE
            , NULL BIYONGGUBUN, A.BIYONG, NULL MEMBERBIYONG
            , NULL TRAININGAREA <!-- 추가_2013.12.10_가입 area  -->
            , '' REPRESENT 	<!-- 추가_대표ID인지 확인  -->
        FROM T_LMS_PROPOSE A
            , T_LMS_PAYMENT B
            , T_LMS_OPENSUBJ C
            , T_LMS_STUDENT D
        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND A.USERID = B.USERID
            AND A.SUBJ = C.OPENSUBJID
            AND A.SUBJ = D.SUBJ(+) AND A.YEAR = D.YEAR(+) AND A.SUBJSEQ = D.SUBJSEQ(+) AND A.USERID = D.USERID(+)
            AND A.USERID = #p_userid#
        ORDER BY APPDATE DESC
	</select>

	<!-- 분납결제과정의 결제정보를 가져온다. -->
	<select id="selectProposePayInstallList" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposePayInstallList */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, B.USERID, A.SEQ INSTALLMENT_SEQ
		, DECODE(C.USERID,NULL,'N','Y') VOLUNTEERYN
		, C.PAPERPASSYN, DECODE(C.PAPERPASSYN,NULL,'-','Y','합격','N','불합격')
		PAPERPASSYNNM
		, C.INTERVIEWPASSYN,
		DECODE(C.INTERVIEWPASSYN,NULL,'-','Y','합격','N','불합격')
		INTERVIEWPASSYNNM
		, DECODE(B.TID,NULL,'N','Y') PAYYN
		, A.PAYSTART, A.PAYEND
		, CASE WHEN TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD')) BETWEEN
		TO_DATE(A.PAYSTART,'YYYYMMDD') AND TO_DATE(A.PAYEND,'YYYYMMDD') THEN
		'Y'
		ELSE 'N'
		END PAYDAYYN
		, CASE WHEN A.PAYSTART IS NULL OR A.PAYEND IS NULL THEN '-'
		ELSE TO_CHAR(TO_DATE(A.PAYSTART,'YYYYMMDDHH24'),'YYYY.MM.DD') || ' ~ ' ||
		TO_CHAR(TO_DATE(A.PAYEND,'YYYYMMDDHH24'),'YYYY.MM.DD')
		END PAYDATE
		, B.TID, B.SEQ
		, A.PAYAMT, B.AMOUNT, B.PRICE
		, B.RECOGSTATE, GET_CODENM('0048',B.RECOGSTATE) RECOGSTATENM
		, B.PAYMETHOD, GET_CODENM('0056',B.PAYMETHOD) PAYMETHODNM
		FROM T_LMS_SUBJSEQPAYMGR A
		, ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ, AA.USERID, AA.INSTALLMENT_SEQ
		, BB.SEQ, AA.TID, BB.AMOUNT, AA.PRICE
		, BB.RECOGSTATE, BB.PAYMETHOD
		FROM T_LMS_PROPOSEPAYINSTALL AA
		, T_LMS_PAYMENT BB
		WHERE AA.TID = BB.TID AND AA.USERID = #p_userid#
		) B
		, ( SELECT *
		FROM T_LMS_VOLUNTEER
		WHERE USERID = #p_userid#
		) C
		WHERE A.SUBJ = B.SUBJ(+) AND A.YEAR = B.YEAR(+) AND A.SUBJSEQ =
		B.SUBJSEQ(+) AND A.SEQ = B.INSTALLMENT_SEQ(+)
		AND A.SUBJ = C.SUBJ(+) AND A.YEAR = C.YEAR(+) AND A.SUBJSEQ =
		C.SUBJSEQ(+)
		AND A.SUBJ = #p_subj# AND A.YEAR = #p_year# AND A.SUBJSEQ = #p_subjseq#
		ORDER BY A.SEQ
	</select>

	<!-- 과정에 속한 과목 리스트(교재정보포함)를 가져온다. -->
	<select id="selectProposeSubjectList" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeSubjectList */
		SELECT CONSUBJID SUBJ, CONYEAR YEAR, CONSUBJSEQ SUBJSEQ, ESSENYN, EXPOSEYN
		, B.SUBJNM, B.ISONOFF, GET_CODENM('0001',B.ISONOFF) ISONOFFNM
		, DECODE(B.ISONOFF,'READ','Y',NVL(B.USEBOOK,'N')) USEBOOK
		, B.BOOKNAME, B.BOOKPRICE
		, CASE WHEN B.ISONOFF != 'READ' THEN 0
		ELSE (SELECT COUNT(DISTINCT BOOKMONTH) FROM T_LMS_SUBJSEQBOOK WHERE SUBJ =
		A.CONSUBJID AND YEAR = A.CONYEAR AND SUBJSEQ = A.CONSUBJSEQ)
		END BOOKCNT, B.OUTSOURCINGTYPE
		FROM T_LMS_SUBJSEQRELATE A
		, T_LMS_SUBJ B
		WHERE A.CONSUBJID = B.SUBJ
		AND A.SUBJ = #p_subj# AND A.YEAR = #p_year# AND A.SUBJSEQ = #p_subjseq#
		<isNotEmpty property="p_essenyn">
			AND A.ESSENYN = #p_essenyn#
		</isNotEmpty>
	</select>

	<!-- 교재선택 리스트를 가져온다. -->
	<select id="selectSelSubjBook" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectSelSubjBook */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, A.BOOKID
		, CASE WHEN A.BOOKID = 0 THEN (SELECT BOOKNAME FROM T_LMS_SUBJ WHERE
		SUBJ = A.SUBJ)
		ELSE (SELECT BOOKNM FROM T_LMS_BOOK WHERE BOOKID = A.BOOKID)
		END BOOKNM
		, DELIVERYN, DELIVERDT
		, (SELECT BOOKMONTH FROM T_LMS_SUBJSEQBOOK WHERE SUBJ = A.SUBJ AND YEAR
		= A.YEAR AND SUBJSEQ = A.SUBJSEQ AND BOOKID = A.BOOKID) BOOKMONTH
		FROM T_LMS_SELSUBJBOOK A
		WHERE A.SUBJ = #p_subj# AND A.YEAR = #p_year# AND A.SUBJSEQ = #p_subjseq#
		AND A.USERID = #p_userid#
		ORDER BY BOOKMONTH
	</select>
	

	<!-- 단체 수강신청 시, 수강생정보가 이미 존재하는지 확인  -->
	<select id="checkProposeStudent" resultClass="cmap" parameterClass="cmap">
		SELECT 
			COUNT(STUDENT_SEQ) STUDENT
	  	FROM 
	  		T_LMS_PROPOSESTUDENT 
	 	WHERE 1=1
	 	   AND REPRESENT = #p_represent#
	 	   AND SUBJ = #p_subj#
	 	   AND SUBJSEQ = #p_subjseq#
	</select>	
	
	<!-- 단체 수강신청 시 필요한 seq 얻기 -->
	<select id="readProposeStudentSEQ" resultClass="cmap" parameterClass="cmap">
		SELECT 
			COUNT(STUDENT_SEQ) SEQ
	  	FROM 
	  		T_LMS_PROPOSESTUDENT 
	</select>
	
	<!-- 단체 수강신청 시, 수강생 정보 추가 -->
	<insert id="insertProposeStudent" parameterClass="cmap">
		INSERT INTO T_LMS_PROPOSESTUDENT 
	       (
	           STUDENT_SEQ
	           , REPRESENT
	           , SUBJ
	           , SUBJSEQ
	           , USERID
	           , NAME
	           , EMAIL
	           , BIRTHDAY
	           , HANDPHONE
	           , RECOGSTATE
	       ) 
	       VALUES 
	       (
	           (SELECT LPAD(NVL(MAX(STUDENT_SEQ),0)+1,7,'0') STUDENT_SEQ FROM T_LMS_PROPOSESTUDENT)
	           , #p_represent# 
	           , #p_subj#
	           , #p_subjseq#           
	           , #p_userid#         
	           , #p_name#
	           , #p_email#
	           , #p_birthDay#
	           , #p_handphone#
	           , #p_recogstate#     
	       )	
	</insert>
	
	<!-- 단체 수강신청 승인상태 업데이트 -->
	<update id="updateProposeStudent" parameterClass="cmap">
		UPDATE T_LMS_PROPOSESTUDENT
		SET
			RECOGSTATE = #p_recogstate#
		WHERE 1 = 1
			AND USERID = #p_userid#
			AND SUBJ = #p_subj#
			AND SUBJSEQ = #p_subjseq#	
	</update>
	
	<!-- 단체 수강신청시 입력했던 수강생 정보 삭제	 -->
	<delete id="deleteProposeStudent" parameterClass="cmap">
		DELETE FROM T_LMS_PROPOSESTUDENT
		WHERE 1=1
			AND REPRESENT = #p_userid#
			AND SUBJ = #p_subj#
			AND SUBJSEQ = #p_subjseq#
			AND RECOGSTATE = 'N'
	</delete>
	
	<!-- 단체 수강생정보 조회 -->
	<select id="selectProposeStudent" resultClass="cmap" parameterClass="cmap">
		SELECT 
			STUDENT_SEQ
	        , REPRESENT
	        , SUBJ
	        , SUBJSEQ
	        , USERID
	        , NAME
	        , EMAIL
	        , BIRTHDAY
	        , HANDPHONE	
	  	FROM 
	  		T_LMS_PROPOSESTUDENT 
	 	WHERE 1=1
	 	   AND REPRESENT = #p_userid# 
	 	   AND SUBJ = #p_subj# 
	       AND SUBJSEQ = #p_subjseq#
	       AND RECOGSTATE = #p_recogstate#
	</select>
		
	<!-- 단체 수강생 수강신청 삭제 -->
	<delete id="deleteProposeBL" parameterClass="cmap">
		DELETE FROM T_LMS_PROPOSE 
		WHERE USERID = #p_userid#
	</delete>
			
		
	<!-- 학습자 수강신청 폼 -->
	<select id="selectProposeApplyInfo" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeApplyInfo */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
		, A.SUBJNM, B.ISONOFF, GET_CODENM('0001',B.ISONOFF) ISONOFFNM
		, B.TRAININGCLASS, B.MOBILERUNYN, C.DEPTNAM, C.JIKCHEKNM
		, A.PROPSTART, A.PROPEND, A.EDUSTART, A.EDUEND, A.PAYLIMIT, A.ISCLOSED,
		H.REFUNDAGREEYN
		, CASE WHEN A.ISINSTALLMENT = 'Y' THEN (SELECT CASE WHEN
		TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN PAYSTART AND PAYEND THEN 'Y' ELSE
		'N' END FROM T_LMS_SUBJSEQPAYMGR WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR
		AND SUBJSEQ = A.SUBJSEQ AND SEQ = NVL(#p_installment_seq#,1))
		ELSE CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDDHH24') BETWEEN A.PROPSTART AND
		A.PROPEND THEN 'Y' ELSE 'N' END
		END PAYABLE
		, CASE WHEN A.ISINSTALLMENT = 'Y' THEN (SELECT PAYSTART FROM
		T_LMS_SUBJSEQPAYMGR WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ
		= A.SUBJSEQ AND SEQ = NVL(#p_installment_seq#,1))
		ELSE TO_CHAR(TO_DATE(A.PROPSTART,'YYYYMMDDHH24'),'YYYYMMDD')
		END PAYSTART
		, CASE WHEN A.ISINSTALLMENT = 'Y' THEN (SELECT PAYEND FROM
		T_LMS_SUBJSEQPAYMGR WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ
		= A.SUBJSEQ AND SEQ = NVL(#p_installment_seq#,1))
		ELSE TO_CHAR(TO_DATE(A.PROPEND,'YYYYMMDDHH24'),'YYYYMMDD')
		END PAYEND
		, CASE WHEN A.ISINSTALLMENT = 'Y' THEN (SELECT TO_CHAR(PAYAMT) FROM
		T_LMS_SUBJSEQPAYMGR WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ
		= A.SUBJSEQ AND SEQ = NVL(#p_installment_seq#,1))
		WHEN A.ISINSTALLMENT = 'N' AND H.USERID IS NOT NULL THEN (SELECT
		TO_CHAR(PRICE) FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR =
		A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = C.USERID)
		ELSE TO_CHAR(A.BIYONG)
		END PRICE
		, CASE WHEN A.ISINSTALLMENT = 'Y' THEN
		( SELECT
		A.SUBJ||'_'||A.YEAR||'_'||A.SUBJSEQ||'_'||NVL(#p_installment_seq#,1)||'_'||C.USERID||'_'||LTRIM(TO_CHAR(TO_NUMBER(SUBSTR(MOID,
		INSTR(MOID, '_', 1,5)+1, 3))+1, '000'))
		FROM (SELECT NVL(MAX(MOID),'00_00_00_00_00_000') MOID FROM T_LMS_PAYMENT
		WHERE SUBJ=#p_subj# AND YEAR=#p_year# AND SUBJSEQ=#p_subjseq# AND
		USERID=#p_userid# AND INSTALLMENT_SEQ=NVL(#p_installment_seq#,1)) )
		ELSE
		( SELECT
		A.SUBJ||'_'||A.YEAR||'_'||A.SUBJSEQ||'_'||C.USERID||'_'||LTRIM(TO_CHAR(TO_NUMBER(SUBSTR(MOID,
		INSTR(MOID, '_', 1,4)+1, 3))+1, '000'))
		FROM (SELECT NVL(MAX(MOID),'00_00_00_00_000') MOID FROM T_LMS_PAYMENT
		WHERE SUBJ=#p_subj# AND YEAR=#p_year# AND SUBJSEQ=#p_subjseq# AND
		USERID=#p_userid#) )
		END MOID
		, D.BTOBYN, H.ISB2C
		, A.ISINSTALLMENT
		, G.SEQ, G.INSTALLMENT_SEQ, G.TID, G.RECOGSTATE, G.RECOGSTATE PAYSTATE,
		G.PAYMETHOD
		, (SELECT COUNT(1) FROM T_LMS_PAYMENT WHERE SUBJ=#p_subj# AND
		YEAR=#p_year# AND SUBJSEQ=#p_subjseq# AND USERID=#p_userid# AND
		RECOGSTATE NOT IN ('C','E','F')
		<isNotEmpty property="p_installment_seq">AND INSTALLMENT_SEQ =
			#p_installment_seq#</isNotEmpty>
		) PAYSTATEYCNT
		, DECODE(H.USERID,NULL,'N','Y') PROPOSEYN
		, H.CHKFINAL
		, H.COSTSUPPORT
		, G.ISOPTSUBJECTSELECT
		, A.ISOUTSOURCING, B.OUTSOURCINGTYPE
		, E.PERSONCOST /* 개인수강금 */
		, E.COMMCOST /* 능력카드 */
		, E.GOYONGCOST /* 고용보험 */
		, E.CARDCOST /* 일반 */
		, F.CARDMETHOD /* 결제방식 - 카드 */
		, F.ACNTMETHOD /* 결제방식 - 가상계좌 */
		, F.BANKMETHOD /* 결제방식 - 무통장 */
		, B.USEBOOK, B.BOOKPRICE, B.ISDELIVERY
		, A.ISGOYONG, A.GOYONGPRICE, A.SGOYONGPRICE
		, A.ISFREE, B.BIYONGGUBUN, A.BIYONG, B.MEMBERBIYONG
		, B.SALEVIEWYN1, B.SALEAMT1, B.SALEVIEWYN2, B.SALEAMT2
		, C.USERID, C.NAME, C.COMPNM
		, RESNO
		, C.COMP, D.COMPNM
		, C.EMAIL, C.HANDPHONE, C.COMPTEL, C.HOMETEL
		, C.POST1, C.POST2, C.ADDR, C.ADDR2
		, D.ZIP, D.ADDR COMPADDR
		, H.USEMILEAGE, A.ISMILEAGE
		, B.SMSNOTIYN, B.SMSNOTINUMBER ,B.TRAININGAREA  <!-- 추가_2013.12.02_TRAININGAREA 입력 -->
		,  
		CASE 									 		<!-- 추가_2015.09.01_대표아이디 여부, REPRESENT = 'Y' 이면 대표아이디-->
       		WHEN I.REG_GB = 'kmds' THEN 'Y'
       	ELSE 'N'   
       	END REPRESENT
		FROM T_LMS_SUBJSEQ A
		, T_LMS_SUBJ B
		, T_LMS_MEMBER C
		, T_LMS_COMPCLASS D
		, ( SELECT NVL(MIN(DECODE(AA.COSTSUPPORT, '1001', 'Y' ) ),'N')
		PERSONCOST
		, NVL(MIN(DECODE(AA.COSTSUPPORT, '1002', 'Y') ),'N') COMMCOST
		, NVL(MIN(DECODE(AA.COSTSUPPORT, '1003', 'Y') ),'N') GOYONGCOST
		, NVL(MIN(DECODE(AA.COSTSUPPORT, '1004', 'Y') ),'N') CARDCOST
		FROM ( SELECT COSTSUPPORT
		FROM T_LMS_COSTSUPPORT
		WHERE SUBJ = #p_subj# ) AA
		, ( SELECT CODE, CODENM
		FROM T_LMS_CODE
		WHERE GUBUN = '0006' ) BB
		WHERE AA.COSTSUPPORT(+) = BB.CODE
		) E
		, ( SELECT NVL(MIN(DECODE(AA.PAYMETHOD, '100000000000', 'Y' ) ),'N')
		CARDMETHOD
		, NVL(MIN(DECODE(AA.PAYMETHOD, '010000000000', 'Y') ),'N') ACNTMETHOD
		, NVL(MIN(DECODE(AA.PAYMETHOD, '001000000000', 'Y') ),'N') BANKMETHOD
		FROM ( SELECT PAYMETHOD
		FROM T_LMS_PAYMETHOD
		WHERE SUBJ = #p_subj# ) AA
		, ( SELECT CODE, CODENM
		FROM T_LMS_CODE
		WHERE GUBUN = '0056' ) BB
		WHERE AA.PAYMETHOD(+) = BB.CODE
		) F
		<isEmpty property="p_installment_seq">
			, ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ, AA.USERID
			, BB.SEQ, AA.TID, BB.RECOGSTATE, '' INSTALLMENT_SEQ, BB.PAYMETHOD
			, AA.ISOPTSUBJECTSELECT
			FROM T_LMS_PROPOSE AA
			, T_LMS_PAYMENT BB
			WHERE AA.TID = BB.TID
			AND AA.SUBJ = #p_subj# AND AA.YEAR = #p_year# AND AA.SUBJSEQ =
			#p_subjseq# AND AA.USERID = #p_userid#
			) G
		</isEmpty>
		<isNotEmpty property="p_installment_seq">
			, ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ, AA.USERID
			, BB.SEQ, AA.TID, BB.MOID, BB.RECOGSTATE, AA.INSTALLMENT_SEQ,
			BB.PAYMETHOD
			, '' ISOPTSUBJECTSELECT
			FROM T_LMS_PROPOSEPAYINSTALL AA
			, T_LMS_PAYMENT BB
			WHERE AA.INSTALLMENT_SEQ = #p_installment_seq# AND AA.TID = BB.TID
			AND AA.SUBJ = #p_subj# AND AA.YEAR = #p_year# AND AA.SUBJSEQ =
			#p_subjseq# AND AA.USERID = #p_userid#
			) G
		</isNotEmpty>
		, T_LMS_PROPOSE H
		, KOBZ_MEMBER_T@KOBZ_MEMBER I
		WHERE A.SUBJ = B.SUBJ AND C.COMP = D.COMP
		AND A.SUBJ = G.SUBJ(+) AND A.YEAR = G.YEAR(+) AND A.SUBJSEQ =
		G.SUBJSEQ(+)
		AND A.SUBJ = H.SUBJ(+) AND A.YEAR = H.YEAR(+) AND A.SUBJSEQ =
		H.SUBJSEQ(+) AND H.USERID(+) = #p_userid#
		AND A.SUBJ = #p_subj# AND A.YEAR = #p_year# AND A.SUBJSEQ = #p_subjseq#
		AND C.USERID = #p_userid#
		AND I.MEMBER_ID = #p_userid#
	</select>

	<!-- 수강관리 > 수강신청관리 > 페이지 리스트 -->
	<select id="selectApplyPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectApplyPageList */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, B.SUBJNM
            , B.PROPSTART, B.PROPEND, A.APPDATE
            , TO_CHAR(TO_DATE(B.PROPSTART,'YYYYMMDDHH24'), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(B.PROPEND,'YYYYMMDDHH24'), 'YYYY-MM-DD') PROPDATE
            , A.USERID, D.NAME
            , D.HANDPHONE, D.HOMETEL TEL, D.EMAIL, C.TRAININGCLASS
        FROM T_LMS_PROPOSE A
            , T_LMS_SUBJSEQ B
            , T_LMS_SUBJ C
            , T_LMS_MEMBER D
        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
            AND B.SUBJ = C.SUBJ AND A.USERID = D.USERID
            AND B.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_trainingclass">
			AND C.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND B.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND B.YEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND B.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			/* AND SUBSTR(B.PROPSTART,0,8) */
			AND SUBSTR(A.APPDATE,0,8) <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			/* AND SUBSTR(B.PROPEND,0,8) */
			AND SUBSTR(A.APPDATE,0,8) <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND D.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY A.APPDATE DESC
		<include refid="pageingBottom" />
	</select>

	<!-- 수강관리 > 수강신청현황 > 페이지 리스트 -->
	<select id="selectApplyStatusPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectApplyStatusPageList */
        SELECT A.SUBJ, A.SUBJSEQ, A.SUBJNM, TO_NUMBER(A.SUBJSEQGR)SUBJSEQGR, DECODE(B.ISONOFF, 'ON', '온라인과정', '오프라인과정')ISONOFF,
		       TO_CHAR(TO_DATE(A.PROPSTART,'YYYYMMDDHH24'), 'YYYY.MM.DD')||' ~ '||TO_CHAR(TO_DATE(A.PROPEND,'YYYYMMDDHH24'), 'YYYY.MM.DD') PROPDATE, 
		       TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDDHH24'), 'YYYY.MM.DD')||' ~ '||TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDDHH24'), 'YYYY.MM.DD') EDUDATE,
		       DECODE(A.ISGOYONG,'Y','환급','비환급')ISGOYONG, A.BIYONG, NVL(A.STUDENTLIMIT,0)STUDENTLIMIT,
		       (SELECT COUNT(*) FROM T_LMS_PROPOSE K WHERE K.SUBJ = A.SUBJ AND K.YEAR = A.YEAR AND K.SUBJSEQ = A.SUBJSEQ AND CHKFINAL != 'N') CNT_APPLY,
		       (SELECT COUNT(*) FROM T_LMS_CANCEL K WHERE K.SUBJ = A.SUBJ AND K.YEAR = A.YEAR AND K.SUBJSEQ = A.SUBJSEQ) CNT_CANCEL,
		       (SELECT COUNT(*) FROM T_LMS_PROPOSE K WHERE K.SUBJ = A.SUBJ AND K.YEAR = A.YEAR AND K.SUBJSEQ = A.SUBJSEQ AND CHKFINAL = 'Y') CNT_FINAL,
		       A.PROPSTART, A.PROPEND, A.EDUSTART, A.EDUEND 
		FROM   T_LMS_SUBJSEQ A, T_LMS_SUBJ B
		WHERE  A.SUBJ = B.SUBJ
		AND	   A.SUBJTYPE = 'C'
		]]>
		<isNotEmpty property="p_trainingclass">
			AND B.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND B.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_year">
			AND A.YEAR = #p_year#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND A.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_month">
			AND A.EDUSTART LIKE #p_year#||#p_month#||'%'
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.SUBJSEQ = #p_comp#
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>

	<!-- 수강관리 > 수강신청현황 > 리스트 -->
	<select id="selectApplyStatusList" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectApplyStatusList */
        SELECT A.SUBJ, A.SUBJSEQ, A.SUBJNM, TO_NUMBER(A.SUBJSEQGR)SUBJSEQGR, DECODE(B.ISONOFF, 'ON', '온라인과정', '오프라인과정')ISONOFF,
		       TO_CHAR(TO_DATE(A.PROPSTART,'YYYYMMDDHH24'), 'YYYY.MM.DD')||' ~ '||TO_CHAR(TO_DATE(A.PROPEND,'YYYYMMDDHH24'), 'YYYY.MM.DD') PROPDATE, 
		       TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDDHH24'), 'YYYY.MM.DD')||' ~ '||TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDDHH24'), 'YYYY.MM.DD') EDUDATE,
		       DECODE(A.ISGOYONG,'Y','환급','비환급')ISGOYONG, A.BIYONG, NVL(A.STUDENTLIMIT,0)STUDENTLIMIT,
		       (SELECT COUNT(*) FROM T_LMS_PROPOSE K WHERE K.SUBJ = A.SUBJ AND K.YEAR = A.YEAR AND K.SUBJSEQ = A.SUBJSEQ AND CHKFINAL != 'N') CNT_APPLY,
		       (SELECT COUNT(*) FROM T_LMS_CANCEL K WHERE K.SUBJ = A.SUBJ AND K.YEAR = A.YEAR AND K.SUBJSEQ = A.SUBJSEQ) CNT_CANCEL,
		       (SELECT COUNT(*) FROM T_LMS_PROPOSE K WHERE K.SUBJ = A.SUBJ AND K.YEAR = A.YEAR AND K.SUBJSEQ = A.SUBJSEQ AND CHKFINAL = 'Y') CNT_FINAL,
		       A.PROPSTART, A.PROPEND, A.EDUSTART, A.EDUEND 
		FROM   T_LMS_SUBJSEQ A, T_LMS_SUBJ B
		WHERE  A.SUBJ = B.SUBJ
		AND	   A.SUBJTYPE = 'C'
		]]>
		<isNotEmpty property="p_trainingclass">
			AND B.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND B.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_year">
			AND A.YEAR = #p_year#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND A.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_month">
			AND A.EDUSTART LIKE #p_year#||#p_month#||'%'
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.SUBJSEQ = #p_comp#
		</isNotEmpty>
	</select>

	<!-- 수강관리 > 수강신청관리 > 리스트 -->
	<select id="selectApplyList" resultClass="cmap" parameterClass="cmap">
        <![CDATA[ /* propose.selectApplyList */
        SELECT E.SUBJ, E.YEAR, E.SUBJSEQ, F.SUBJNM
            , F.PROPSTART, F.PROPEND
            , TO_CHAR(TO_DATE(E.APPDATE,'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') APPDATE
            , TO_CHAR(TO_DATE(F.PROPSTART,'YYYYMMDDHH24'), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(F.PROPEND,'YYYYMMDDHH24'), 'YYYY-MM-DD') PROPDATE
            , E.USERID, B.NAME
            , NVL(KOR_NAME,B.NAME) KOR_NAME, HANSA_NAME, A.ENG_NAME
            , HOBBY, GOLF_HANDI
            , NVL(A.JUMIN,B.RESNO) JUMIN, B.BIRTHDAY
            , NVL(ZIPCODE,B.POST1||'-'||POST2) ZIPCODE, NVL(ADDRESS,B.ADDR) ADDRESS, NVL(A.TEL,B.HOMETEL) TEL, NVL(A.HANDPHONE,B.HANDPHONE) HANDPHONE
            , CAR, RELISION, CARNUM, NVL(A.EMAIL,B.EMAIL) EMAIL, PASSPORT
            , NVL(O_NAME,B.COMPNM) O_NAME, NVL(O_POSITION,B.JIKUPNM) O_POSITION, NVL(O_ZIPCODE,B.CORPZIP) O_ZIPCODE, NVL(O_ADDRESS,B.CORPADDR1||' '||B.CORPADDR2) O_ADDRESS
            /*근무처*/, NVL(O_TEL,B.COMPTEL) O_TEL, NVL(O_FAX,CORPFAX) O_FAX, O_TURNOVER, O_HOMEPAGE, DECODE(O_MANAGETYPE,'1','소유경영인','2','전문경영인') O_MANAGETYPE, O_BIZFIELD
            , C_NAME, C_TEL, C_DEPTPOSNM, C_HANDPHONE, C_FAX, C_EMAIL
            /*학력*/, H_GRADYEARMON, H_NAME, H_MAJOR, DECODE(H_STATE,'01','졸업','02','중퇴') H_STATE, U_GRADYEARMON, U_NAME, U_MAJOR, DECODE(U_STATE,'01','졸업','02','중퇴') U_STATE, G_GRADYEARMON, G_NAME, G_MAJOR, DECODE(G_STATE,'01','졸업','02','중퇴') G_STATE, E_GRADYEARMON, E_NAME, DECODE(E_STATE,'01','졸업','02','중퇴') E_STATE
            /*경력*/, C_YEARMON1, C_DETAIL1, C_YEARMON2, C_DETAIL2, C_YEARMON3, C_DETAIL3
            /*배우자*/, W_KORNAME, W_ENGNAME, W_PASSPORT, W_JUMIN
            /*추천인*/, R_NAME, R_RELATION, R_COMPNM, R_POSITION, R_TEL
        FROM T_LMS_PROPOSE E
            , T_LMS_SUBJSEQ F
            , T_LMS_SUBJ C
            , T_LMS_PROPOSEFORM A
            , T_LMS_MEMBER B
        WHERE E.SUBJ = F.SUBJ AND E.YEAR = F.YEAR AND E.SUBJSEQ = F.SUBJSEQ AND E.USERID = B.USERID
            AND E.SUBJ = A.SUBJ(+) AND E.YEAR = A.YEAR(+) AND E.SUBJSEQ = A.SUBJSEQ(+) AND E.USERID = A.USERID(+) 
            AND F.SUBJ = C.SUBJ
            AND C.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_trainingclass">
			AND C.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND F.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND F.YEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND F.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			AND SUBSTR(F.PROPSTART,0,8) <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			AND SUBSTR(F.PROPEND,0,8) <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND B.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
	</select>

	<!-- 수강관리 > 수강신청관리 > 리스트 -->
	<select id="selectApplyExcelList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
        <![CDATA[ /* propose.selectApplyExcelList */
        SELECT E.SUBJ, E.YEAR, E.SUBJSEQ, F.SUBJNM
            , F.PROPSTART, F.PROPEND
            , TO_CHAR(TO_DATE(E.APPDATE,'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') APPDATE
            , TO_CHAR(TO_DATE(F.PROPSTART,'YYYYMMDDHH24'), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(F.PROPEND,'YYYYMMDDHH24'), 'YYYY-MM-DD') PROPDATE
            , E.USERID, B.NAME
            , NVL(KOR_NAME,B.NAME) KOR_NAME, HANSA_NAME, A.ENG_NAME
            , HOBBY, GOLF_HANDI
            , NVL(A.JUMIN,B.RESNO) JUMIN, B.BIRTHDAY
            , NVL(ZIPCODE,B.POST1||'-'||POST2) ZIPCODE, NVL(ADDRESS,B.ADDR) ADDRESS, NVL(A.TEL,B.HOMETEL) TEL, NVL(A.HANDPHONE,B.HANDPHONE) HANDPHONE
            , CAR, RELISION, CARNUM, NVL(A.EMAIL,B.EMAIL) EMAIL, PASSPORT
            , NVL(O_NAME,B.COMPNM) O_NAME, NVL(O_POSITION,B.JIKUPNM) O_POSITION, NVL(O_ZIPCODE,B.CORPZIP) O_ZIPCODE, NVL(O_ADDRESS,B.CORPADDR1||' '||B.CORPADDR2) O_ADDRESS
            /*근무처*/, NVL(O_TEL,B.COMPTEL) O_TEL, NVL(O_FAX,CORPFAX) O_FAX, O_TURNOVER, O_HOMEPAGE, DECODE(O_MANAGETYPE,'1','소유경영인','2','전문경영인') O_MANAGETYPE, O_BIZFIELD
            , C_NAME, C_TEL, C_DEPTPOSNM, C_HANDPHONE, C_FAX, C_EMAIL
            /*학력*/, H_GRADYEARMON, H_NAME, H_MAJOR, DECODE(H_STATE,'01','졸업','02','중퇴') H_STATE, U_GRADYEARMON, U_NAME, U_MAJOR, DECODE(U_STATE,'01','졸업','02','중퇴') U_STATE, G_GRADYEARMON, G_NAME, G_MAJOR, DECODE(G_STATE,'01','졸업','02','중퇴') G_STATE, E_GRADYEARMON, E_NAME, DECODE(E_STATE,'01','졸업','02','중퇴') E_STATE
            /*경력*/, C_YEARMON1, C_DETAIL1, C_YEARMON2, C_DETAIL2, C_YEARMON3, C_DETAIL3
            /*배우자*/, W_KORNAME, W_ENGNAME, W_PASSPORT, DECODE(W_JUMIN,NULL,'',W_JUMIN)
            /*추천인*/, R_NAME, R_RELATION, R_COMPNM, R_POSITION, R_TEL
        FROM T_LMS_PROPOSE E
            , T_LMS_SUBJSEQ F
            , T_LMS_SUBJ C
            , T_LMS_PROPOSEFORM A
            , T_LMS_MEMBER B
        WHERE E.SUBJ = F.SUBJ AND E.YEAR = F.YEAR AND E.SUBJSEQ = F.SUBJSEQ AND E.USERID = B.USERID
            AND E.SUBJ = A.SUBJ(+) AND E.YEAR = A.YEAR(+) AND E.SUBJSEQ = A.SUBJSEQ(+) AND E.USERID = A.USERID(+) 
            AND F.SUBJ = C.SUBJ
            AND C.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_trainingclass">
			AND C.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND F.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND F.YEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND F.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			AND SUBSTR(F.PROPSTART,0,8) <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			AND SUBSTR(F.PROPEND,0,8) <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND B.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>

	<!-- 수강관리 > 부분 수강신청관리 > 페이지 리스트 -->
	<select id="selectOpenApplyPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectOpenApplyPageList */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, B.SUBJNM
            , B.PROPSTART, B.PROPEND, A.APPDATE
            , TO_CHAR(TO_DATE(B.PROPSTART,'YYYYMMDDHH24'), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(B.PROPEND,'YYYYMMDDHH24'), 'YYYY-MM-DD') PROPDATE
            , A.USERID, D.NAME
            , D.HANDPHONE, D.HOMETEL TEL, D.EMAIL
        FROM T_LMS_PROPOSE A
            , T_LMS_SUBJSEQ B
            , T_LMS_SUBJ C
            , T_LMS_MEMBER D
        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
            AND B.SUBJ = C.SUBJ AND A.USERID = D.USERID
            AND B.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_trainingclass">
			AND C.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_year">
			AND A.YEAR = #p_year#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			AND B.PROPSTART <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			AND B.PROPEND <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND D.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>

	<!-- 수강관리 > 부분 수강신청관리 > 리스트 -->
	<select id="selectOpenApplyList" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectOpenApplyList */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, B.SUBJNM
            , B.PROPSTART, B.PROPEND
            , TO_CHAR(TO_DATE(A.APPDATE,'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') APPDATE
            , TO_CHAR(TO_DATE(B.PROPSTART,'YYYYMMDDHH24'), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(B.PROPEND,'YYYYMMDDHH24'), 'YYYY-MM-DD') PROPDATE
            , A.USERID, D.NAME
            , D.HANDPHONE, D.HOMETEL TEL, D.EMAIL
        FROM T_LMS_PROPOSE A
            , T_LMS_SUBJSEQ B
            , T_LMS_SUBJ C
            , T_LMS_MEMBER D
        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
            AND B.SUBJ = C.SUBJ AND A.USERID = D.USERID ]]>
		<isNotEmpty property="p_trainingclass">
			AND C.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_year">
			AND A.YEAR = #p_year#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			AND B.PROPSTART <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			AND B.PROPEND <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND D.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
	</select>

	<select id="selectProposeUser" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectProposeUser */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , B.SUBJORDER, B.SUBJTYPE, B.FINISHTREATRULE
            , B.IDX
            , A.APPROVALUSERID, APPROVALDATE
            , A.CANCELUSERID, A.CANCELDATE
            , DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','취소','')  ISPROPOSEAPPROVAL
            , A.CHKFINAL, A.CANCELKIND
            , C.SUBJNM, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
            , A.APPDATE, C.EDUSTART, C.EDUEND
            , C.CPSUBJSEQ, D.CPSUBJ
            , CASE WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN ''
                   ELSE TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') || TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')
              END EDUDATE
            , CASE WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN 'N'
                   WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.EDUSTART AND C.EDUEND THEN 'Y'
                   ELSE 'N'
              END ABLESTUDYYN
            , D.USEBOOK, D.BOOKNAME, A.APPBOOKYN
            , D.ISONOFF, GET_CODENM('0001', D.ISONOFF) ISONOFFNM
            , D.OUTSOURCINGTYPE
        FROM T_LMS_PROPOSE A
            , ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ
                    , AA.SUBJ||AA.YEAR||AA.SUBJSEQ SUBJORDER
                    , 'C' SUBJTYPE
                    , 0 IDX
                    , BB.FINISHTREATRULE
                FROM T_LMS_SUBJSEQ AA, T_LMS_SUBJ BB
                WHERE AA.SUBJ = BB.SUBJ AND AA.SUBJTYPE = 'C' /*AND SUBSTR(AA.EDUSTART, 0,8) > TO_CHAR(SYSDATE,'YYYYMMDD')*/
                UNION ALL
                SELECT  AA.CONSUBJID SUBJ, AA.CONYEAR YEAR, AA.CONSUBJSEQ SUBJSEQ
                    , AA.SUBJ||AA.YEAR||AA.SUBJSEQ||AA.CONSUBJID||AA.CONYEAR||AA.CONSUBJSEQ SUBJORDER
                    , 'S' SUBJTYPE
                    , ROW_NUMBER() OVER ( PARTITION BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ORDER BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ) IDX
                    , (SELECT FINISHTREATRULE FROM T_LMS_SUBJ WHERE SUBJ = AA.SUBJ) FINISHTREATRULE
                FROM T_LMS_SUBJSEQRELATE AA ) B
            , T_LMS_SUBJSEQ C
            , T_LMS_SUBJ D
        WHERE A.SUBJ = B.SUBJ AND A.YEAR= B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
            AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
            AND A.SUBJ = D.SUBJ
            AND A.CHKFINAL = 'Y'
            AND A.USERID = #p_userid#
        ORDER BY SUBJORDER  ]]>
	</select>

	<select id="selectProposeUserPre" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectProposeUserPre */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , B.SUBJORDER, B.SUBJTYPE, B.FINISHTREATRULE
            , B.IDX
            , A.APPROVALUSERID, APPROVALDATE
            , A.CANCELUSERID, A.CANCELDATE
            , DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','취소','')  ISPROPOSEAPPROVAL
            , A.CHKFINAL, A.CANCELKIND
            , C.SUBJNM, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
            , A.APPDATE, C.EDUSTART, C.EDUEND
            , C.CPSUBJSEQ, D.CPSUBJ
            , CASE WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN ''
                   ELSE TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') || '~' || TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')
              END EDUDATE
            , CASE WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN 'N'
                   WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.EDUSTART AND C.EDUEND THEN 'Y'
                   ELSE 'N'
              END ABLESTUDYYN
            , D.USEBOOK, D.BOOKNAME, A.APPBOOKYN
            , D.ISONOFF, GET_CODENM('0001', D.ISONOFF) ISONOFFNM
            , D.OUTSOURCINGTYPE
        FROM T_LMS_PROPOSE A
            , ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ
                    , AA.SUBJ||AA.YEAR||AA.SUBJSEQ SUBJORDER
                    , 'C' SUBJTYPE
                    , 0 IDX
                    , BB.FINISHTREATRULE
                FROM T_LMS_SUBJSEQ AA, T_LMS_SUBJ BB
                WHERE AA.SUBJ = BB.SUBJ AND AA.SUBJTYPE = 'C' AND SUBSTR(AA.EDUSTART, 0,8) > TO_CHAR(SYSDATE,'YYYYMMDD')
                UNION ALL
                SELECT  AA.CONSUBJID SUBJ, AA.CONYEAR YEAR, AA.CONSUBJSEQ SUBJSEQ
                    , AA.SUBJ||AA.YEAR||AA.SUBJSEQ||TRIM(TO_CHAR(AA.CONSUBJID,'0000'))||AA.CONYEAR||AA.CONSUBJSEQ SUBJORDER
                    , 'S' SUBJTYPE
                    , ROW_NUMBER() OVER ( PARTITION BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ORDER BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ) IDX
                    , (SELECT FINISHTREATRULE FROM T_LMS_SUBJ WHERE SUBJ = AA.SUBJ) FINISHTREATRULE
                FROM T_LMS_SUBJSEQRELATE AA ) B
            , T_LMS_SUBJSEQ C
            , T_LMS_SUBJ D
        WHERE A.SUBJ = B.SUBJ AND A.YEAR= B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
            AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
            AND A.SUBJ = D.SUBJ
            AND A.CHKFINAL = 'Y'
            AND SUBSTR(C.EDUSTART, 0,8) > TO_CHAR(SYSDATE,'YYYYMMDD')
            AND A.USERID = #p_userid#
        ORDER BY SUBJORDER  ]]>
	</select>

	 <!-- 만약 교육이 시작되었더라도 결제 완료가 되지 않았다면(이러닝의 경우) 4차 개발 개강 후 취소 가능 기능 1074번째 줄 -->
	<select id="selectProposeUserPreB2C" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectProposeUserPreB2C */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
            , B.ISONOFF, GET_CODENM('0001', B.ISONOFF) ISONOFFNM
            , A.SUBJNM, B.TRAININGCLASS, B.ISINSTALLMENT
            , TO_NUMBER(A.SUBJSEQGR) SUBJSEQGR
            , CASE WHEN D.APPDATE IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(D.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
              END APPDATE
            , A.EDUSTART, A.EDUEND
            , CASE WHEN A.EDUSTART IS NULL OR A.EDUEND IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDD'),'YYYY.MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDD'),'YYYY.MM.DD')
              END EDUDATA
            , D.CHKFINAL
            , CASE WHEN D.CHKFINAL IS NULL THEN '-'
                   WHEN D.CHKFINAL = 'Y' THEN '승인'
                   WHEN D.CHKFINAL = 'N' THEN '취소'
                   ELSE '대기'
              END CHKFINALNM
            , DECODE(E.PAPERPASSYN,NULL,'-','Y','합격','N','불합격') PAPERPASSYN
            , DECODE(E.INTERVIEWPASSYN,NULL,'-','Y','합격','N','불합격') INTERVIEWPASSYN
            , DECODE(E.SUBJ,NULL,'N','Y') VOLUNTEERYN
            , CASE WHEN B.ISINSTALLMENT = 'Y'
                     THEN ( SELECT AA.SEQ
                            FROM T_LMS_PAYMENT AA
                                , T_LMS_PROPOSEPAYINSTALL BB
                            WHERE AA.TID = BB.TID
                                AND AA.SUBJ = A.SUBJ AND AA.YEAR = A.YEAR AND AA.SUBJSEQ = A.SUBJSEQ AND AA.USERID = D.USERID )
                   ELSE F.SEQ
              END SEQ
            , CASE WHEN B.ISINSTALLMENT = 'Y'
                     THEN ( SELECT AA.RECOGSTATE
                            FROM T_LMS_PAYMENT AA
                                , T_LMS_PROPOSEPAYINSTALL BB
                            WHERE AA.TID = BB.TID
                                AND AA.SUBJ = A.SUBJ AND AA.YEAR = A.YEAR AND AA.SUBJSEQ = A.SUBJSEQ AND AA.USERID = D.USERID )
                   ELSE F.RECOGSTATE
              END RECOGSTATE
        FROM T_LMS_SUBJSEQ A
            , T_LMS_SUBJ B
            , ( SELECT DISTINCT A.SUBJ, A.YEAR, A.SUBJSEQ
                FROM T_LMS_SUBJSEQ A
                    , ( SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_VOLUNTEER A
                        WHERE USERID = #p_userid#
                        UNION
                        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_PROPOSE A
                            , T_LMS_SUBJSEQ B
                        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
                            AND A.USERID = #p_userid# ) B
                WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND A.SUBJTYPE = 'C'
              ) C
            , T_LMS_PROPOSE D
            , T_LMS_VOLUNTEER E
            , T_LMS_PAYMENT F
        WHERE A.SUBJ = B.SUBJ
            AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
            AND (((B.TRAININGCLASS = '11' AND D.CHKFINAL IN ('M','B')) OR (B.TRAININGCLASS != '11' AND TO_DATE(A.EDUSTART,'YYYYMMDD') > SYSDATE))
            OR ((B.TRAININGCLASS = '01' AND D.CHKFINAL IN ('M','B')) AND (B.TRAININGCLASS != '11' AND TO_DATE(A.EDUSTART,'YYYYMMDD') < SYSDATE))
            OR ((B.TRAININGCLASS = '09' AND D.CHKFINAL IN ('M','B')) AND (B.TRAININGCLASS != '11' AND TO_DATE(A.EDUSTART,'YYYYMMDD') < SYSDATE))
            OR ((B.TRAININGCLASS = '10' AND D.CHKFINAL IN ('M','B')) AND (B.TRAININGCLASS != '11' AND TO_DATE(A.EDUSTART,'YYYYMMDD') < SYSDATE))
            OR ((B.TRAININGCLASS = '05' AND D.CHKFINAL IN ('M','B')) AND (B.TRAININGCLASS != '11' AND TO_DATE(A.EDUSTART,'YYYYMMDD') < SYSDATE))
            )
            AND A.SUBJ = D.SUBJ(+) AND A.YEAR = D.YEAR(+) AND A.SUBJSEQ = D.SUBJSEQ(+) AND D.USERID(+) = #p_userid#
            AND A.SUBJ = E.SUBJ(+) AND A.YEAR = E.YEAR(+) AND A.SUBJSEQ = E.SUBJSEQ(+) AND E.USERID(+) = #p_userid#
            AND D.TID = F.TID(+)
        ORDER BY A.EDUSTART DESC  ]]>
	</select>

	<select id="selectProposeUserIng" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeUserIng */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, B.CSUBJ, B.CYEAR, B.CSUBJSEQ
		, B.SUBJORDER, B.SUBJTYPE, B.FINISHTREATRULE
		, B.IDX
		, A.TSTEP
		, ( SELECT COUNT(1)
		FROM T_LMS_PROJORD
		WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ ) PROJCNT
		, ( SELECT COUNT(1)
		FROM T_LMS_PROJREP
		WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ
		AND USERID = A.USERID AND ISRET IN ('Y','N') ) PROJAPPLYCNT
		, ( SELECT COUNT(1)
		FROM T_LMS_EXAMPAPER
		WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ ) EXAMCNT
		, ( SELECT COUNT(1)
		FROM T_LMS_EXAMPAPER AA
		, T_LMS_EXAMRESULT BB
		WHERE AA.SUBJ = BB.SUBJ AND AA.YEAR = BB.YEAR AND AA.SUBJSEQ = BB.SUBJSEQ
		AND AA.EXAMNO = BB.EXAMNO
		AND AA.SUBJ = A.SUBJ AND AA.YEAR = A.YEAR AND AA.SUBJSEQ = A.SUBJSEQ
		AND BB.USERID = A.USERID ) EXAMAPPLYCNT
		, C.SUBJNM, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
		, DECODE(D.TRAININGCLASS,'11',A.EDUSTART,C.EDUSTART) EDUSTART,
		DECODE(D.TRAININGCLASS,'11',A.EDUEND,C.EDUEND) EDUEND
		, C.CPSUBJSEQ, D.CPSUBJ
		, CASE WHEN D.TRAININGCLASS = '11' THEN
		TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')||'~'||TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
		ELSE
		TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')||'~'||TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
		END EDUDATE
		, CASE WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN 'N'
		WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.EDUSTART AND C.EDUEND THEN
		'Y'
		ELSE 'N'
		END ABLESTUDYYN
		, D.USEBOOK, D.BOOKNAME
		, D.ISONOFF, GET_CODENM('0001', D.ISONOFF) ISONOFFNM
		, D.OUTSOURCINGTYPE
		FROM T_LMS_STUDENT A
		, ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ
		, AA.SUBJ CSUBJ, AA.YEAR CYEAR, AA.SUBJSEQ CSUBJSEQ
		, AA.SUBJ||AA.YEAR||AA.SUBJSEQ SUBJORDER
		, 'C' SUBJTYPE
		, 0 IDX
		, BB.FINISHTREATRULE
		FROM T_LMS_SUBJSEQ AA, T_LMS_SUBJ BB
		WHERE AA.SUBJ = BB.SUBJ AND AA.SUBJTYPE = 'C'
		UNION ALL
		SELECT AA.CONSUBJID SUBJ, AA.CONYEAR YEAR, AA.CONSUBJSEQ SUBJSEQ
		, AA.SUBJ CSUBJ, AA.YEAR CYEAR, AA.SUBJSEQ CSUBJSEQ
		, AA.SUBJ||AA.YEAR||AA.SUBJSEQ||AA.CONSUBJID||AA.CONYEAR||AA.CONSUBJSEQ
		SUBJORDER
		, 'S' SUBJTYPE
		, ROW_NUMBER() OVER ( PARTITION BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ORDER
		BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ) IDX
		, (SELECT FINISHTREATRULE FROM T_LMS_SUBJ WHERE SUBJ = AA.SUBJ)
		FINISHTREATRULE
		FROM T_LMS_SUBJSEQRELATE AA
		, T_LMS_SUBJSEQ BB
		WHERE AA.SUBJ = BB.SUBJ AND AA.YEAR = BB.YEAR AND AA.SUBJSEQ = BB.SUBJSEQ
		) B
		, T_LMS_SUBJSEQ C
		, T_LMS_SUBJ D
		WHERE A.SUBJ = B.SUBJ AND A.YEAR= B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
		AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
		AND A.SUBJ = D.SUBJ AND C.SUBJTYPE = 'C'
		<isNotEmpty property="goldpathYN">
			<isEqual property="goldpathYN" compareValue="Y">
				AND D.TRAININGCLASS = '11'
				AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.EDUSTART AND A.EDUEND
			</isEqual>
		</isNotEmpty>
		<isEmpty property="goldpathYN">
			AND D.TRAININGCLASS != '11'
			AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN C.EDUSTART AND C.EDUEND
		</isEmpty>
		AND A.USERID = #p_userid#
		ORDER BY SUBJORDER
	</select>

	<select id="selectRefundSubjIng" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectRefundSubjIng */
		SELECT RECOGSTATE FROM T_LMS_PAYMENT WHERE SUBJ=#p_subj# AND YEAR=#p_year#
		AND SUBJSEQ=#p_subjseq# AND USERID=#p_userid#
	</select>

	<!-- select id="selectProposeUserIng" resultClass="cmap" parameterClass="cmap"> 
		/* propose.selectProposeUserIng */ SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID 
		, B.CSUBJ, B.CYEAR, B.CSUBJSEQ , A.TSTEP , ( SELECT COUNT(1) FROM T_LMS_PROJORD 
		WHERE SUBJ = B.SUBJ AND YEAR = B.YEAR AND SUBJSEQ = B.SUBJSEQ ) PROJCNT , 
		( SELECT COUNT(1) FROM T_LMS_PROJREP WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR 
		AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID AND ISRET IN ('Y','N') ) PROJAPPLYCNT 
		, ( SELECT COUNT(1) FROM T_LMS_EXAMPAPER WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR 
		AND SUBJSEQ = A.SUBJSEQ ) EXAMCNT , ( SELECT COUNT(1) FROM T_LMS_EXAMPAPER 
		AA , T_LMS_EXAMRESULT BB WHERE AA.SUBJ = BB.SUBJ AND AA.YEAR = BB.YEAR AND 
		AA.SUBJSEQ = BB.SUBJSEQ AND AA.EXAMNO = BB.EXAMNO AND AA.SUBJ = A.SUBJ AND 
		AA.YEAR = A.YEAR AND AA.SUBJSEQ = A.SUBJSEQ AND BB.USERID = A.USERID ) EXAMAPPLYCNT 
		, C.SUBJNM SUBJECTNM, (SELECT SUBJNM FROM T_LMS_SUBJ WHERE SUBJ = B.CSUBJ) 
		SUBJNM , (SELECT FINISHTREATRULE FROM T_LMS_SUBJ WHERE SUBJ = B.CSUBJ) FINISHTREATRULE 
		, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR , C.EDUSTART, C.EDUEND , C.CPSUBJSEQ, 
		D.CPSUBJ , TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(C.EDUSTART,NULL,DECODE(C.EDUEND,NULL,'','~'),'~') 
		|| TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE , CASE 
		WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN 'N' WHEN TO_CHAR(SYSDATE, 
		'YYYYMMDD') BETWEEN C.EDUSTART AND C.EDUEND THEN 'Y' ELSE 'N' END ABLESTUDYYN 
		, D.USEBOOK, D.BOOKNAME , D.ISONOFF, GET_CODENM('0001', D.ISONOFF) ISONOFFNM 
		, D.OUTSOURCINGTYPE FROM T_LMS_STUDENT A , ( SELECT CONSUBJID SUBJ, CONYEAR 
		YEAR, CONSUBJSEQ SUBJSEQ, SUBJ CSUBJ, YEAR CYEAR, SUBJSEQ CSUBJSEQ FROM T_LMS_SUBJSEQRELATE 
		) B , T_LMS_SUBJSEQ C , T_LMS_SUBJ D WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR 
		AND A.SUBJSEQ = B.SUBJSEQ AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ 
		= C.SUBJSEQ AND A.SUBJ = D.SUBJ AND C.SUBJTYPE = 'S' AND TO_CHAR(SYSDATE,'YYYYMMDD') 
		BETWEEN C.EDUSTART AND C.EDUEND AND A.USERID = #p_userid# </select -->

	<!-- select id="selectProposeUserDone" resultClass="cmap" parameterClass="cmap"> 
		<![CDATA[ SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID,A.LDATE,A.ISBLSUB ,A.TSTEP 
		,B.SUBJNM, TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR ,B.EDUSTART, B.EDUEND ,B.CPSUBJSEQ, 
		C.CPSUBJ ,TO_CHAR(TO_DATE(B.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(B.EDUSTART,NULL,DECODE(B.EDUEND,NULL,'','~'),'~') 
		||TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE , TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS') 
		+ 1,'YYYY/MM/DD') REVIEWSTART , TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS') 
		+ NVL(C.REVIEWDAY, 150) + 1,'YYYY/MM/DD') REVIEWEND , CASE WHEN TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS') 
		+ 1 >= SYSDATE AND TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS') + C.REVIEWDAY + 1 
		<= SYSDATE AND C.REVIEWDAY IS NOT NULL THEN 'Y' ELSE 'N' END ISREVIEW ,C.USEBOOK, 
		C.BOOKNAME ,GET_CODENM('0001',C.ISONOFF) ISONOFFNM, ISONOFF, ISBLSUB ,C.OUTSOURCINGTYPE 
		,CASE WHEN ISBLSUB = 'Y' THEN D.SUBJ || D.YEAR || D.SUBJSEQ ELSE A.SUBJ || 
		A.YEAR || A.SUBJSEQ END PSUBJ ,CASE WHEN ISBLSUB = 'Y' THEN D.SUBJORDER ELSE 
		0 END SUBJORDER , NVL(E.TSTEP, '') TSTEP , NVL(E.MTEST, '') MTEST , NVL(E.FTEST, 
		'') FTEST , NVL(E.REPORT, '') REPORT , NVL(E.ISGRADUATED, '') ISGRADUATED 
		, NVL(E.SCORE, '') SCORE , E.SUBJ_OLD FROM T_LMS_STUDENT A, T_LMS_SUBJSEQ 
		B, T_LMS_SUBJ C, (SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ ,AA.CONSUBJID, AA.CONYEAR, 
		AA.CONSUBJSEQ ,AA.SUBJORDER, BB.EDUSTART, BB.EDUEND FROM T_LMS_SUBJSEQRELATE 
		AA, T_LMS_SUBJSEQ BB WHERE AA.SUBJ = BB.SUBJ AND AA.YEAR = BB.YEAR AND AA.SUBJSEQ 
		= BB.SUBJSEQ ) D, T_LMS_STOLD E WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR 
		AND A.SUBJSEQ = B.SUBJSEQ AND A.SUBJ = C.SUBJ AND A.USERID = #p_userid# AND 
		A.SUBJ = D.CONSUBJID(+) AND A.YEAR = D.CONYEAR(+) AND A.SUBJSEQ = D.CONSUBJSEQ(+) 
		AND A.SUBJ = E.SUBJ(+) AND A.YEAR = E.YEAR(+) AND A.SUBJSEQ = E.SUBJSEQ(+) 
		AND A.USERID = E.USERID(+) AND (SUBSTR(B.EDUEND, 0,8) < TO_CHAR(SYSDATE,'YYYYMMDD') 
		OR SUBSTR(D.EDUEND, 0,8) > TO_CHAR(SYSDATE,'YYYYMMDD') ) ]]> <isNotEmpty 
		property="p_year"> AND A.YEAR = #p_year# </isNotEmpty> <isNotEmpty property="p_isonoff"> 
		AND C.ISONOFF = #p_isonoff# </isNotEmpty> ORDER BY A.LDATE DESC, SUBJORDER 
		ASC </select -->

	<select id="selectProposeUserDone" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeUserDone */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, C.SUBJTYPE, B.SUBJNM, TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR
		, C.TRAININGCLASS, C.ISONOFF, GET_CODENM('0001',C.ISONOFF) ISONOFFNM,
		C.OUTSOURCINGTYPE
		, DECODE(C.TRAININGCLASS,'11',A.EDUSTART,B.EDUSTART) EDUSTART,
		DECODE(C.TRAININGCLASS,'11',A.EDUEND,B.EDUEND) EDUEND
		, B.CPSUBJSEQ, C.CPSUBJ
		, CASE WHEN NVL(B.EDUSTART,'') = '' OR NVL(B.EDUEND,'') = '' THEN ''
		ELSE
		TO_CHAR(TO_DATE(DECODE(C.TRAININGCLASS,'11',A.EDUSTART,B.EDUSTART),'YYYYMMDDHH24MISS'),'YYYY/MM/DD')
		||' ~ '||
		TO_CHAR(TO_DATE(DECODE(C.TRAININGCLASS,'11',A.EDUEND,B.EDUEND),'YYYYMMDDHH24MISS'),'YYYY/MM/DD')
		END EDUDATE
		,
		TO_CHAR(TO_DATE(DECODE(C.TRAININGCLASS,'11',A.EDUEND,B.EDUEND),'YYYYMMDD')
		+ 1,'YYYY/MM/DD') REVIEWSTART
		,
		TO_CHAR(TO_DATE(DECODE(C.TRAININGCLASS,'11',A.EDUEND,B.EDUEND),'YYYYMMDD')
		+ NVL(B.REVIEWDAY, 150) + 1,'YYYY/MM/DD') REVIEWEND
		, CASE WHEN SYSDATE BETWEEN
		TO_DATE(DECODE(C.TRAININGCLASS,'11',A.EDUEND,B.EDUEND),'YYYYMMDD') + 1
		AND TO_DATE(DECODE(C.TRAININGCLASS,'11',A.EDUEND,B.EDUEND),'YYYYMMDD')
		+ NVL(C.REVIEWDAY,150) + 1 THEN 'Y'
		ELSE 'N'
		END ISREVIEW
		, C.USEBOOK, C.BOOKNAME
		, NVL(NVL(D.TSTEP,A.TSTEP), '') TSTEP
		, NVL(NVL(D.MTEST,A.MTEST), '') MTEST
		, NVL(NVL(D.FTEST,A.FTEST), '') FTEST
		, NVL(NVL(D.REPORT,A.REPORT), '') REPORT
		, NVL(D.ISGRADUATED, '') ISGRADUATED
		, NVL(NVL(D.SCORE,A.SCORE), '') SCORE
		FROM T_LMS_STUDENT A
		, T_LMS_SUBJSEQ B
		, T_LMS_SUBJ C
		, T_LMS_STOLD D
		WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
		AND A.SUBJ = C.SUBJ AND C.SUBJTYPE = 'C'
		AND A.SUBJ = D.SUBJ(+) AND A.YEAR = D.YEAR(+) AND A.SUBJSEQ =
		D.SUBJSEQ(+) AND A.USERID = D.USERID(+)
		AND ((C.TRAININGCLASS = '11' AND TO_DATE(A.EDUEND,'YYYYMMDD') <![CDATA[<]]>
		SYSDATE) OR (C.TRAININGCLASS != '11' AND TO_DATE(B.EDUEND,'YYYYMMDD') <![CDATA[<]]>
		SYSDATE))
		AND A.USERID = #p_userid#
		<isNotEmpty property="p_year">
			AND B.YEAR = #p_year#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
	</select>

	<select id="selectProposeUserSel" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeUserSel */
		SELECT *
		FROM ( SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, ROWNUM IDX
		, NULL GROUPID, NULL SEQ, NULL CONTSID, NULL ITEMID
		, C.OPENSUBJNM TITLE
		, CASE WHEN b.APPDATE IS NULL THEN '-'
		ELSE TO_CHAR(TO_DATE(b.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
		END APPDATE
		, A.EDUSTART, A.EDUEND
		, CASE WHEN A.EDUSTART IS NULL and A.EDUEND IS NULL THEN '-'
		ELSE TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDD'),'YYYY.MM.DD') || ' ~ ' ||
		TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDD'),'YYYY.MM.DD')
		END EDUDATA
		, 1 DEPTH
		, A.SUBJ||A.YEAR||A.SUBJSEQ SUBJORDER
		FROM T_LMS_STUDENT A
		, T_LMS_PROPOSE B
		, T_LMS_OPENSUBJ C
		WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND
		A.USERID = B.USERID
		AND A.SUBJ = C.OPENSUBJID
		AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.EDUSTART AND A.EDUEND
		AND A.USERID = #p_userid#
		UNION ALL
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, ROWNUM IDX
		, C.GROUPID, NULL SEQ, NULL CONTSID, NULL ITEMID
		, C.GROUPNM TITLE
		, '' APPDATE
		, A.EDUSTART, A.EDUEND
		, '' EDUDATA
		, 2 DEPTH
		, A.SUBJ||A.YEAR||A.SUBJSEQ||C.GROUPID SUBJORDER
		FROM T_LMS_STUDENT A
		, T_LMS_PROPOSEOPENSUBJ B
		, T_LMS_OPENSUBJ_GROUP C
		WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND
		A.USERID = B.USERID
		AND B.GROUPID = C.GROUPID
		AND A.SUBJ = C.OPENSUBJID
		AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.EDUSTART AND A.EDUEND
		AND A.USERID = #p_userid#
		UNION ALL
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, ROWNUM IDX
		, D.GROUPID, D.SEQ, D.CONTSID, D.ITEMID
		, F.ITEMNM TITLE
		, '' APPDATE
		, A.EDUSTART, A.EDUEND
		, '' EDUDATA
		, 3 DEPTH
		, A.SUBJ||A.YEAR||A.SUBJSEQ||D.GROUPID||D.CONTSID||D.ITEMID SUBJORDER
		FROM T_LMS_STUDENT A
		, T_LMS_PROPOSEOPENSUBJ B
		, T_LMS_OPENSUBJ_GROUP C
		, T_LMS_OPENSUBJ_ITEM D
		, T_LMS_OPENSUBJ E
		, T_CDMS_ITEM F
		WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND
		A.USERID = B.USERID
		AND B.GROUPID = C.GROUPID
		AND A.SUBJ = C.OPENSUBJID
		AND B.GROUPID = D.GROUPID
		AND A.SUBJ = E.OPENSUBJID
		AND D.CONTSID = F.CONTSID AND D.ITEMID = F.ITEMID
		AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.EDUSTART AND A.EDUEND
		AND A.USERID = #p_userid#
		)
		ORDER BY SUBJORDER
	</select>

	<select id="selectProposeUser2009Done" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[
	          SELECT E.SUBJ,
	                 E.YEAR,
	                 E.SUBJSEQ,
	                 E.USERID,
			         E.TSTEP,
			         C.SUBJNM,
			         TO_NUMBER(E.SUBJSEQGR) SUBJSEQGR,
			         E.EDUSTART,
			         E.EDUEND,
			         C.CPSUBJ,
			        TO_CHAR(TO_DATE(E.EDUSTART,'YYYYMMDD'),'YYYY/MM/DD')||DECODE(E.EDUSTART,NULL,DECODE(E.EDUEND,NULL,'','~'),'~') ||TO_CHAR(TO_DATE(E.EDUEND,'YYYYMMDD'),'YYYY/MM/DD') EDUDATE ,
			        TO_CHAR(TO_DATE(E.EDUEND,'YYYYMMDD') + 1,'YYYY/MM/DD') REVIEWSTART ,
			 	    TO_CHAR(TO_DATE(E.EDUEND,'YYYYMMDD') + NVL(C.REVIEWDAY, 150) + 1,'YYYY/MM/DD') REVIEWEND,
			 	    CASE WHEN  TO_DATE(E.EDUEND,'YYYYMMDD') + 1 >= SYSDATE
			 	 						AND TO_DATE(E.EDUEND,'YYYYMMDD') + C.REVIEWDAY + 1 <= SYSDATE
                                        AND C.REVIEWDAY IS NOT NULL
			 	 		 THEN 'Y' ELSE 'N' END ISREVIEW,
			        C.USEBOOK,
			        C.BOOKNAME ,
			        GET_CODENM('0001',C.ISONOFF) ISONOFFNM,
			        C.ISONOFF,
			        C.OUTSOURCINGTYPE ,
			        '0' SUBJORDER,
			        NVL(E.TSTEP, '') TSTEP,
			        NVL(E.MTEST, '') MTEST,
			        NVL(E.FTEST, '') FTEST,
			        NVL(E.REPORT, '') REPORT,
			        NVL(E.ISGRADUATED, '') ISGRADUATED,
			        NVL(E.SCORE, '') SCORE,
			        E.SUBJ_OLD
			   FROM T_LMS_SUBJ C,
			        T_LMS_STOLD E
		       WHERE C.SUBJ	 = E.SUBJ
		         AND E.USERID = #p_userid#
		         AND E.YEAR = #p_year#
		 ]]>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
	</select>

	<select id="selectProposeUserALLDone" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeUserALLDone */
		SELECT AA.* FROM (
		SELECT A.SUBJ,
		A.YEAR,
		A.SUBJSEQ,
		A.USERID,
		A.LDATE,
		A.ISBLSUB,
		B.SUBJNM,
		TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR,
		B.EDUSTART,
		B.EDUEND,
		B.CPSUBJSEQ,
		C.CPSUBJ,
		TO_CHAR(TO_DATE(B.EDUSTART,'YYYYMMDD'),'YYYY/MM/DD')||DECODE(B.EDUSTART,NULL,DECODE(B.EDUEND,NULL,'','~'),'~')||TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDD'),'YYYY/MM/DD')
		EDUDATE,
		TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDD') + 1,'YYYY/MM/DD')
		REVIEWSTART,
		TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDD') + NVL(C.REVIEWDAY,
		150) + 1,'YYYY/MM/DD') REVIEWEND,
		CASE WHEN
		TO_DATE(B.EDUEND,'YYYYMMDD') + 1 &gt;= SYSDATE
		AND
		TO_DATE(B.EDUEND,'YYYYMMDD') + C.REVIEWDAY + 1 &lt;= SYSDATE
		AND
		C.REVIEWDAY IS NOT NULL
		THEN 'Y' ELSE 'N' END ISREVIEW,
		C.USEBOOK,
		C.BOOKNAME,
		GET_CODENM('0001',C.ISONOFF) ISONOFFNM,
		ISONOFF,
		C.OUTSOURCINGTYPE,
		CASE WHEN A.ISBLSUB = 'Y' THEN D.SUBJ || D.YEAR ||
		D.SUBJSEQ
		ELSE A.SUBJ || A.YEAR || A.SUBJSEQ
		END PSUBJ,
		CASE WHEN
		A.ISBLSUB = 'Y' THEN
		D.SUBJORDER
		ELSE 0
		END SUBJORDER,
		NVL(E.TSTEP, '')
		TSTEP,
		NVL(E.MTEST, '') MTEST,
		NVL(E.FTEST, '') FTEST,
		NVL(E.REPORT, '')
		REPORT,
		NVL(E.ISGRADUATED, '') ISGRADUATED,
		NVL(E.SCORE, '') SCORE,
		E.SUBJ_OLD,
		E.SUBJSEQ_OLD
		FROM T_LMS_STUDENT A, T_LMS_SUBJSEQ B,
		T_LMS_SUBJ C,
		(SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ
		,AA.CONSUBJID,
		AA.CONYEAR, AA.CONSUBJSEQ
		,AA.SUBJORDER, BB.EDUSTART, BB.EDUEND
		FROM
		T_LMS_SUBJSEQRELATE AA, T_LMS_SUBJSEQ BB
		WHERE AA.SUBJ = BB.SUBJ
		AND
		AA.YEAR = BB.YEAR
		AND AA.SUBJSEQ = BB.SUBJSEQ
		) D, T_LMS_STOLD E
		WHERE
		A.SUBJ = B.SUBJ
		AND A.YEAR = B.YEAR
		AND A.SUBJSEQ = B.SUBJSEQ
		AND A.SUBJ
		= C.SUBJ
		AND A.USERID = #p_userid#
		AND A.SUBJ = D.CONSUBJID(+)
		AND A.YEAR
		= D.CONYEAR(+)
		AND A.SUBJSEQ = D.CONSUBJSEQ(+)
		AND A.SUBJ = E.SUBJ(+)
		AND A.YEAR = E.YEAR(+)
		AND A.SUBJSEQ = E.SUBJSEQ(+)
		AND A.USERID =
		E.USERID(+)
		AND (B.EDUEND &lt; TO_CHAR(SYSDATE,'YYYYMMDD') OR
		SUBSTR(D.EDUEND, 0,8)
		&gt; TO_CHAR(SYSDATE,'YYYYMMDD') )
		AND A.YEAR =
		#p_year#
		AND '2010' &lt;= #p_year#
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		UNION ALL
		SELECT E.SUBJ,
		E.YEAR,
		E.SUBJSEQ,
		E.USERID,
		'' LDATE,
		'N' ISBLSUB,
		C.SUBJNM,
		TO_NUMBER(E.SUBJSEQGR) SUBJSEQGR,
		E.EDUSTART,
		E.EDUEND,
		'0000'
		CPSUBJSEQ,
		C.CPSUBJ,
		TO_CHAR(TO_DATE(E.EDUSTART,'YYYYMMDD'),'YYYY/MM/DD')||DECODE(E.EDUSTART,NULL,DECODE(E.EDUEND,NULL,'','~'),'~')
		||TO_CHAR(TO_DATE(E.EDUEND,'YYYYMMDD'),'YYYY/MM/DD') EDUDATE ,
		TO_CHAR(TO_DATE(E.EDUEND,'YYYYMMDD') + 1,'YYYY/MM/DD') REVIEWSTART ,
		TO_CHAR(TO_DATE(E.EDUEND,'YYYYMMDD') + NVL(C.REVIEWDAY, 150) +
		1,'YYYY/MM/DD') REVIEWEND,
		CASE WHEN TO_DATE(E.EDUEND,'YYYYMMDD') + 1
		&gt;= SYSDATE AND
		TO_DATE(E.EDUEND,'YYYYMMDD') + C.REVIEWDAY + 1 &lt;=
		SYSDATE AND
		C.REVIEWDAY IS NOT NULL
		THEN 'Y' ELSE 'N' END ISREVIEW,
		C.USEBOOK,
		C.BOOKNAME ,
		GET_CODENM('0001',C.ISONOFF) ISONOFFNM,
		C.ISONOFF,
		'N' OUTSOURCINGTYPE ,
		' ' PSUBJ,
		0 SUBJORDER,
		NVL(E.TSTEP, '')
		TSTEP,
		NVL(E.MTEST, '') MTEST,
		NVL(E.FTEST, '') FTEST,
		NVL(E.REPORT, '')
		REPORT,
		NVL(E.ISGRADUATED, '') ISGRADUATED,
		NVL(E.SCORE, '') SCORE,
		E.SUBJ_OLD,
		E.SUBJSEQ_OLD
		FROM T_LMS_SUBJ C,
		T_LMS_STOLD E
		WHERE C.SUBJ =
		E.SUBJ
		AND E.USERID = #p_userid#
		AND E.YEAR = #p_year#
		AND '2010' &gt;=
		#p_year#
		AND E.SUBJ_OLD IS NOT NULL
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
		) AA
		ORDER BY AA.LDATE DESC,
		AA.SUBJORDER ASC

	</select>

	<!-- 과정운영 > 입과관리 > 리스트 -->
	<select id="selectStudentManagerPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectStudentManagerPageList */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, C.SUBJNM, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
		    , C.GRCODE, C.GYEAR, C.GRSEQ, C.PROPSTART, C.PROPEND
		    , PAPERPASSYN, BILLSTAT, CANCELKIND
		    , A.APPDATE, A.APPBOOKYN, ISDINSERT
            , CASE WHEN SUBSTR(C.PROPSTART,0,8) > TO_CHAR(SYSDATE,'YYYYMMDD') THEN 'Y' ELSE 'N' END APPSTATUS
            , CASE WHEN B.USEBOOK='Y' OR B.ISONOFF='READ' THEN 'Y' ELSE 'N' END USEBOOK
            , E.ISGRADUATED, DECODE(E.ISGRADUATED, 'Y', '수료', 'N', '미수료', '미처리') ISGRADUATEDNM
            , A.CHKFINAL
            , CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
                   WHEN A.CHKFINAL = 'Y'        THEN '승인'
                   WHEN A.CHKFINAL = 'N'        THEN '취소'
              END CHKFINALNM
		    , A.USERID, D.NAME
		    , D.HANDPHONE, NVL(D.COMPTEL, HOMETEL) TEL
		    , A.COMP, GET_COMPNM(A.COMP) COMPNM
            , D.ISMAILING
		    , A.BUSINESSPLC, GET_COMPNM(A.BUSINESSPLC) BUSINESSPLCNM
		    , A.DEPT, (SELECT ORGNAME FROM T_LMS_ORG WHERE COMP = A.COMP AND ORGCODE = A.DEPT) DEPTNM
		    , A.JIK, (SELECT JIKUPNM FROM T_LMS_JIKUP WHERE COMP = A.COMP AND JIKUP = A.JIK) JIKUPNM
		    , (SELECT F.EDUSTART FROM T_LMS_STUDENT F WHERE F.SUBJ=C.SUBJ AND F.SUBJSEQ=C.SUBJSEQ AND F.USERID=D.USERID) EDUSTART
		FROM T_LMS_PROPOSE A
		    , T_LMS_SUBJ B
		    , T_LMS_SUBJSEQ C
		    , T_LMS_MEMBER D
            , T_LMS_STOLD E
		WHERE A.SUBJ = B.SUBJ AND A.SUBJ = C.SUBJ AND A.SUBJ = E.SUBJ(+)
		    AND A.YEAR = C.YEAR AND A.YEAR = E.YEAR(+)
		    AND A.SUBJSEQ = C.SUBJSEQ AND A.SUBJSEQ = E.SUBJSEQ(+)
		    AND A.USERID = D.USERID AND A.USERID = E.USERID(+)
		    AND B.SUBJTYPE = 'C'
		    AND A.CHKFINAL = 'Y' ]]>
		<isNotEmpty property="p_trainingclass">
			AND B.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND C.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_grseq">
			AND C.GRSEQ = #p_grseq#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND C.GYEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND B.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_trainingarea"> <!-- 수정_2013.11.27 -->
			AND B.TRAININGAREA = #p_trainingarea#
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.COMP = #p_comp#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_isgoyong">
			AND C.ISGOYONG = #p_isgoyong#
		</isNotEmpty>
		<isNotEmpty property="p_cpcomp">
			AND B.CPCOMP = #p_cpcomp#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_1">
			AND C.EDUSTART <![CDATA[ >= ]]>
			#p_edustart_1#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_2">
			AND C.EDUSTART <![CDATA[ <= ]]>
			#p_edustart_2#
		</isNotEmpty>
		<isNotEmpty property="p_sortorder">
			ORDER BY $p_sortorder$
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>

	<!-- select id="selectStudentManagerExcel" resultClass="cmap" parameterClass="cmap"> 
		<![CDATA[ SELECT A.GRCODE, B.SUBJ, B.YEAR, C.ISONOFF , ( SELECT CODENM FROM 
		T_LMS_CODE WHERE GUBUN = '0001' AND CODE = C.ISONOFF ) CODENM , C.SUBJNM, 
		TO_NUMBER(A.SUBJSEQGR) SUBJSEQGR, A.SUBJSEQ , GET_COMPNM(D.COMP) COMPANYNM, 
		D.DEPTNAM, D.JIKUPNM, D.JIKCHEKNM, D.USERID, D.CONO , D.NAME, D.EMAIL, D.RESNO, 
		D.HANDPHONE, D.OFFICE_GBN ,TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')||DECODE(A.EDUSTART,NULL,DECODE(A.EDUEND,NULL,'',' 
		~ '),' ~ ') ||TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') 
		EDUDATE , B.APPDATE, A.EDUSTART, A.EDUEND, CASE WHEN A.ISGOYONG = 'Y' THEN 
		CASE WHEN (SELECT ENTERPRISEYN FROM T_LMS_COMPCLASS WHERE COMP = D.COMP) 
		= 'Y' THEN A.GOYONGPRICE ELSE A.SGOYONGPRICE END ELSE 0 END GOYONGBI , DECODE(B.ISPROPOSEAPPROVAL, 
		'L','-','B','상신중','Y','승인','N','반려','') ISPROPOSEAPPROVAL , B.APPLYGUBUN 
		, CASE WHEN B.CHKFINAL IN ('M','B') THEN '신청' WHEN B.CHKFINAL = 'Y' THEN 
		'승인' WHEN B.CHKFINAL = 'N' AND SUBSTR(B.LDATE,1,10) < A.EDUSTART THEN '취소' 
		WHEN B.CHKFINAL = 'N' AND SUBSTR(B.LDATE,1,10) >= A.EDUSTART THEN '취소' WHEN 
		B.CHKFINAL = 'N' THEN '취소' END CHKFINAL ,B.CANCELKIND , DECODE(E.ISGRADUATED,'Y','수료','N','미수료','미처리') 
		ISGRADUATED , CASE WHEN SUBSTR(A.PROPSTART, 0,8) > TO_CHAR(SYSDATE, 'YYYYMMDD') 
		THEN 'Y' ELSE 'N' END APPSTATUS , CASE WHEN C.USEBOOK = 'Y' OR C.ISONOFF='READ' 
		THEN 'Y' ELSE 'N' END USEBOOK , E.TSTEP , E.MTEST, E.FTEST, E.SCORE, A.BIYONG 
		,F.RCVRZIPCODE ,F.RCVRADDR ,F.RCVRMOBILE, D.sex, D.univnam, D.univmaj, D.jikmunm 
		, D.SYEAR , (SELECT GRCODENM FROM T_LMS_GRCODE WHERE GRCODE =A.GRCODE) GRCODENM 
		, (SELECT GRSEQNM FROM T_LMS_GRSEQ WHERE GRCODE =A.GRCODE AND GYEAR =A.GYEAR 
		AND GRSEQ=A.GRSEQ) GRSEQNM FROM T_LMS_SUBJSEQ A, T_LMS_SUBJ C, T_LMS_PROPOSE 
		B, T_LMS_MEMBER D, T_LMS_STUDENT E, T_LMS_SEND F WHERE C.SUBJ = A.SUBJ AND 
		B.SUBJ = A.SUBJ AND B.YEAR = A.YEAR AND B.SUBJSEQ = A.SUBJSEQ AND D.USERID 
		= B.USERID AND E.SUBJ(+) = B.SUBJ AND E.YEAR(+) = B.YEAR AND E.SUBJSEQ(+) 
		= B.SUBJSEQ AND E.USERID(+) = B.USERID AND F.SUBJ(+) = B.SUBJ AND F.YEAR(+) 
		= B.YEAR AND F.SUBJSEQ(+) = B.SUBJSEQ AND F.USERID(+) = B.USERID AND C.ISUSE 
		= 'Y' AND C.ISAPPROVAL = 'Y' ]]> <isNotEmpty property="p_grcode"> AND A.GRCODE 
		= #p_grcode# </isNotEmpty> <isNotEmpty property="p_grseq"> AND A.GRSEQ = 
		#p_grseq# </isNotEmpty> <isNotEmpty property="p_gyear"> AND A.GYEAR = #p_gyear# 
		</isNotEmpty> <isNotEmpty property="p_subj"> AND A.SUBJ = #p_subj# </isNotEmpty> 
		<isNotEmpty property="p_subjseq"> AND A.SUBJSEQ = #p_subjseq# </isNotEmpty> 
		<isNotEmpty property="p_upperclass"> AND C.UPPERCLASS = #p_upperclass# </isNotEmpty> 
		<isNotEmpty property="p_middleclass"> AND C.MIDDLECLASS = #p_middleclass# 
		</isNotEmpty> <isNotEmpty property="p_lowerclass"> AND C.LOWERCLASS = #p_lowerclass# 
		</isNotEmpty> <isNotEmpty property="p_comp"> AND B.COMP = #p_comp# </isNotEmpty> 
		<isNotEmpty property="p_servicecomp"> AND C.SERVICECOMP = #p_servicecomp# 
		</isNotEmpty> <isNotEmpty property="p_gubun"> AND C.ISONOFF = #p_gubun# </isNotEmpty> 
		<isNotEmpty property="p_userid"> AND ( D.USERID LIKE '%'||#p_userid#||'%' 
		OR D.NAME LIKE '%'||#p_userid#||'%' OR D.CONO LIKE '%'||#p_userid#||'%' ) 
		</isNotEmpty> <isNotEmpty property="p_isgraduated"> AND E.ISGRADUATED = #p_isgraduated# 
		</isNotEmpty> <isNotEmpty property="p_startdt"> <isEqual property="p_enddt" 
		compareValue=""> AND A.EDUSTART BETWEEN REPLACE(#p_startdt#, '/','') AND 
		REPLACE(#p_startdt#, '/','') </isEqual> </isNotEmpty> <isNotEmpty property="p_enddt"> 
		<isEqual property="p_startdt" compareValue=""> AND A.EDUEND BETWEEN REPLACE(#p_enddt#, 
		'/','') AND REPLACE(#p_enddt#, '/','') </isEqual> </isNotEmpty> <isNotEmpty 
		property="p_startdt"> <isNotEmpty property="p_enddt"> AND (A.EDUSTART BETWEEN 
		REPLACE(#p_startdt#, '/','') AND REPLACE(#p_enddt#, '/','') OR A.EDUEND BETWEEN 
		REPLACE(#p_startdt#, '/','') AND REPLACE(#p_enddt#, '/','') ) </isNotEmpty> 
		</isNotEmpty> <isNotEmpty property="p_appstatus"> AND B.CHKFINAL = #p_appstatus# 
		</isNotEmpty> ORDER BY A.GRCODE, A.GRSEQ, A.SUBJ, A.EDUSTART </select -->

	<!-- 과정운영 > 입과관리 > 엑셀다운 -->
	<select id="selectStudentManagerExcel" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectStudentManagerExcel */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, C.SUBJNM, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
		    , C.GRCODE, C.GYEAR, C.GRSEQ, C.PROPSTART, C.PROPEND
		    , PAPERPASSYN, BILLSTAT, CANCELKIND
		    , A.APPDATE, A.APPBOOKYN, ISDINSERT
            , CASE WHEN SUBSTR(C.PROPSTART,0,8) > TO_CHAR(SYSDATE,'YYYYMMDD') THEN 'Y' ELSE 'N' END APPSTATUS
            , CASE WHEN B.USEBOOK='Y' OR B.ISONOFF='READ' THEN 'Y' ELSE 'N' END USEBOOK
            , E.ISGRADUATED, DECODE(E.ISGRADUATED, 'Y', '수료', 'N', '미수료', '미처리') ISGRADUATEDNM
            , A.CHKFINAL
            , CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
                   WHEN A.CHKFINAL = 'Y'        THEN '승인'
                   WHEN A.CHKFINAL = 'N'        THEN '취소'
              END CHKFINALNM
		    , A.USERID, D.NAME
		    , D.HANDPHONE, NVL(D.COMPTEL, HOMETEL) TEL
		    , A.COMP, GET_COMPNM(A.COMP) COMPNM
            , D.ISMAILING
		    , A.BUSINESSPLC, GET_COMPNM(A.BUSINESSPLC) BUSINESSPLCNM
		    , A.DEPT, (SELECT ORGNAME FROM T_LMS_ORG WHERE COMP = A.COMP AND ORGCODE = A.DEPT) DEPTNM
		    , A.JIK, (SELECT JIKUPNM FROM T_LMS_JIKUP WHERE COMP = A.COMP AND JIKUP = A.JIK) JIKUPNM
		FROM T_LMS_PROPOSE A
		    , T_LMS_SUBJ B
		    , T_LMS_SUBJSEQ C
		    , T_LMS_MEMBER D
            , T_LMS_STOLD E
		WHERE A.SUBJ = B.SUBJ AND A.SUBJ = C.SUBJ AND A.SUBJ = E.SUBJ(+)
		    AND A.YEAR = C.YEAR AND A.YEAR = E.YEAR(+)
		    AND A.SUBJSEQ = C.SUBJSEQ AND A.SUBJSEQ = E.SUBJSEQ(+)
		    AND A.USERID = D.USERID AND A.USERID = E.USERID(+)
		    AND B.SUBJTYPE = 'C'
		    AND A.CHKFINAL = 'Y'  ]]>
		<isNotEmpty property="p_trainingclass">
			AND B.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND C.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_grseq">
			AND C.GRSEQ = #p_grseq#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND C.GYEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND B.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.COMP = #p_comp#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_isgoyong">
			AND C.ISGOYONG = #p_isgoyong#
		</isNotEmpty>
		<isNotEmpty property="p_cpcomp">
			AND B.CPCOMP = #p_cpcomp#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_1">
			AND C.EDUSTART <![CDATA[ >= ]]>
			#p_edustart_1#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_2">
			AND C.EDUSTART <![CDATA[ <= ]]>
			#p_edustart_2#
		</isNotEmpty>
		<isNotEmpty property="p_sortorder">
			ORDER BY $p_sortorder$
		</isNotEmpty>
	</select>

	<!-- 결제후 수강신청 정보 업데이트 -->
	<update id="updateProposePay" parameterClass="cmap">
		/* propose.updateProposePay */
		UPDATE T_LMS_PROPOSE
		SET TID = #p_tid#
		, AGREEYN = #p_agreeyn#
		, ABNORMALTYPE = #p_abnormaltype#
		, TRAINEETYPE = #p_traineetype#
		, REFUNDBANKCD = #p_refundbankcd#
		, REFUNDACCOUNT = #p_refundaccount#
		, EMP_COMPNM = #p_empcompnm#
		, EMP_BUSINESSNUM = #p_empbusinessnum#
		, PER_CARDNUM = #p_percardnum#
		, LUSERID = #s_userid#
		, LDATE = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		<isNotEmpty property="p_chkfinal">
			, CHKFINAL = #p_chkfinal#
		</isNotEmpty>
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq#
		AND USERID = #p_userid#
	</update>

	<!-- 결제후 분납결제 과정의 수강신청 정보 업데이트 -->
	<update id="updateProposePayInstall" parameterClass="cmap">
		/* propose.updateProposePayInstall */
		UPDATE T_LMS_PROPOSEPAYINSTALL
		SET TID = #p_tid#
		, LUSERID = #s_userid#
		, LDATE = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq# AND
		USERID = #p_userid# AND INSTALLMENT_SEQ = #p_installment_seq#
	</update>

	<!-- 배송정보 업데이트 -->
	<update id="updateSend" parameterClass="cmap">
		/* propose.updateSend */
		UPDATE T_LMS_SEND
		SET REVRNM = NVL(#p_name#,GET_USERNM(#p_userid#))
		, RCVRTEL = #p_rcvrtel#
		, RCVRMOBILE = #p_rcvrmobile#
		, RCVRZIPCODE = #p_rcvrzipcode#
		, RCVRADDR = #p_rcvraddr#
		, RCVRMSG = #p_rcvrmsg#
		, LUSERID = #s_userid#
		, LDATE = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		, RCVREMAIL= #p_rcvremail#
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq# AND
		USERID = #p_userid#
	</update>

	<!-- 수강신청서에서 사용자의 핸드폰 번호, 이메일이 없을 경우 입력 받아서 업데이트 한다. -->
	<update id="updateMemberInfo2" parameterClass="cmap">
		/* propose.updateMemberInfo2 */
		UPDATE T_LMS_MEMBER
		SET HANDPHONE = NVL(#p_handphone#,(SELECT HANDPHONE FROM T_LMS_MEMBER
		WHERE USERID = #p_userid#))
		, EMAIL = NVL(#p_email#,(SELECT EMAIL FROM T_LMS_MEMBER WHERE USERID =
		#p_userid#))
		WHERE USERID = #p_userid#
	</update>

	<update id="updateKobzMemberInfo2" parameterClass="cmap">
		/* propose.updateKobzMemberInfo2 */
		UPDATE KOBZ_MEMBER_T@KOBZ_MEMBER
		SET SET_HP = NVL(#p_handphone#,(SELECT SET_HP FROM
		KOBZ_MEMBER_T@KOBZ_MEMBER WHERE MEMBER_ID = #p_userid#))
		, EMAIL_ADDR = NVL(#p_email#,(SELECT EMAIL_ADDR FROM
		KOBZ_MEMBER_T@KOBZ_MEMBER WHERE MEMBER_ID = #p_userid#))
		, EM_EMAIL_ADDR = NVL(#p_email#,(SELECT EM_EMAIL_ADDR FROM
		KOBZ_MEMBER_T@KOBZ_MEMBER WHERE MEMBER_ID = #p_userid#))
		WHERE MEMBER_ID = #p_userid#
	</update>

	<select id="selectProposeDetail" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeDetail */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, B.GRCODE, B.GRSEQ, C.MOBILERUNYN
		, B.SUBJNM, C.ISONOFF, GET_CODENM('0001',C.ISONOFF) ISONOFFNM
		, C.TRAININGCLASS, GET_CODENM('0075', C.TRAININGCLASS) TRAININGCLASSNM
		, TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR
		, D.COMP, DECODE(D.COMP,'10000',D.COMPNM,GET_COMPNM(D.COMP)) COMPNM,
		D.JIKCHEKNM
		, D.CONO, D.OFFICE_GBN, D.NAME, A.ENG_NAME, D.EMAIL, D.HANDPHONE,
		D.COMPTEL, D.HOMETEL
		, D.POST1, D.POST2, D.ADDR||' '||D.ADDR2 ADDR
		, F.REVRNM, F.RCVRTEL, F.RCVRMOBILE, F.RCVRZIPCODE, F.RCVRADDR,
		F.RCVRMSG, F.RCVREMAIL
		, TO_CHAR(TO_DATE(A.APPDATE,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') APPDATE
		,
		TO_CHAR(TO_DATE(B.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(B.EDUSTART,NULL,DECODE(B.EDUEND,NULL,'','
		~ '),' ~
		')||TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE
		, B.EDUSTART, B.EDUEND, CEIL(TO_DATE(B.EDUSTART, 'YYYYMMDD') -
		SYSDATE) REMAINDAY
		, A.CHKFINAL, B.ISCLOSED
		, CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
		WHEN A.CHKFINAL = 'Y' THEN '승인'
		WHEN A.CHKFINAL = 'N' AND SUBSTR(A.LDATE,1,10) <![CDATA[<]]>
		B.EDUSTART THEN '취소'
		WHEN A.CHKFINAL = 'N' AND SUBSTR(A.LDATE,1,10) <![CDATA[>=]]>
		B.EDUSTART THEN '취소'
		WHEN A.CHKFINAL = 'N' THEN '취소'
		END CHKFINALNM
		, A.CANCELKIND
		, DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','반려','')
		ISPROPOSEAPPROVAL
		, A.ISB2C
		, DECODE((SELECT ISGRADUATED FROM T_LMS_STOLD WHERE SUBJ = A.SUBJ AND
		YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID =
		A.USERID),'Y','수료','N','미수료','미처리') ISGRADUATED
		, A.COSTSUPPORT, GET_CODENM('0006', A.COSTSUPPORT) COSTSUPPORTNM
		, B.ISINSTALLMENT, A.APPBOOKYN , A.ISOPTSUBJECTSELECT, A.ENG_NAME
		, A.PROOFEMPREALNAME, A.PROOFEMPSAVENAME, A.BIZLICENSEREALNAME,
		A.BIZLICENSESAVENAME
		, A.PRICETYPE, A.PRICE, A.AUTHTYPE, A.AUTHNUM, A.TID, A.AGREEYN,
		A.ABNORMALTYPE, A.TRAINEETYPE
		, A.REFUNDBANKCD, A.REFUNDACCOUNT, A.EMP_COMPNM, A.EMP_BUSINESSNUM,
		A.PER_CARDNUM, A.ISKITACOMPANY
		, E.SEQ, E.PAYMETHOD, E.AMOUNT, A.USEMILEAGE
		, GET_CODENM('0056',E.PAYMETHOD) PAYMETHODNM
		, GET_CODENM('0048', E.RECOGSTATE) PAYSTATUS
		, RECOGSTATE
		FROM T_LMS_PROPOSE A
		, T_LMS_SUBJSEQ B
		, T_LMS_SUBJ C
		, T_LMS_MEMBER D
		, T_LMS_PAYMENT E
		, T_LMS_SEND F
		WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
		AND A.SUBJ = C.SUBJ
		AND A.USERID = D.USERID
		AND A.TID = E.TID(+)
		AND A.SUBJ = F.SUBJ(+) AND A.YEAR = F.YEAR(+) AND A.SUBJSEQ =
		F.SUBJSEQ(+) AND A.USERID = F.USERID(+)
		AND A.SUBJ = #p_subj#
		AND A.YEAR = #p_year#
		AND A.SUBJSEQ = #p_subjseq#
		AND A.USERID = #p_userid#
	</select>

	<!-- 해당 수강에 포함된 BL 과정 목록을 가져온다. -->
	<select id="selectProposeSubBL" resultClass="cmap"
		parameterClass="cmap">
		SELECT B.SUBJ, B.YEAR, B.SUBJSEQ, A.USERID, A.LDATE
		,
		C.SUBJNM, C.ISONOFF, GET_CODENM('0001',C.ISONOFF ) ISONOFFNM
		,
		DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','취소','')
		ISPROPOSEAPPROVAL
		, A.APPLYGUBUN, A.CHKFINAL, A.CANCELKIND, A.ISBLSUB
		FROM T_LMS_PROPOSE A, T_LMS_SUBJSEQRELATE B, T_LMS_SUBJ C
		WHERE A.SUBJ
		= B.CONSUBJID
		AND A.YEAR = B.CONYEAR
		AND A.SUBJSEQ = B.CONSUBJSEQ
		AND
		A.SUBJ = C.SUBJ
		AND A.USERID = #p_userid#
	</select>

	<select id="selectApprovalListB2B" resultClass="cmap"
		parameterClass="cmap">
	   <![CDATA[ /* propose.selectApprovalListB2B */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , C.GRCODE, C.GRSEQ, C.GYEAR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
            , C.SUBJNM, D.ISGOYONG, D.ISONOFF, GET_CODENM('0001',D.ISONOFF ) ISONOFFNM
            , D.TRAININGCLASS, GET_CODENM('0075',D.TRAININGCLASS) TRAININGCLASSNM
            , A.APPDATE, C.EDUSTART, C.EDUEND
            , A.ISB2C, DECODE(A.ISB2C , 'Y','본인', 'N', 'B2B','') ISB2CNM
            , A.CHKFINAL, DECODE(A.CHKFINAL,'Y','승인','N','취소','미처리') CHKFINALNM
            , CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
                   WHEN A.CHKFINAL = 'Y'        THEN '승인'
                   WHEN A.CHKFINAL = 'N'        THEN '취소'
              END APPSTATUS
            , A.ISPROPOSEAPPROVAL, DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','반려','불필요') ISPROPOSEAPPROVALNM
            , A.CANCELKIND
            , NVL(B.ISGRADUATED,'') ISGRADUATED
            , E.CONO, E.NAME, E.OFFICE_GBN
            , E.EMAIL, E.HANDPHONE
            , E.COMP, GET_COMPNM(E.COMP) COMPNM
            , A.DEPT, (SELECT ORGNAME FROM T_LMS_ORG WHERE COMP = A.COMP AND ORGCODE = A.DEPT) DEPTNM
            , A.JIK, (SELECT JIKUPNM FROM T_LMS_JIKUP WHERE COMP = A.COMP AND JIKUP = A.JIK) JIKUPNM
        FROM T_LMS_PROPOSE A
            , T_LMS_STOLD B
            , T_LMS_SUBJSEQ C
            , T_LMS_SUBJ D
            , T_LMS_MEMBER E
        WHERE A.SUBJ = B.SUBJ(+) AND A.SUBJ = C.SUBJ AND A.SUBJ = D.SUBJ
            AND A.YEAR = B.YEAR(+) AND A.YEAR = C.YEAR
            AND A.SUBJSEQ = B.SUBJSEQ(+) AND A.SUBJSEQ = C.SUBJSEQ
            AND A.USERID = B.USERID(+) AND A.USERID = E.USERID
            AND D.ISUSE = 'Y'
            AND A.ISB2C = 'N'
            AND D.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_trainingclass">
			AND D.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND C.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_grseq">
			AND C.GRSEQ = #p_grseq#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND C.GYEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND D.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.COMP = #p_comp#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_appstatus">
			AND A.SUBJSEQ = #p_appstatus#
		</isNotEmpty>
		<isNotEmpty property="p_isgoyong">
			AND C.ISGOYONG = #p_isgoyong#
		</isNotEmpty>
		<isNotEmpty property="p_cpcomp">
			AND D.SUBJSEQ = #p_cpcomp#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_1">
			AND C.EDUSTART <![CDATA[ >= ]]>
			#p_edustart_1#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_2">
			AND C.EDUSTART <![CDATA[ <= ]]>
			#p_edustart_2#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND E.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
	</select>

	<select id="selectApprovalListB2C" resultClass="cmap"
		parameterClass="cmap">
	<![CDATA[ /* propose.selectApprovalListB2C */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , C.GRCODE, C.GRSEQ, C.GYEAR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
            , C.SUBJNM, D.ISGOYONG, D.ISONOFF, GET_CODENM('0001',D.ISONOFF ) ISONOFFNM
            , D.TRAININGCLASS, GET_CODENM('0075',D.TRAININGCLASS) TRAININGCLASSNM
            , A.APPDATE, C.EDUSTART, C.EDUEND
            , A.ISB2C, DECODE(A.ISB2C , 'Y','본인', 'N', 'B2B','') ISB2CNM
            , A.CHKFINAL, DECODE(A.CHKFINAL,'Y','승인','N','취소','미처리') CHKFINALNM
            , CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
                   WHEN A.CHKFINAL = 'Y'        THEN '승인'
                   WHEN A.CHKFINAL = 'N'        THEN '취소'
              END APPSTATUS
            , A.ISPROPOSEAPPROVAL, DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','반려','불필요')  ISPROPOSEAPPROVALNM
            , A.CANCELKIND
            , A.APPROVALUSERID, A.APPROVALDATE
            , A.CANCELUSERID, A.CANCELDATE
            , NVL(B.ISGRADUATED,'') ISGRADUATED
            , E.CONO, E.NAME, E.OFFICE_GBN
            , E.EMAIL, E.HANDPHONE
            , E.COMP, GET_COMPNM(E.COMP) COMPNM
            , A.DEPT, (SELECT ORGNAME FROM T_LMS_ORG WHERE COMP = A.COMP AND ORGCODE = A.DEPT) DEPTNM
            , A.JIK, (SELECT JIKUPNM FROM T_LMS_JIKUP WHERE COMP = A.COMP AND JIKUP = A.JIK) JIKUPNM
            , F.SEQ, F.PAYMETHOD, F.AMOUNT
            , GET_CODENM('0056',F.PAYMETHOD) PAYMETHODNM
            , GET_CODENM('0048', F.RECOGSTATE) PAYSTATUS
            , (SELECT TO_CHAR(TO_DATE(APPLDATE,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') FROM T_PAY_INIPAY WHERE TID = A.TID) PAYDATE
            , GET_CODENM('0006',A.COSTSUPPORT) COSTSUPPORT
        FROM T_LMS_PROPOSE A
            , T_LMS_STOLD B
            , T_LMS_SUBJSEQ C
            , T_LMS_SUBJ D
            , T_LMS_MEMBER E
            , T_LMS_PAYMENT F
        WHERE A.SUBJ = B.SUBJ(+) AND A.SUBJ = C.SUBJ AND A.SUBJ = D.SUBJ
            AND A.YEAR = B.YEAR(+) AND A.YEAR = C.YEAR
            AND A.SUBJSEQ = B.SUBJSEQ(+) AND A.SUBJSEQ = C.SUBJSEQ
            AND A.USERID = B.USERID(+) AND A.USERID = E.USERID
            AND A.TID = F.TID(+)
            AND D.ISUSE = 'Y'
            AND D.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_isb2c">
			AND A.ISB2C = #p_isb2c#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND C.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_grseq">
			AND C.GRSEQ = #p_grseq#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND C.GYEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND D.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_userid">
			AND A.USERID = #p_userid#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			AND SUBSTR(C.PROPSTART,0,8) <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			AND SUBSTR(C.PROPEND,0,8) <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND E.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
	</select>

	<select id="selectApprovalPageListB2B" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectApprovalPageListB2B */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , C.GRCODE, C.GRSEQ, C.GYEAR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
            , C.SUBJNM, D.ISGOYONG, D.ISONOFF, GET_CODENM('0001',D.ISONOFF ) ISONOFFNM
            , D.TRAININGCLASS, GET_CODENM('0075',D.TRAININGCLASS) TRAININGCLASSNM
            , A.APPDATE, C.EDUSTART, C.EDUEND
            , A.ISB2C, DECODE(A.ISB2C , 'Y','본인', 'N', 'B2B','') ISB2CNM
            , A.CHKFINAL, DECODE(A.CHKFINAL,'Y','승인','N','취소','미처리') CHKFINALNM
            , CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
                   WHEN A.CHKFINAL = 'Y'        THEN '승인'
                   WHEN A.CHKFINAL = 'N'        THEN '취소'
              END APPSTATUS
            , A.ISPROPOSEAPPROVAL, DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','반려','불필요') ISPROPOSEAPPROVALNM
            , A.CANCELKIND
            , NVL(B.ISGRADUATED,'') ISGRADUATED
            , E.CONO, E.NAME, E.OFFICE_GBN
            , E.EMAIL, E.HANDPHONE
            , E.COMP, GET_COMPNM(E.COMP) COMPNM
            , A.DEPT, (SELECT ORGNAME FROM T_LMS_ORG WHERE COMP = A.COMP AND ORGCODE = A.DEPT) DEPTNM
            , A.JIK, (SELECT JIKUPNM FROM T_LMS_JIKUP WHERE COMP = A.COMP AND JIKUP = A.JIK) JIKUPNM
        FROM T_LMS_PROPOSE A
            , T_LMS_STOLD B
            , T_LMS_SUBJSEQ C
            , T_LMS_SUBJ D
            , T_LMS_MEMBER E
        WHERE A.SUBJ = B.SUBJ(+) AND A.SUBJ = C.SUBJ AND A.SUBJ = D.SUBJ
            AND A.YEAR = B.YEAR(+) AND A.YEAR = C.YEAR
            AND A.SUBJSEQ = B.SUBJSEQ(+) AND A.SUBJSEQ = C.SUBJSEQ
            AND A.USERID = B.USERID(+) AND A.USERID = E.USERID
            AND D.ISUSE = 'Y'
            AND A.ISB2C = 'N'
            AND D.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_trainingclass">
			AND D.TRAININGCLASS = #p_trainingclass#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND C.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_grseq">
			AND C.GRSEQ = #p_grseq#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND C.GYEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND D.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.COMP = #p_comp#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_appstatus">
			AND A.CHKFINAL = #p_appstatus#
		</isNotEmpty>
		<isNotEmpty property="p_isgoyong">
			AND C.ISGOYONG = #p_isgoyong#
		</isNotEmpty>
		<isNotEmpty property="p_cpcomp">
			AND D.SUBJSEQ = #p_cpcomp#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_1">
			AND C.EDUSTART <![CDATA[ >= ]]>
			#p_edustart_1#
		</isNotEmpty>
		<isNotEmpty property="p_edustart_2">
			AND C.EDUSTART <![CDATA[ <= ]]>
			#p_edustart_2#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND E.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>

	<select id="selectApprovalPageListB2C" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectApprovalPageListB2C */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , C.GRCODE, C.GRSEQ, C.GYEAR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
            , C.SUBJNM, D.ISGOYONG, D.ISONOFF, GET_CODENM('0001',D.ISONOFF ) ISONOFFNM
            , D.TRAININGCLASS, GET_CODENM('0075',D.TRAININGCLASS) TRAININGCLASSNM
            , A.APPDATE, C.EDUSTART, C.EDUEND
            , A.ISB2C, DECODE(A.ISB2C , 'Y','본인', 'N', 'B2B','') ISB2CNM
            , A.CHKFINAL, DECODE(A.CHKFINAL,'Y','승인','N','취소','미처리') CHKFINALNM
            , CASE WHEN A.CHKFINAL IN ('M','B') THEN '신청'
                   WHEN A.CHKFINAL = 'Y'        THEN '승인'
                   WHEN A.CHKFINAL = 'N'        THEN '취소'
              END APPSTATUS
            , A.ISPROPOSEAPPROVAL, DECODE(A.ISPROPOSEAPPROVAL, 'L','-','B','상신중','Y','승인','N','반려','불필요')  ISPROPOSEAPPROVALNM
            , A.CANCELKIND
            , A.APPROVALUSERID, A.APPROVALDATE
            , A.CANCELUSERID, A.CANCELDATE
            , NVL(B.ISGRADUATED,'') ISGRADUATED
            , E.CONO, E.NAME, E.OFFICE_GBN
            , E.EMAIL, E.HANDPHONE
            , A.COMP, DECODE(A.COMP, '10000', E.COMPNM, GET_COMPNM(A.COMP)) COMPNM
            , A.DEPT, (SELECT ORGNAME FROM T_LMS_ORG WHERE COMP = A.COMP AND ORGCODE = A.DEPT) DEPTNM
            , A.JIK, (SELECT JIKUPNM FROM T_LMS_JIKUP WHERE COMP = A.COMP AND JIKUP = A.JIK) JIKUPNM
            , F.SEQ, F.PAYMETHOD, F.AMOUNT
            , GET_CODENM('0056',F.PAYMETHOD) PAYMETHODNM
            , GET_CODENM('0048', F.RECOGSTATE) PAYSTATUS
            , TO_CHAR(TO_DATE(SUBSTR(F.PAYDATE,1,8),'YYYYMMDD'),'YYYY/MM/DD') PAYDATE
            , GET_CODENM('0006',A.COSTSUPPORT) COSTSUPPORT
        FROM T_LMS_PROPOSE A
            , T_LMS_STOLD B
            , T_LMS_SUBJSEQ C
            , T_LMS_SUBJ D
            , T_LMS_MEMBER E
            , T_LMS_PAYMENT F
        WHERE A.SUBJ = B.SUBJ(+) AND A.SUBJ = C.SUBJ AND A.SUBJ = D.SUBJ
            AND A.YEAR = B.YEAR(+) AND A.YEAR = C.YEAR
            AND A.SUBJSEQ = B.SUBJSEQ(+) AND A.SUBJSEQ = C.SUBJSEQ
            AND A.USERID = B.USERID(+) AND A.USERID = E.USERID
            AND A.TID = F.TID(+)
            AND D.ISUSE = 'Y'
            AND D.SUBJTYPE = 'C' ]]>
		<isNotEmpty property="p_isb2c">
			AND A.ISB2C = #p_isb2c#
		</isNotEmpty>
		<isNotEmpty property="p_grcode">
			AND C.GRCODE = #p_grcode#
		</isNotEmpty>
		<isNotEmpty property="p_grseq">
			AND C.GRSEQ = #p_grseq#
		</isNotEmpty>
		<isNotEmpty property="p_gyear">
			AND C.GYEAR = #p_gyear#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND D.ISONOFF = #p_isonoff#
		</isNotEmpty>
		<isNotEmpty property="p_comp">
			AND A.COMP = #p_comp#
		</isNotEmpty>
		<isNotEmpty property="p_subj">
			AND A.SUBJ = #p_subj#
		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND A.SUBJSEQ = #p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="p_propstart">
			AND SUBSTR(C.PROPSTART,0,8) <![CDATA[ >= ]]>
			#p_propstart#
		</isNotEmpty>
		<isNotEmpty property="p_propend">
			AND SUBSTR(C.PROPEND,0,8) <![CDATA[ <= ]]>
			#p_propend#
		</isNotEmpty>
		<isNotEmpty property="p_searchtype" prepend="">
			<isNotEmpty property="p_searchword" prepend="">
				AND E.$p_searchtype$ LIKE '%'||#p_searchword#||'%'
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="p_sortorder">
			ORDER BY $p_sortorder$
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>

	<!-- 수강대상자선정 리스트 -->
	<select id="selectStudentTargetPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[ /* propose.selectStudentTargetPageList */
        SELECT A.USERID, A.NAME, A.CONO, A.OFFICE_GBN
            , COMP, GET_COMPNM(COMP) COMPNM
            , A.DEPTCOD, A.DEPTNAM
            , A.JIKUP, A.JIKUPNM, A.JIKCHEK, A.JIKCHEKNM, A.JIKMU, A.JIKMUNM
            , A.EMAIL, A.HANDPHONE
            , A.SEX, A.UNIVNAM, A.UNIVMAJ
            , SUBSTR(RESNO,0,6) || '-******' RESNO
        FROM T_LMS_MEMBER A
        WHERE COMP IN ( SELECT DISTINCT(COMP)
                        FROM T_LMS_COMPCLASS
                        WHERE (UPPERCOMP=#p_comp# AND GROUPYN='N')
                            OR ( COMP=#p_comp# AND GROUPYN='N' ) )
            AND A.OFFICE_GBN = 'Y' ]]>
		<isNotEmpty property="p_attstatus">
			<isEqual property="p_attstatus" compareValue="A"> <!-- 미수강 -->
				<isNotEmpty property="p_isonoff">
					AND NOT EXISTS ( SELECT 1
					FROM T_LMS_STUDENT BB
					, T_LMS_SUBJ CC
					WHERE
					BB.SUBJ = CC.SUBJ
					AND BB.USERID = A.USERID
					AND CC.ISONOFF =
					#p_isonoff#
					<isNotEmpty property="p_subj">
						AND BB.SUBJ = #p_subj#
					</isNotEmpty>
					)
				</isNotEmpty>
			</isEqual>
			<isEqual property="p_attstatus" compareValue="B"> <!-- 미수료 -->
				<isNotEmpty property="p_isonoff">
					AND NOT EXISTS ( SELECT 1
					FROM T_LMS_STOLD BB
					, T_LMS_SUBJ CC
					WHERE
					BB.SUBJ = CC.SUBJ
					AND BB.USERID = A.USERID
					AND ISGRADUATED = 'Y'
					AND
					CC.ISONOFF = #p_isonoff#
					<isNotEmpty property="p_subj">
						AND BB.SUBJ = #p_subj#
					</isNotEmpty>
					)
				</isNotEmpty>
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="p_jikup">
			AND JIKUP = #p_jikup#
		</isNotEmpty>
		<isNotEmpty property="p_jikchek">
			AND JIKCHEK = #p_jikchek#
		</isNotEmpty>
		<isNotEmpty property="p_jikmu">
			AND JIKMU = #p_jikmu#
		</isNotEmpty>
		<isNotEmpty property="p_syear">
			AND SYEAR = #p_syear#
		</isNotEmpty>
		<isNotEmpty property="p_start">
			<isNotEmpty property="p_end">
				AND JIKMUTRAIN BETWEEN #p_start# AND
				#p_end#
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="userId">
			AND ( A.cono LIKE '%'||#userId#||'%'
			OR A.NAME LIKE '%'||#userId#||'%'
			OR A.USERID LIKE '%'||#userId#||'%')
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>


	<select id="selectStudentTargetPageList2" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    	<![CDATA[
				SELECT USERID, NAME, CONO, OFFICE_GBN,  EMAIL, HANDPHONE, DEPTCOD, DEPTNAM, GET_COMPNM(COMP) COMPNM,
				       JIKUP, JIKUPNM, JIKCHEK,JIKCHEKNM, JIKMU, JIKMUNM, SYEAR, SUBSTR(RESNO,0,6) || '-******' RESNO,
				       SEX, UNIVNAM, UNIVMAJ
				FROM   T_LMS_MEMBER
				WHERE  COMP = #p_comp#

		  ]]>
		<isNotEmpty property="listId">
			AND CONO
			<iterate prepend="IN" property="listId" open="(" close=")"
				conjunction=",">
				#listId[]#
			</iterate>
		</isNotEmpty>

		<include refid="pageingBottom" />
	</select>

	<select id="selectStudentTargetDetailPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    	<![CDATA[ /* propose.selectStudentTargetDetailPageList */
			SELECT A.ELECTNO, A.USERID
			       ,B.NAME, B.CONO, B.OFFICE_GBN,  B.EMAIL, B.HANDPHONE, B.DEPTCOD, B.DEPTNAM
			       ,GET_COMPNM(B.COMP) COMPNM,B.JIKUP, B.JIKUPNM, B.JIKCHEK,B.JIKCHEKNM, B.JIKMU
			       ,B.JIKMUNM, B.SYEAR, SUBSTR(B.RESNO,0,6) || '-******' RESNO
			       ,SUBSTR(B.RESNO,7,1) GENDER
			       ,B.SEX,  B.UNIVNAM, B.UNIVMAJ,B.SHINYN
			      ,C.SUBJ, C.YEAR, C.SUBJSEQ
			      ,CASE WHEN C.USERID IS NOT NULL THEN  '입과완료' ELSE '입과대기' END STATUS
			FROM T_LMS_TARGETUSER A, T_LMS_MEMBER B, T_LMS_TARGETSUBJSEQ C
			WHERE A.ELECTNO=#p_electno#
			  AND A.USERID = B.USERID
			  AND A.USERID= C.USERID(+) ]]>
		<isNotEmpty property="p_subjseq">
			AND C.YEAR(+) =#p_year#
			AND C.SUBJ(+)
			=#p_subj#
			AND C.SUBJSEQ(+) =#p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="jikup">
			AND B.JIKUP = #jikup#
		</isNotEmpty>
		<isNotEmpty property="dept">
			AND B.JIKCHEK = #dept#
		</isNotEmpty>
		<isNotEmpty property="userId">
			AND ( B.USERID LIKE '%'||#userid#||'%'
			OR B.NAME LIKE '%'||#userid#||'%'
			)
		</isNotEmpty>
		<include refid="pageingBottom" />
	</select>


	<select id="selectStudentTargetDetailPageList2" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
	    	<![CDATA[
				SELECT A.ELECTNO, A.USERID
			       ,B.NAME, B.CONO, B.OFFICE_GBN,  B.EMAIL, B.HANDPHONE, B.DEPTCOD, B.DEPTNAM
			       ,GET_COMPNM(B.COMP) COMPNM,B.JIKUP, B.JIKUPNM, B.JIKCHEK,B.JIKCHEKNM, B.JIKMU
			       ,B.JIKMUNM, B.SYEAR, SUBSTR(B.RESNO,0,6) || '-******' RESNO
			       ,SUBSTR(B.RESNO,7,1) GENDER
			       ,B.SEX,  B.UNIVNAM, B.UNIVMAJ, B.SHINYN
			      ,C.SUBJ, C.YEAR, C.SUBJSEQ
			      ,CASE WHEN C.USERID IS NOT NULL THEN  '입과완료' ELSE '입과대기' END STATUS
			FROM T_LMS_TARGETUSER A, T_LMS_MEMBER B, T_LMS_TARGETSUBJSEQ C
			WHERE A.ELECTNO=#p_electno#
			  AND A.USERID = B.USERID
			  AND A.USERID= C.USERID(+)

		  ]]>
		<isNotEmpty property="p_year">

		</isNotEmpty>
		<isNotEmpty property="p_subjseq">
			AND C.YEAR(+) =#p_year#
			AND C.SUBJ(+)
			=#p_subj#
			AND C.SUBJSEQ(+) =#p_subjseq#
		</isNotEmpty>
		<isNotEmpty property="jikup">
			AND B.JIKUP = #jikup#
		</isNotEmpty>

		<isNotEmpty property="dept">
			AND B.JIKCHEK = #dept#
		</isNotEmpty>


		<isNotEmpty property="userId">
			AND ( B.USERID LIKE '%'||#userid#||'%'
			OR B.NAME LIKE '%'||#userid#||'%'
			)
		</isNotEmpty>

		<include refid="pageingBottom" />
	</select>

	<insert id="insertProposePayInstall" parameterClass="cmap">
		/* propose.insertProposePayInstall */
		INSERT INTO T_LMS_PROPOSEPAYINSTALL
		( SUBJ
		, YEAR
		, SUBJSEQ
		, USERID
		, INSTALLMENT_SEQ
		, TID
		, INUSERID
		, INDATE
		, LUSERID
		, LDATE
		, PRICE )
		VALUES ( #p_subj#
		, #p_year#
		, #p_subjseq#
		, #p_userid#
		, #p_installment_seq#
		, #p_tid#
		, #s_userid#
		, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		, #s_userid#
		, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
		, #p_price# )
	</insert>

	<!-- 결제 현황에서 변경 버튼을 누를경우 삭제한다 -->
	<delete id="deleteProposePayInstallWhenEditPayment"
		parameterClass="cmap">
		<![CDATA[  /* propose.deleteProposePayInstallWhenEditPayment */
			DELETE FROM T_LMS_PROPOSEPAYINSTALL 
				WHERE SUBJ = #v_subj# 
					AND YEAR = #v_year# 
					AND SUBJSEQ = #v_subjseq# 
					AND USERID = #p_userid# 
					AND INSTALLMENT_SEQ = #p_installment_seq#
					AND TID = #v_tid#
		]]>
	</delete>

	<insert id="insertProposeForm" parameterClass="cmap">
		/* propose.insertProposeForm */
		INSERT INTO T_LMS_PROPOSEFORM
		( SUBJ, YEAR, SUBJSEQ, USERID
		, KOR_NAME, HANSA_NAME, ENG_NAME
		, HOBBY, GOLF_HANDI
		, JUMIN, BIRTH_YEAR, BIRTH_MONTH, BIRTH_DAY
		, ZIPCODE, ADDRESS, PICTURE, TEL, HANDPHONE
		, CAR, RELISION, CARNUM, EMAIL, PASSPORT
		, O_NAME, O_POSITION, O_ZIPCODE, O_ADDRESS
		, O_TEL, O_FAX, O_TURNOVER, O_HOMEPAGE, O_MANAGETYPE, O_BIZFIELD
		, C_NAME, C_TEL, C_DEPTPOSNM, C_HANDPHONE, C_FAX, C_EMAIL
		, H_GRADYEARMON, H_NAME, H_MAJOR, H_STATE
		, U_GRADYEARMON, U_NAME, U_MAJOR, U_STATE
		, G_GRADYEARMON, G_NAME, G_MAJOR, G_STATE
		, E_GRADYEARMON, E_NAME, E_STATE
		, C_YEARMON1, C_DETAIL1
		, C_YEARMON2, C_DETAIL2
		, C_YEARMON3, C_DETAIL3
		, W_KORNAME, W_ENGNAME, W_PASSPORT, W_JUMIN
		, R_NAME, R_RELATION, R_COMPNM, R_POSITION, R_TEL )
		SELECT #p_subj# SUBJ, #p_year# YEAR, #p_subjseq# SUBJSEQ, #p_userid# USERID
		, #p_korname# KOR_NAME, #p_hansaname# HANSA_NAME, #p_engname# ENG_NAME
		, #p_hobby# HOBBY, #p_golfhandi# GOLF_HANDI
		, DECODE(#p_jumin#,NULL,'',#p_jumin#) JUMIN,
		REPLACE(LTRIM(TO_CHAR(#p_birth_year#, '0000')),'0',' ') BIRTH_YEAR,
		LTRIM(TO_CHAR(#p_birth_month#, '00')) BIRTH_MONTH,
		LTRIM(TO_CHAR(#p_birth_day#, '00')) BIRTH_DAY
		, #p_zipcode1#||'-'||#p_zipcode2# ZIPCODE, #p_address# ADDRESS,
		#p_picturefile# PICTURE, #p_tel# TEL, #p_handphone# HANDPHONE
		, #p_car# CAR, #p_relision# RELISION, #p_carnum# CARNUM, #p_email#
		EMAIL, #p_passport# PASSPORT
		, #p_oname# O_NAME, #p_oposition# O_POSITION,
		#p_ozipcode1#||'-'||#p_ozipcode2# O_ZIPCODE, #p_oaddress# O_ADDRESS
		, #p_otel# O_TEL, #p_ofax# O_FAX, #p_oturnover# O_TURNOVER,
		#p_ohomepage# O_HOMEPAGE, #p_omanagetype# O_MANAGETYPE, #p_obizfield#
		O_BIZFIELD
		, #p_cname# C_NAME, #p_ctel# C_TEL, #p_cdeptposnm# C_DEPTPOSNM,
		#p_chandphone# C_HANDPHONE, #p_cfax# C_FAX, #p_cemail# C_EMAIL
		, REPLACE(TO_CHAR(#p_hgyear#, '0000')||TO_CHAR(#p_hgmonth#, '00'),' ','') H_GRADYEARMON, #p_hname# H_NAME, #p_hmajor# H_MAJOR, #p_hstate#
		H_STATE
		, REPLACE(TO_CHAR(#p_ugyear#, '0000')||TO_CHAR(#p_ugmonth#, '00'),' ','') U_GRADYEARMON, #p_uname# U_NAME, #p_umajor# U_MAJOR, #p_ustate#
		U_STATE
		, REPLACE(TO_CHAR(#p_ggyear#, '0000')||TO_CHAR(#p_ggmonth#, '00'),' ','') G_GRADYEARMON, #p_gname# G_NAME, #p_gmajor# G_MAJOR, #p_gstate#
		G_STATE
		, REPLACE(TO_CHAR(#p_egyear#, '0000')||TO_CHAR(#p_egmonth#, '00'),' ','') E_GRADYEARMON, #p_ename# E_NAME, #p_estate# E_STATE
		, REPLACE(TO_CHAR(#p_cyear1#, '0000')||TO_CHAR(#p_cmonth1#, '00'),' ','') C_YEARMON1, #p_cdetail1# C_DETAIL1
		, REPLACE(TO_CHAR(#p_cyear2#, '0000')||TO_CHAR(#p_cmonth2#, '00'),' ','') C_YEARMON2, #p_cdetail2# C_DETAIL2
		, REPLACE(TO_CHAR(#p_cyear3#, '0000')||TO_CHAR(#p_cmonth3#, '00'),' ','') C_YEARMON3, #p_cdetail3# C_DETAIL3
		, #p_wkorname# W_KORNAME, #p_wengname# W_ENGNAME, #p_wpassport#
		W_PASSPORT, DECODE(#p_wjumin#,NULL,'',#p_wjumin#) W_JUMIN
		, #p_rname# R_NAME, #p_rrelation# R_RELATION, #p_rcompnm# R_COMPNM,
		#p_rposition# R_POSITION, #p_rtel# R_TEL
		FROM DUAL
	</insert>
	<delete id="deleteProposeFormGLMP" parameterClass="cmap">
		/* propose.deleteProposeFormGLMP */
		DELETE T_LMS_PROPOSEFORM
		WHERE SUBJ=#p_subj# AND SUBJSEQ=#p_subjseq# AND USERID=#p_userid# AND
		YEAR=#p_year#
	</delete>


	<!-- 분납결제과정의 수강신청 정보 삭제 -->
	<delete id="deleteProposePayInstall" parameterClass="cmap">
		/* propose.deleteProposePayInstall */
		DELETE T_LMS_PROPOSEPAYINSTALL
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq# AND
		USERID = #p_userid#
		<isNotEmpty property="userId">
			AND INSTALLMENT_SEQ = #p_installment_seq#
		</isNotEmpty>
	</delete>

	<insert id="insertTarget" parameterClass="cmap">
		<selectKey resultClass="int" type="pre" keyProperty="electno">
			SELECT
			NVL(MAX(ELECTNO),0)+1 FROM T_LMS_STUDENTTARGET
		</selectKey>
		<![CDATA[
			INSERT INTO T_LMS_STUDENTTARGET(ELECTNO, COMP, ELECTNM, LUSERID, LDATE)
    		VALUES(#electno#, #p_comp#, #p_electnm#, #s_userid#, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))

		]]>
	</insert>

	<insert id="insertTargetUser" parameterClass="cmap">
		<![CDATA[ /* propose.insertTargetUser */
			INSERT INTO T_LMS_TARGETUSER(ELECTNO, USERID)
			SELECT #electno#, #userid#  FROM DUAL
			WHERE NOT EXISTS (SELECT 1 FROM T_LMS_TARGETUSER WHERE ELECTNO = #electno# AND USERID = #userid# )
		]]>
	</insert>

	<!-- 선정내역에서 대상자를 삭제한다. -->
	<insert id="deleteTargetUser" parameterClass="cmap">
		<![CDATA[
			DELETE FROM T_LMS_TARGETUSER
			WHERE ELECTNO = #p_electno#
			    AND USERID = #p_userid#
		]]>
	</insert>


	<update id="insertTargetSubjSeq" parameterClass="cmap">
		<![CDATA[
			INSERT INTO T_LMS_TARGETSUBJSEQ(ELECTNO, SUBJ, YEAR, SUBJSEQ, USERID, LUSERID,  LDATE)
			VALUES(#p_electno#, #p_subj#, #p_year#, #p_subjseq#, #p_userid#, #s_userid#, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))
		]]>
	</update>


	<select id="selectCDPPageList" resultClass="cmap"
		parameterClass="cmap">
		<include refid="pageingTop" />
		SELECT A.COMP
		, GET_COMPNM(A.COMP) COMPNM
		, A.DEPTNAM
		, A.JIKCHEKNM
		,
		A.JIKUPNM
		, A.USERID
		, A.CONO
		, A.NAME
		, DECODE(B.CONFIRM_YN, 'B', 'Y',
		'C','Y','Y','Y', 'N','N', 'N') PLAN_YN
		, B.USER_NUM, B.EXEC_NUM,
		B.YEAR, B.CNT1, B.CNT2, B.CNT3, B.CNT4
		, DECODE(B.CONFIRM_YN, 'Y',
		'승인', 'B', '대기','C','반려','N','-', '-')
		CONFIRM_YN
		FROM T_LMS_MEMBER A, (
		SELECT MAX(AA.USER_NUM) USER_NUM
		, MAX(AA.CONFIRM_YN) CONFIRM_YN
		,
		MAX(AA.EXEC_NUM) EXEC_NUM
		, MAX(BB.YEAR) YEAR
		, SUM(DECODE(CC.ISONOFF,
		'ON', 1, 0)) CNT1
		, SUM(DECODE(CC.ISONOFF, 'OFF', 1, 0)) CNT2
		,
		SUM(DECODE(CC.ISONOFF, 'READ', 1, 0)) CNT3
		, SUM(DECODE(CC.ISONOFF,
		'BL', 1, 0)) CNT4
		FROM V_CDP_PLAN AA, V_CDP_COURSE BB, T_LMS_SUBJ CC
		WHERE AA.USER_NUM = BB.USER_NUM(+)
		AND AA.COMPANY_NUM =
		BB.COMPANY_NUM(+)
		AND AA.EXEC_NUM = BB.EXEC_NUM(+)
		AND BB.SUBJ =
		CC.SUBJ(+)
		<isNotEmpty property="p_year">
			AND BB.YEAR(+) = #p_year#
		</isNotEmpty>
		GROUP BY AA.COMPANY_NUM, AA.EXEC_NUM, AA.USER_NUM
		) B, T_LMS_COMPCLASS
		C
		WHERE A.USERID=B.USER_NUM(+)
		AND A.COMP = C.COMP
		AND A.OFFICE_GBN='Y'
		AND C.IDPCDPYN=#p_idpcdpyn#

		<isNotEmpty property="p_comp">
			AND A.COMP IN( SELECT DISTINCT(COMP)
			FROM T_LMS_COMPCLASS
			WHERE (UPPERCOMP=#p_comp# AND GROUPYN='N')
			OR
			(COMP=#p_comp# AND GROUPYN='N')
			)
		</isNotEmpty>

		<isEqual property="p_appstatus" compareValue="N">
			AND B.CONFIRM_YN
			NOT IN('Y','B','D')
		</isEqual>

		<isEqual property="p_appstatus" compareValue="Y">
			AND B.CONFIRM_YN
			IN ('Y','B','D')
		</isEqual>

		<isNotEmpty property="p_confirmyn">
			AND B.CONFIRM_YN = #p_confirmyn#
		</isNotEmpty>
		<isNotEmpty property="p_jikchek">
			AND A.JIKCHEK = #p_jikchek#
		</isNotEmpty>
		<isNotEmpty property="p_jikup">
			AND A.JIKUP = #p_jikup#
		</isNotEmpty>
		<isNotEmpty property="p_userid">
			AND ( A.USERID LIKE
			'%'||#p_userid#||'%' OR A.NAME LIKE
			'%'||#p_userid#||'%' OR A.CONO
			LIKE '%'||#p_userid#||'%' )
		</isNotEmpty>


		<include refid="pageingBottom" />
	</select>

	<select id="selectCDPPlanUser" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[
			SELECT  A.COMPANY_NUM COMP, A.USER_NUM USERID, A.EXEC_NUM, A.YEAR
			    , B.SUBJ, B.SUBJNM, GET_CODENM('0001', B.ISONOFF) ISONOFF, B.ISGOYONG
			    , C.SUBJSEQ, C.SUBJSEQGR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR2
			    , TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(C.EDUSTART,NULL,DECODE(C.EDUEND,NULL,'',' ~ '),' ~ ')
				||TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE
				,TO_NUMBER(TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'), 'MM')) EDUMONTH
			    ,DECODE(D.CONFIRM_YN, 'Y', '승인', 'B', '대기','C','반려','N','N', '-') CONFIRM_YN
			    , E.ISGRADUATED
			 FROM V_CDP_COURSE A, T_LMS_SUBJ B, T_LMS_SUBJSEQ C, V_CDP_PLAN D, T_LMS_STOLD E
			 WHERE  A.SUBJ = B.SUBJ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.COMPANY_NUM = D.COMPANY_NUM(+)
			   AND A.EXEC_NUM = D.EXEC_NUM(+)
			   AND A.USER_NUM = D.USER_NUM(+)
			   AND A.SUBJ = E.SUBJ(+)
		       AND A.YEAR = E.YEAR(+)
		       AND A.SUBJSEQ = E.SUBJSEQ(+)
		       AND A.USER_NUM = E.USERID(+)
			   AND A.COMPANY_NUM = #p_comp#
			   AND A.USER_NUM = #p_userid#
			   AND A.EXEC_NUM = #p_execnum#
		]]>
	</select>

	<!-- ICP/CDP 해당 기업의 년간 교육계획 -->
	<select id="selectYearPlanUser" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[
			SELECT  A.COMPANY_NUM COMP, A.USER_NUM USERID, A.EXEC_NUM, A.YEAR, A.CREATED_DTIME APPDATE
			    , B.SUBJ, B.SUBJNM, B.ISONOFF, GET_CODENM('0001', B.ISONOFF) ISONOFFNM, B.ISGOYONG
			    , C.SUBJSEQ, C.SUBJSEQGR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR2
			    , TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(C.EDUSTART,NULL,DECODE(C.EDUEND,NULL,'',' ~ '),' ~ ')
				||TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE
				, C.EDUSTART, C.EDUEND
				,TO_NUMBER(TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'), 'MM')) EDUMONTH
			    , DECODE(D.CONFIRM_YN, 'Y', '승인', 'B', '대기','C','반려','N','N', '-') CONFIRM_YN
			    , E.ISGRADUATED
			 FROM V_CDP_COURSE A, T_LMS_SUBJ B, T_LMS_SUBJSEQ C, V_CDP_PLAN D, T_LMS_STOLD E
			 WHERE  A.SUBJ = B.SUBJ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.COMPANY_NUM = D.COMPANY_NUM
			   AND A.EXEC_NUM = D.EXEC_NUM
			   AND A.USER_NUM = D.USER_NUM
			   AND A.SUBJ = E.SUBJ(+)
		       AND A.YEAR = E.YEAR(+)
		       AND A.SUBJSEQ = E.SUBJSEQ(+)
		       AND A.USER_NUM = E.USERID(+)
			   AND A.COMPANY_NUM = #p_comp#
			   AND A.USER_NUM = #p_userid#
			   AND A.YEAR = #p_year#
		]]>
	</select>

	<!-- 일반기업 년간 교육계획 -->
	<select id="selectYearPlanUser2" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[
			SELECT  A.COMP, A.USERID, A.YEAR
			    , B.SUBJ, B.SUBJNM, B.ISONOFF, GET_CODENM('0001', B.ISONOFF) ISONOFFNM, B.ISGOYONG
			    , C.SUBJSEQ, C.SUBJSEQGR, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR2
			    , TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(C.EDUSTART,NULL,DECODE(C.EDUEND,NULL,'',' ~ '),' ~ ')
				||TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE
				, C.EDUSTART, C.EDUEND
				,TO_NUMBER(TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'), 'MM')) EDUMONTH
			    , D.ISGRADUATED
			 FROM T_LMS_STUDENT A, T_LMS_SUBJ B, T_LMS_SUBJSEQ C, T_LMS_STOLD D
			 WHERE  A.SUBJ = B.SUBJ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.SUBJ = D.SUBJ(+)
		       AND A.YEAR = D.YEAR(+)
		       AND A.SUBJSEQ = D.SUBJSEQ(+)
		       AND A.USERID = D.USERID(+)
			   AND A.COMP = #p_comp#
			   AND A.USERID = #p_userid#
			   AND A.YEAR = #p_year#
		]]>
	</select>

	<select id="selectManagerGuide" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[
			SELECT A.COMPANY_NUM, A.USER_NUM, A.BOARD_CONTENTS, A.EXEC_YYYY, A.WRITER_USER_NUM
						,B.NAME, B.JIKCHEKNM, B.JIKUPNM, B.DEPTNAM
			FROM V_T_CDP_MINI_BOARD A, T_LMS_MEMBER B
			WHERE A.USER_NUM = B.USERID
			    AND COMPANY_NUM = #p_comp#
				AND EXEC_YYYY = #p_year#
			    AND USER_NUM = #p_userid#
		]]>
	</select>

	<select id="selectYearPlanDept" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[

	    SELECT AA.USERID, MAX(BB.EXEC_NUM) EXEC_NUM, MAX(BB.YEAR) YEAR
			        ,GET_CODENM('0001', MAX(BB.ISONOFF)) ISONOFF
			        ,DECODE(MAX(BB.CONFIRM_YN), 'Y', '승인', 'B', '대기','C','반려','N','N', '-') CONFIRM_YN
                    ,MAX(AA.JIKUPNM) JIKUPNM, MAX(AA.NAME) NAME, MAX(AA.JOBFRDT) JOBFRDT
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '01' AND BB.ISSTOLD = 'N' THEN 1 ELSE 0 END)  SUM_N_1
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '02' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_2
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '03' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_3
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '04' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_4
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '05' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_5
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '06' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_6
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '07' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_7
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '08' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_8
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '09' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_9
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '10' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_10
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '11' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_11
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '12' AND BB.ISSTOLD = 'N'  THEN 1 ELSE 0 END)  SUM_N_12
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '01' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_1
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '02' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_2
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '03' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_3
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '04' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_4
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '05' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_5
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '06' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_6
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '07' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_7
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '08' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_8
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '09' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_9
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '10' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_10
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '11' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_11
                    ,SUM(CASE WHEN  SUBSTR(BB.EDUSTART, 5,2) = '12' AND BB.ISSTOLD = 'Y'  THEN 1 ELSE 0 END)  SUM_Y_12
            FROM T_LMS_MEMBER AA,
            (SELECT A.USER_NUM USERID, A.YEAR, A.EXEC_NUM, B.ISONOFF,D.CONFIRM_YN, C.EDUSTART
            , CASE WHEN E.USERID IS NOT NULL THEN 'Y' ELSE 'N' END ISSTOLD
             FROM V_CDP_COURSE A, T_LMS_SUBJ B, T_LMS_SUBJSEQ C, V_CDP_PLAN D, T_LMS_STOLD E
             WHERE  A.SUBJ = B.SUBJ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.SUBJ = C.SUBJ
			   AND A.YEAR = C.YEAR
			   AND A.SUBJSEQ = C.SUBJSEQ
			   AND A.COMPANY_NUM = D.COMPANY_NUM
			   AND A.EXEC_NUM = D.EXEC_NUM
			   AND A.USER_NUM(+) = D.USER_NUM
               AND A.SUBJ = E.SUBJ(+)
			   AND A.YEAR = E.YEAR(+)
			   AND A.SUBJSEQ = E.SUBJSEQ(+)
               AND A.USER_NUM = E.USERID(+)
			     AND A.COMPANY_NUM = #p_comp#
			   AND A.YEAR = #p_year#
             ) BB
            where AA.DEPTCOD = #s_deptcod#
            AND AA.USERID <> #s_userid#
            AND AA.OFFICE_GBN = 'Y'
            AND AA.COMP = #p_comp#
            AND AA.USERID = BB.USERID(+)
            GROUP BY AA.USERID, BB.ISONOFF
            ORDER BY AA.USERID
		]]>
	</select>

	<select id="selectModifyPlanList" resultClass="cmap"
		parameterClass="cmap">
		<!-- 사용자별 계획변경 리스트를 가져온다. -->
	    <![CDATA[
			SELECT COMPANY_NUM, COUR_NUM, SUBJ, YEAR, SUBJSEQ, EXEC_NUM, USER_NUM, COURSE_STATE, APPROVAL_NUM
			FROM  V_CDP_MODFIY
			WHERE   COMPANY_NUM = #p_comp#
			    AND USER_NUM = #p_userid#
			    AND EXEC_NUM = #p_execnum#
		]]>
	</select>

	<parameterMap id="swapParam" class="java.util.Map">
		<parameter property="p_comp" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_userid" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_coursenum" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_plancode" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="result" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="OUT" />
		<parameter property="resultMsg" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="OUT" />
	</parameterMap>
	<procedure id="callPlanModify" parameterMap="swapParam">
		{ call
		U_SCAP.P_PLAN_MODI(?, ?, ?, ?, ?, ?) }
	</procedure>


	<parameterMap id="swapParam2" class="java.util.Map">
		<parameter property="p_comp" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_userid" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_coursenum" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_approvallinenum" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_remark" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="result" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="OUT" />
		<parameter property="resultMsg" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="OUT" />
	</parameterMap>
	<procedure id="callApprCanc" parameterMap="swapParam2">
		{ call
		U_SCAP.P_APPR_CANC(?, ?, ?, ?, ?, ?, ?) }
	</procedure>

	<parameterMap id="swapParam3" class="java.util.Map">
		<parameter property="p_comp" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_userid" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_oldcoursenum" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_newcoursenum" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_approvallinenum" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="p_remark" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="IN" />
		<parameter property="result" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="OUT" />
		<parameter property="resultMsg" javaType="java.lang.String"
			jdbcType="VARCHAR" mode="OUT" />
	</parameterMap>
	<procedure id="callApprModi" parameterMap="swapParam3">
		{ call
		U_SCAP.P_APPR_MODI(?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>

	<select id="selectMobileProposeUserIng" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectMobileProposeUserIng */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, B.SUBJORDER, B.SUBJTYPE, B.FINISHTREATRULE
		, B.IDX
		, A.TSTEP
		, ( SELECT COUNT(1)
		FROM T_LMS_PROJORD
		WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ ) PROJCNT
		, ( SELECT COUNT(1)
		FROM T_LMS_PROJREP
		WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ
		AND USERID = A.USERID AND ISRET IN ('Y','N') ) PROJAPPLYCNT
		, ( SELECT COUNT(1)
		FROM T_LMS_EXAMPAPER
		WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ ) EXAMCNT
		, ( SELECT COUNT(1)
		FROM T_LMS_EXAMPAPER AA
		, T_LMS_EXAMRESULT BB
		WHERE AA.SUBJ = BB.SUBJ AND AA.YEAR = BB.YEAR AND AA.SUBJSEQ = BB.SUBJSEQ
		AND AA.EXAMNO = BB.EXAMNO
		AND AA.SUBJ = A.SUBJ AND AA.YEAR = A.YEAR AND AA.SUBJSEQ = A.SUBJSEQ
		AND BB.USERID = A.USERID ) EXAMAPPLYCNT
		, C.SUBJNM, TO_NUMBER(C.SUBJSEQGR) SUBJSEQGR
		, C.EDUSTART, C.EDUEND
		, C.CPSUBJSEQ, D.CPSUBJ
		,
		TO_CHAR(TO_DATE(C.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')||DECODE(C.EDUSTART,NULL,DECODE(C.EDUEND,NULL,'','~'),'~')
		|| TO_CHAR(TO_DATE(C.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') EDUDATE
		, CASE WHEN NVL(C.EDUSTART,'') = '' OR NVL(C.EDUEND,'') = '' THEN 'N'
		WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN C.EDUSTART AND C.EDUEND THEN
		'Y'
		ELSE 'N'
		END ABLESTUDYYN
		, D.USEBOOK, D.BOOKNAME
		, D.ISONOFF, GET_CODENM('0001', D.ISONOFF) ISONOFFNM
		, D.OUTSOURCINGTYPE
		,( SELECT COUNT(*)
		FROM T_LMS_MOBILESTUDY
		WHERE SUBJ = A.SUBJ) AS MOBILE
		FROM T_LMS_STUDENT A
		, ( SELECT AA.SUBJ, AA.YEAR, AA.SUBJSEQ
		, AA.SUBJ||AA.YEAR||AA.SUBJSEQ SUBJORDER
		, 'C' SUBJTYPE
		, 0 IDX
		, BB.FINISHTREATRULE
		FROM T_LMS_SUBJSEQ AA, T_LMS_SUBJ BB
		WHERE AA.SUBJ = BB.SUBJ AND AA.SUBJTYPE = 'C' AND TO_CHAR(SYSDATE,
		'YYYYMMDD') BETWEEN AA.EDUSTART AND AA.EDUEND
		UNION ALL
		SELECT AA.CONSUBJID SUBJ, AA.CONYEAR YEAR, AA.CONSUBJSEQ SUBJSEQ
		, AA.SUBJ||AA.YEAR||AA.SUBJSEQ||AA.CONSUBJID||AA.CONYEAR||AA.CONSUBJSEQ
		SUBJORDER
		, 'S' SUBJTYPE
		, ROW_NUMBER() OVER ( PARTITION BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ORDER
		BY AA.SUBJ, AA.YEAR, AA.SUBJSEQ ) IDX
		, (SELECT FINISHTREATRULE FROM T_LMS_SUBJ WHERE SUBJ = AA.SUBJ)
		FINISHTREATRULE
		FROM T_LMS_SUBJSEQRELATE AA
		, T_LMS_SUBJSEQ BB
		WHERE AA.SUBJ = BB.SUBJ AND AA.YEAR = BB.YEAR AND AA.SUBJSEQ = BB.SUBJSEQ
		AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN BB.EDUSTART AND BB.EDUEND
		) B
		, T_LMS_SUBJSEQ C
		, T_LMS_SUBJ D
		WHERE A.SUBJ = B.SUBJ AND A.YEAR= B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
		AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
		AND A.SUBJ = D.SUBJ
		AND A.USERID = #p_userid#
		AND B.IDX = 0
		ORDER BY SUBJORDER
	</select>

	<select id="selectMobileProposeUserPreB2C" resultClass="cmap"
		parameterClass="cmap">
	    <![CDATA[ /* propose.selectMobileProposeUserPreB2C */
        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
            , B.ISONOFF, GET_CODENM('0001', B.ISONOFF) ISONOFFNM
            , A.SUBJNM
            , TO_NUMBER(A.SUBJSEQGR) SUBJSEQGR
            , CASE WHEN D.APPDATE IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(D.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')
              END APPDATE
            , A.EDUSTART, A.EDUEND
            , CASE WHEN A.EDUSTART IS NULL OR A.EDUEND IS NULL THEN '-'
                   ELSE TO_CHAR(TO_DATE(A.EDUSTART,'YYYYMMDD'),'YYYY.MM.DD') || ' ~ ' || TO_CHAR(TO_DATE(A.EDUEND,'YYYYMMDD'),'YYYY.MM.DD')
              END EDUDATA
            , D.CHKFINAL
            , CASE WHEN D.CHKFINAL IS NULL THEN '-'
                   WHEN D.CHKFINAL = 'Y' THEN '승인'
                   WHEN D.CHKFINAL = 'N' THEN '취소'
                   ELSE '대기'
              END CHKFINALNM
            , DECODE(E.PAPERPASSYN,NULL,'-','Y','합격','N','불합격') PAPERPASSYN
            , DECODE(E.INTERVIEWPASSYN,NULL,'-','Y','합격','N','불합격') INTERVIEWPASSYN
            , DECODE(E.SUBJ,NULL,'N','Y') VOLUNTEERYN
            ,( SELECT COUNT(*)
                  FROM T_LMS_MOBILESTUDY
                 WHERE SUBJ = A.SUBJ) AS MOBILE
        FROM T_LMS_SUBJSEQ A
            , T_LMS_SUBJ B
            , ( SELECT DISTINCT A.SUBJ, A.YEAR, A.SUBJSEQ
                FROM T_LMS_SUBJSEQ A
                    , ( SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_VOLUNTEER A
                        WHERE USERID = #p_userid#
                        UNION
                        SELECT A.SUBJ, A.YEAR, A.SUBJSEQ
                        FROM T_LMS_PROPOSE A
                            , T_LMS_SUBJSEQ B
                        WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
                            AND A.USERID = #p_userid# ) B
                WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ AND A.SUBJTYPE = 'C'
                    AND TO_DATE(A.EDUSTART,'YYYYMMDD') > SYSDATE
              ) C
            , T_LMS_PROPOSE D
            , T_LMS_VOLUNTEER E
        WHERE A.SUBJ = B.SUBJ
            AND A.SUBJ = C.SUBJ AND A.YEAR = C.YEAR AND A.SUBJSEQ = C.SUBJSEQ
            AND A.SUBJ = D.SUBJ(+) AND A.YEAR = D.YEAR(+) AND A.SUBJSEQ = D.SUBJSEQ(+) AND D.USERID(+) = #p_userid#
            AND A.SUBJ = E.SUBJ(+) AND A.YEAR = E.YEAR(+) AND A.SUBJSEQ = E.SUBJSEQ(+) AND E.USERID(+) = #p_userid#
        ORDER BY A.EDUSTART DESC  ]]>
	</select>

	<select id="selectMobileProposeUserDone" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectMobileProposeUserDone */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
		, B.SUBJNM, TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR
		, C.ISONOFF, GET_CODENM('0001',C.ISONOFF) ISONOFFNM, C.OUTSOURCINGTYPE
		, B.EDUSTART, B.EDUEND
		, B.CPSUBJSEQ, C.CPSUBJ
		, CASE WHEN NVL(B.EDUSTART,'') = '' OR NVL(B.EDUEND,'') = '' THEN ''
		ELSE TO_CHAR(TO_DATE(B.EDUSTART,'YYYYMMDDHH24MISS'),'YYYY/MM/DD') ||
		TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDDHH24MISS'),'YYYY/MM/DD')
		END EDUDATE
		, TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDD') + 1,'YYYY/MM/DD') REVIEWSTART
		, TO_CHAR(TO_DATE(B.EDUEND,'YYYYMMDD') + NVL(C.REVIEWDAY, 150) +
		1,'YYYY/MM/DD') REVIEWEND
		, CASE WHEN SYSDATE BETWEEN TO_DATE(B.EDUEND,'YYYYMMDD') + 1 AND
		TO_DATE(B.EDUEND,'YYYYMMDD') + NVL(C.REVIEWDAY,150) + 1 THEN 'Y'
		ELSE 'N'
		END ISREVIEW
		, C.USEBOOK, C.BOOKNAME
		, NVL(A.TSTEP, '') TSTEP
		, NVL(A.MTEST, '') MTEST
		, NVL(A.FTEST, '') FTEST
		, NVL(A.REPORT, '') REPORT
		, NVL(A.ISGRADUATED, '') ISGRADUATED
		, NVL(A.SCORE, '') SCORE
		,( SELECT COUNT(*)
		FROM T_LMS_MOBILESTUDY
		WHERE SUBJ = A.SUBJ) AS MOBILE
		FROM T_LMS_STOLD A
		, T_LMS_SUBJSEQ B
		, T_LMS_SUBJ C
		WHERE A.SUBJ = B.SUBJ AND A.YEAR = B.YEAR AND A.SUBJSEQ = B.SUBJSEQ
		AND A.SUBJ = C.SUBJ
		AND A.USERID = #p_userid#
		<isNotEmpty property="p_year">
			AND B.YEAR = #p_year#
		</isNotEmpty>
		<isNotEmpty property="p_isonoff">
			AND C.ISONOFF = #p_isonoff#
		</isNotEmpty>
	</select>

	<!-- 자격시험 결제시 PRICE 정보를 가져온다. -->
	<select id="getRightTestApplyInfo" resultClass="cmap"
		parameterClass="cmap">
		/* propose.getRightTestApplyInfo 자격시험 결제시 PRICE 정보를 가져온다 */
		SELECT RIGHTNO
		, SEQ
		, INNINGNM
		, TAKEFEE AS PRICE
		FROM T_LMS_RIGHTINNING
		WHERE RIGHTNO = #p_rightno#
		AND SEQ = #p_seq#
	</select>

	<!-- 해당과정과 과정에 속한 과목들의 과정 년도 차수를 가지고 온다. -->
	<select id="getSubjRelateList" resultClass="cmap"
		parameterClass="cmap">
		/* propose.getSubjRelateList */
		SELECT #p_subj# SUBJ, #p_year# YEAR, #p_subjseq# SUBJSEQ FROM DUAL
		UNION ALL
		SELECT CONSUBJID, CONYEAR, CONSUBJSEQ
		FROM T_LMS_SUBJSEQRELATE
		WHERE SUBJ=#p_subj# AND YEAR=#p_year# AND SUBJSEQ=#p_subjseq#
	</select>

	<!-- 수강신청 정보의 결제 seq, recogstate 값 구하기 -->
	<select id="getProposeSeqState" resultClass="cmap"
		parameterClass="cmap">
		/* propose.getProposeSeqState */
		SELECT A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID, SEQ
		, RECOGSTATE
		FROM T_LMS_PROPOSE A
		, T_LMS_PAYMENT E
		WHERE A.TID = E.TID(+)
		AND A.SUBJ = #p_subj#
		AND A.YEAR = #p_year#
		AND A.SUBJSEQ = #p_subjseq#
		AND A.USERID = #p_userid#
	</select>

	<!-- 단기연수 수강취소 및 환불관련 규정 동의 업데이트 -->
	<update id="proposeWriteRefundAgreeUpdate" parameterClass="cmap">
		/* propose.proposeWriteRefundAgreeUpdate */
		MERGE INTO T_LMS_PROPOSE_DAMO X
		USING ( SELECT #p_refundagreeyn# REFUNDAGREEYN, SUBJ, YEAR, SUBJSEQ
		FROM T_LMS_SUBJSEQ
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq#
		UNION ALL
		SELECT #p_refundagreeyn# REFUNDAGREEYN, CONSUBJID SUBJ, CONYEAR YEAR,
		CONSUBJSEQ SUBJSEQ
		FROM T_LMS_SUBJSEQRELATE
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq# ) Y
		ON ( X.SUBJ = Y.SUBJ AND X.YEAR = Y.YEAR AND X.SUBJSEQ = Y.SUBJSEQ AND
		X.USERID = #p_userid# )
		WHEN MATCHED THEN
		UPDATE
		SET X.REFUNDAGREEYN = Y.REFUNDAGREEYN
	</update>

	<!-- 수강신청 알림 설정을 가져온다. -->
	<select id="selectProposeSmsNotiInfo" resultClass="cmap"
		parameterClass="cmap">
		/* propose.selectProposeSmsNotiInfo */
		SELECT A.SMSNOTIYN, A.SMSNOTINUMBER, C.CHKFINAL
		FROM T_LMS_SUBJ A
		, T_LMS_SUBJSEQ B
		, T_LMS_PROPOSE C
		WHERE A.SUBJ = B.SUBJ
		AND B.SUBJ = C.SUBJ AND B.YEAR = C.YEAR AND B.SUBJSEQ = C.SUBJSEQ
		AND C.SUBJ = #p_subj#
		AND C.YEAR = #p_year#
		AND C.SUBJSEQ = #p_subjseq#
		AND C.USERID = #p_userid#
	</select>


	<!-- 과정의 기수별 수강신청 유무 체크 -->
	<select id="selectCheckSubjseq" resultClass="java.lang.Integer"
		parameterClass="cmap">
		/* propose.selectCheckSubjseq */
		SELECT count(*)
		FROM T_LMS_PROPOSE
		WHERE SUBJ = #p_subj#
		AND YEAR = #p_year#
		AND SUBJSEQ = #p_subjseq#
		AND USERID = #p_userid#
	</select>
	<!-- 과정의 기수 개설 유무 확인 -->
	<select id="selectCheckOpenSubjseq" resultClass="java.lang.Integer"
		parameterClass="cmap">
		/* propose.selectCheckOpenSubjseq */
		SELECT count(*)
		FROM T_LMS_SUBJSEQ
		WHERE SUBJ = #p_subj#
		AND YEAR = #p_year#
		AND SUBJSEQ = #p_subjseq#
	</select>

	
	
	<!-- 무역마스터 학생인지 체크 -->
	<select id="checkMasterStudentResult" parameterClass="cmap" resultClass="cmap">
		<![CDATA[
			SELECT 
				(SELECT TO_NUMBER(SUBJSEQGR) FROM 
				T_LMS_SUBJSEQ WHERE
				SUBJ='24' AND SUBJSEQ= A.SUBJSEQ ) TRADESUBJSEQ
			FROM 
				T_LMS_STUDENT A
			WHERE
				SUBJ = '24'
				/* AND (ISGRADUATED = 'Y' OR TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN EDUSTART AND EDUEND)  무역마스터 학생으로 등록된사람이면 무조건 ok */
				AND USERID = #s_userid#
		]]>
	</select>

	<!-- 자격시험연수과정(외환관리사 실무과정) 수강신청시 설문조사 추가 -->
	<insert id="insertRightPropSulmun" parameterClass="cmap">
		/* propose.insertRightPropSulmun */
		INSERT INTO T_LMS_RIGHTPROPSULMUN 
		(
		SUBJ,
		SUBJSEQ,
		SEQ,
		USERID,
		JIKGUN,
		JIKGUNTEXT,
		TRADEMASTERSEQ,
		SULMUN1,
		SULMUN1TEXT,
		SULMUN2,
		SULMUN2TEXT,
		SULMUN3,
		SULMUN3TEXT,
		SULMUN4,
		SULMUN4TEXT,
		SULMUN5,
		SULMUN5TEXT,
		SULMUN6,
		SULMUN6TEXT,
		SULMUN7TEXT,
		COLLEGIANSAVENAME,
		PROOFEMPSAVENAME,
		BIZLICENSESAVENAME,
		FXMLICENSESAVENAME,
		BANKERSAVENAME,
		LDATE,
		YEAR,
		ENGNAME
		)
		VALUES
		 (
		 #v_subj#,
		#v_subjseq#,
		(SELECT NVL(MAX(SEQ), 0)+1 FROM T_LMS_RIGHTPROPSULMUN),
		#v_userid#,
		#v_jikgun#,
		#v_jikguntext#,
		#v_trademasterseq#,
		#v_sulmun1#,
		#v_sulmun1text#,
		#v_sulmun2#,
		#v_sulmun2text#,
		#v_sulmun3#,
		#v_sulmun3text#,
		#v_sulmun4#,
		#v_sulmun4text#,
		#v_sulmun5#,
		#v_sulmun5text#,
		#v_sulmun6#,
		#v_sulmun6text#,
		#v_sulmun7text#,
		#v_collegiansavename#,
		#v_proofempsavename#,
		#v_bizlicensesavename#,
		#v_fxmlicensesavename#,
		#v_bankersavename#,
		TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
		#v_year#,
		#v_engname#
		 )
	</insert>

	<delete id="deleteRightPropSulmun" parameterClass="cmap">
		<![CDATA[ /* propose.deleteRightPropSulmun */
		DELETE FROM T_LMS_RIGHTPROPSULMUN
		WHERE SUBJ = #p_subj# AND YEAR = #p_year# AND SUBJSEQ = #p_subjseq# AND USERID = #p_userid#
		]]>
	</delete>

</sqlMap>