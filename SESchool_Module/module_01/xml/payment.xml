<?xml version='1.0' encoding="EUC-KR"?>

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- WARNING: This is an autogenerated file -->

<sqlMap namespace="T_LMS_payment">
    
	<!---->
    <select id="getInipayInfo" resultClass="cmap" parameterClass="cmap">
        /* payment.getInipayInfo */
        SELECT A.INIPAYHOME, A.TYPE, A.ENCTYPE, A.CHECKOPT
            , DECODE(A.ISTEST,'Y','1111',A.ADMIN) ADMIN
            , A.DEBUG, A.ISTEST
            , DECODE(A.ISTEST,'Y','INIpayTest',C.CODENM) MID, B.TRAININGCLASS
            , B.NOINTEREST, B.QUOTABASE, B.ACCEPTMETHOD, B.CURRENCY
            , B.INI_LOGOIMAGE_URL, B.INI_MENUAREA_URL
        FROM T_PAY_INIPAYCONFIG A
            , T_PAY_INIPAYMIDINFO B
            , T_LMS_CODE C
        WHERE B.TRAININGCLASS = C.CODE AND C.GUBUN = '0101'
            AND B.TRAININGCLASS = #p_trainingclass#
	</select>
	
	<!---->
	<select id="getInipayInfoJiboo" resultClass="cmap" parameterClass="cmap">
		/* payment.getInipayInfoJiboo */ 
	       SELECT A.INIPAYHOME, 
		       A.TYPE, 
		       A.ENCTYPE, 
		       A.CHECKOPT , 
		       DECODE(A.ISTEST,'Y','1111',A.ADMIN) ADMIN , 
		       A.DEBUG, 
		       A.ISTEST , 
		        DECODE(A.ISTEST,'Y','INIpayTest',C.CODENM) MID, 
		       B.TRAININGCLASS , 
		       B.NOINTEREST, 
		       B.QUOTABASE, 
		       B.ACCEPTMETHOD, 
		       B.CURRENCY , 
		       B.INI_LOGOIMAGE_URL, 
		       B.INI_MENUAREA_URL 
		  FROM T_PAY_INIPAYCONFIG A , 
		       T_PAY_INIPAYMIDINFO B , 
		       T_LMS_CODE C
		       WHERE c.gubun=(SELECT codenm FROM T_LMS_CODE WHERE gubun='0101' AND code=15) AND B.TRAININGCLASS = 15 AND c.CODE=#p_trainingarea#  /*지역코드*/
	</select>
	
	<!---->
    <select id="getIcnPayInfo" resultClass="String" parameterClass="String">
        /* payment.getIcnPayInfo */
        SELECT PAYYN FROM T_LMS_ICNPAYSUBJ WHERE SUBJ = #subj#
	</select>
	
	<!---->
    <select id="selectVBankInfo" resultClass="cmap" parameterClass="cmap">
        /* payment.selectVBankInfo */
        SELECT  A.ISLICENSE, A.SEQ, A.TID, A.MOID
            , A.ISOPENSUBJ, A.SUBJ, A.YEAR, A.SUBJSEQ, A.USERID
            , A.RIGHTNO, INNINGSEQ, APPLYNUM
            , A.AMOUNT, A.PAYMETHOD, A.RECOGSTATE
            , (SELECT ISINSTALLMENT FROM T_LMS_SUBJSEQ WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ) ISINSTALLMENT
            , A.INSTALLMENT_SEQ
            , CASE WHEN ISLICENSE = 'Y' THEN '05'
                     ELSE (SELECT TRAININGCLASS FROM T_LMS_SUBJ WHERE SUBJ = A.SUBJ)
               END TRAINIGCLASS
            , B.VACT_NUM, B.VACT_NAME, B.VACT_INPUTNAME, B.VACT_DATE, B.TOTPRICE
            , B.VACT_BANKCODE, GET_CODENM('0050',B.VACT_BANKCODE) VACT_BANKNM
        FROM T_LMS_PAYMENT A
            , T_PAY_INIPAY B
        WHERE A.TID = B.TID
	    <isNotEmpty property="p_tid">
            AND A.TID = #p_tid#
	    </isNotEmpty>
	    <isNotEmpty property="p_moid">
            AND A.MOID = #p_moid#
	    </isNotEmpty>
	</select>
	
	
	<!---->
	<select id="selectPaymentPageList" resultClass="cmap" parameterClass="cmap">
	    <include refid="pageingTop" />
	    	<![CDATA[
	    	/* payment.selectPaymentPageList*/
			SELECT    A.SEQ, C.SUBJNM ,C.SUBJ ,B.SUBJSEQ , TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR 
			 	,CASE WHEN (( A.INSTALLMENT_SEQ ='999' or  A.INSTALLMENT_SEQ  is null) AND ( e.PRICE IS NOT NULL  and e.price < (NVL(e.BIYONG,0) + NVL(e.BOOKPRICESUM,0 )) )   ) THEN TO_CHAR(NVL(e.BIYONG,0) + NVL(e.BOOKPRICESUM,0 ) )
               	  WHEN ( ( A.INSTALLMENT_SEQ ='999' or  A.INSTALLMENT_SEQ  is null) AND   e.PRICE IS NOT NULL    ) THEN TO_CHAR(e.price )   /* B.BIYONG */ 
                  WHEN ( E.PRICE IS  NULL ) THEN '-'     /* B.BIYONG */  
                  ELSE 
                  NVL(TO_CHAR((SELECT TO_NUMBER(PRICE) FROM T_LMS_PROPOSEPAYINSTALL WHERE SUBJ = A.SUBJ AND SUBJSEQ = A.SUBJSEQ AND YEAR = A.YEAR AND USERID = A.USERID  and  installment_seq = A.installment_seq ))
                                ,
                                          (SELECT PAYAMT FROM T_LMS_SUBJSEQPAYMGR  WHERE subj=A.subj AND year=A.year AND subjseq = A.subjseq AND SEQ=A.installment_seq))
                  
                   END BIYONG /* 수강료  */
                  
				,  DECODE( A.RECOGSTATE, 'C', 0, 'F', 0, 'I', 0, 'N', 0,  A.AMOUNT ) AMOUNT /* 결제금액 */
  				, DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT      /* 환급여부  (1003 : 고용보험) */
  				, PRICETYPE 
  				, DECODE( PRICETYPE, '98' ,'회' ,'99' ,'비', NVL2( GET_CODENM('0109', PRICETYPE),'특',''))  VIEWPRICENM
                , D.USERID ,D.NAME , D.COMPNM COMPANYNM, D.DEPTNAM  /*개인정보  */
				, TO_CHAR(TO_DATE(SUBSTR(E.APPDATE,1,8),'YYYYMMDDHH24MISS'),'YYYY.MM.DD') APPDATE  /* 수강신청일 */
                , A.PAYMETHOD
                , DECODE(A.PAYMETHOD, '001000000000' ,'무통장', '010000000000','가상계좌','100000000000','카드','9999','개인능력카드','9998','마일리지','') PAYMETHODNM   /* 결제수단 */
                , A.RECOGSTATE ,GET_CODENM('0048', A.RECOGSTATE) PAYSTATUS   /*  결제여부 */
                , DECODE (A.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', TO_CHAR(TO_DATE(A.PAYDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')) PAYDATE   /* 결제일 */                
                , NVL(A.REFUNDAMOUNT,0) REFUNDAMOUNT      /* 환불금액 */
                , TO_CHAR(TO_DATE(A.REFUNDREQDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDREQDT     /* 환불 신청일 */
                , TO_CHAR(TO_DATE(A.REFUNDCOMPLETE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDCOMPLETE  /* 환불 처리일 */
                , DECODE(A.RECOGSTATE, 'E' ,'완료', 'D','처리완료','R','요청','P','처리중', '미요청') REFUNDSTATUS     /* 환불상태 */
                , B.GRCODE ,B.ISGOYONG  ,B.YEAR                                                         
                , D.EMAIL, D.HANDPHONE 
                , A.PAY_PAPER_NO, A.PAY_PAPER_STATE   /*  결제에 대한 전표번호, 전표 처리 여부 */
                , A.REPAY_PAPER_NO, A.REPAY_PAPER_STATE   /*  환불에 대한 전표번호, 전표 처리 여부 */
                , A.INSTALLMENT_SEQ   /* 수강료 분할 값  */
                , A.DOCUMENTSYN       /* 서류 접수 여부 */ 
                , G.PUBGUBUN
                , DECODE( G.APPLYGUBUN, 'R' , '영수증','C' , '현금영수증', 'B', '계산서', '-') APPLYGUBUN  
				, TO_CHAR(TO_DATE(G.BILLPUBDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') BILLPUBDT 
                , TO_CHAR(TO_DATE(G.BILLREQDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') BILLREQDT
                , DECODE( A.MEMO, null, 'N', 'Y') ISMEMO
                , A.USEMILEAGE 
                , D.RESNO 
                , (SELECT DISTINCT REPRESENT /* 단체신청 유무*/
            		FROM T_LMS_PROPOSESTUDENT 
           			WHERE SUBJ = C.SUBJ 
                 		AND SUBJSEQ = B.SUBJSEQ 
                 		AND REPRESENT = D.USERID 
          		  ) REPRESENT 
		   FROM  T_LMS_PAYMENT A, T_LMS_SUBJSEQ B, T_LMS_SUBJ C, T_LMS_MEMBER D  , T_LMS_BILLPUBREQ G, T_LMS_PROPOSE E
		   WHERE A.SUBJ	 			= B.SUBJ
			  	AND A.YEAR			= B.YEAR																				
   				AND A.SUBJSEQ 		= B.SUBJSEQ		
				AND A.SUBJ			= C.SUBJ																					
   				AND A.USERID		= D.USERID
   				AND A.SEQ			= G.PAYMENTSEQ(+) 
   				AND A.SUBJ			= E.SUBJ(+)
   				AND A.SUBJSEQ		= E.SUBJSEQ(+)
   				AND A.YEAR			= E.YEAR(+)
   				AND A.USERID		= E.USERID(+)
   				AND A.ISLICENSE = 'N' 
   				AND ( A.ISOPENSUBJ = 'N' OR A.ISOPENSUBJ IS NULL)   ]]>	
	    <isNotEmpty property="p_trainingclass">
	           AND C.TRAININGCLASS				= #p_trainingclass#
	    </isNotEmpty>  		
	    <isNotEmpty property="p_grcode">
	           AND B.GRCODE	 		= #p_grcode#	
	    </isNotEmpty>
	 	<isNotEmpty property="p_subj">
	           AND A.SUBJ	 				= #p_subj#
	    </isNotEmpty>
 		<isNotEmpty property="p_grseq">
	           AND B.GRSEQ	 			= #p_grseq#
	    </isNotEmpty>
	    <isNotEmpty property="p_gyear">
	           AND B.GYEAR	 			= #p_gyear#
	    </isNotEmpty>
	    <isNotEmpty property="p_gubun">
	           AND C.ISONOFF	 			= #p_gubun#
	    </isNotEmpty>
	    <isNotEmpty property="p_subjseq">
	           AND A.SUBJSEQ	 			= #p_subjseq#
	    </isNotEmpty>
	     <isNotEmpty property="p_trainingarea">   <!-- 추가_2013.11.27_지부연수 지역 -->
	           AND C.TRAININGAREA	= #p_trainingarea#
	    </isNotEmpty>
	    <isNotEmpty property="p_comp">
	           AND D.COMP	IN( SELECT DISTINCT(COMP) FROM T_LMS_COMPCLASS
                                 WHERE (UPPERCOMP=#p_comp# AND GROUPYN='N') 
                                    OR (COMP=#p_comp# AND GROUPYN='N')
                              )
	    </isNotEmpty>
	    <isNotEmpty property="p_costsupport">
			    AND  (SELECT COSTSUPPORT FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  )	= #p_costsupport#
		</isNotEmpty>
	    <isNotEmpty property="p_searchval" >
		    <isEqual property="p_searchitem" compareValue="USERID" prepend="">
			     	AND D.USERID	 LIKE #p_searchval#||'%'
			</isEqual>
			<isEqual property="p_searchitem" compareValue="USERNAME" prepend="">
			     	AND D.NAME LIKE '%'||#p_searchval#||'%' 
			</isEqual>
			<isEqual property="p_searchitem" compareValue="RESNO" prepend="">
			     	AND (   D.RESNO = 	REPLACE( #p_searchval# , '-','') ) 
			</isEqual>
	    	<isEqual property="p_searchitem" compareValue="COMPNM" prepend="">
			     	AND (   D.COMPNM LIKE '%'||#p_searchval#||'%' 
			     			OR ( ( SELECT COMPNM FROM T_LMS_COMPCLASS WHERE COMP = D.COMP )  LIKE '%'||#p_searchval#||'%' ) )  
			</isEqual>
	    </isNotEmpty>
	    <isNotEmpty property="p_paymethod">
	           AND A.PAYMETHOD	in(  $p_paymethod$ ) 
	    </isNotEmpty>
	    <isNotEmpty property="p_paystartdt">
	           AND SUBSTR(A.PAYDATE,1,8) &gt;= #p_paystartdt#
	           AND A.RECOGSTATE NOT IN ('N','F','I','C') 
	    </isNotEmpty>
	    <isNotEmpty property="p_payenddt">
	    		AND SUBSTR(A.PAYDATE,1,8) &lt;= #p_payenddt#
	    </isNotEmpty>
	     <isNotEmpty property="p_appdate1">
	           AND (SELECT SUBSTR(APPDATE,1,8) FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  )  &gt;= #p_appdate1#
	    </isNotEmpty>
	    <isNotEmpty property="p_appdate2">
	    		AND (SELECT SUBSTR(APPDATE,1,8) FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  ) &lt;= #p_appdate2#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundcomplete1">
	           AND SUBSTR(A.REFUNDCOMPLETE,1,8) &gt;= #p_refundcomplete1#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundcomplete2">
	    		AND SUBSTR(A.REFUNDCOMPLETE,1,8) &lt;= #p_refundcomplete2#
	    </isNotEmpty>
	    <isNotEmpty property="p_amountstart">
	           AND A.AMOUNT &gt;= #p_amountstart#
	    </isNotEmpty>
	    <isNotEmpty property="p_amountend">
	    		AND A.AMOUNT &lt;= #p_amountend#
	    </isNotEmpty>
	    <isNotEmpty property="p_recogstate">
 		 		AND A.RECOGSTATE in ( $p_recogstate$ )
	    </isNotEmpty>
	    <isNotEmpty property="p_pay_paper_state">
 		 		AND A.PAY_PAPER_STATE = #p_pay_paper_state#
	    </isNotEmpty>
	     <isNotEmpty property="p_pricetype">
 		 		AND E.PRICETYPE = #p_pricetype#
	    </isNotEmpty>
	    <isEqual property="p_refund" compareValue="Y" prepend="">
			    AND COSTSUPPORT  = '1003'  
		</isEqual>
		<isEqual property="p_refund" compareValue="N" prepend="">
			 <![CDATA[ AND COSTSUPPORT  <> '1003'    ]]>
		</isEqual>
		 <isEqual property="p_pubgubun" compareValue="Y" prepend="">
			   AND  G.PUBGUBUN = #p_pubgubun#
		</isEqual>
	    <isEqual property="p_pubgubun" compareValue="N" prepend="">
			   AND (  G.PUBGUBUN = #p_pubgubun# OR G.PUBGUBUN IS NULL ) 
		</isEqual>
		<isNotEmpty property="p_applygubun">
	           AND G.APPLYGUBUN	= #p_applygubun#
	    </isNotEmpty>
	    		ORDER BY A.SEQ DESC 
		<include refid="pageingBottom" />	
	</select>

	<!---->
	<select id="selectPaymentCoursePageList" resultClass="cmap" parameterClass="cmap">
		<include refid="pageingTop" />
	    <![CDATA[
	    SELECT * FROM (
			 SELECT  A.SEQ, GET_SUBJNM(A.SUBJ) SUBJNM ,A.SUBJ ,B.SUBJSEQ ,B.YEAR       /*과정 */  
            	, D.USERID ,D.NAME , D.EMAIL, D.HANDPHONE   /*  아이디, 이름 , 부서, 이메일, 핸드폰   */
                , D.COMPNM  COMPANYNM       /* 회사명 */
                ,CASE WHEN (( A.INSTALLMENT_SEQ ='999' or  A.INSTALLMENT_SEQ  is null) AND ( c.PRICE IS NOT NULL and c.price < (NVL(c.BIYONG,0) + NVL(c.BOOKPRICESUM,0 )) )) THEN TO_CHAR(NVL(c.BIYONG,0) + NVL(c.BOOKPRICESUM,0 ) )
               	  WHEN ( ( A.INSTALLMENT_SEQ ='999' or  A.INSTALLMENT_SEQ  is null) AND   c.PRICE IS NOT NULL    ) THEN TO_CHAR(c.price )   /* B.BIYONG */ 
                  WHEN (C.PRICE IS NULL) THEN '-'  /* B.BIYONG */  
                  ELSE TO_CHAR((SELECT TO_NUMBER(PRICE) FROM T_LMS_PROPOSEPAYINSTALL WHERE SUBJ = A.SUBJ AND SUBJSEQ = A.SUBJSEQ AND YEAR = A.YEAR AND USERID = A.USERID  and  installment_seq = A.installment_seq)) END BIYONG /* 수강료  */
                , DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') COSTSUPPORTNM      /* 환급여부 */
                , COSTSUPPORT
                , PRICETYPE ,  DECODE( PRICETYPE, '98' ,'회' ,'99' ,'비' , NVL2( GET_CODENM('0109', PRICETYPE),'특',''))  PRICETYPENM  /* 회/ 비/ 특 */
                , A.DOCUMENTSYN       /* 서류 접수 여부 */  
                ,  DECODE( A.RECOGSTATE, 'C', 0, 'F', 0, 'I', 0, 'N', 0,  A.AMOUNT ) AMOUNT /* 결제금액 */
                , DECODE(A.PAYMETHOD, '001000000000' ,'무통장', '010000000000','가상계좌','100000000000','카드','9999','개인능력카드','9998','마일리지','') PAYMETHODNM  , A.PAYMETHOD  /* 결제수단 */
                , DECODE (A.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', TO_CHAR(TO_DATE(A.PAYDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')) PAYDATE   /* 결제일 */         
                , NVL(A.REFUNDAMOUNT,0) REFUNDAMOUNT      /* 환불금액 */
                , TO_CHAR(TO_DATE(A.REFUNDCOMPLETE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDCOMPLETE  /* 환불 처리일 */
                , A.RECOGSTATE  ,GET_CODENM('0048', A.RECOGSTATE) PAYSTATUS   /*  결제여부 */
                , A.INSTALLMENT_SEQ   /* 수강료 분할 값  */
                , DECODE(E.APPLYGUBUN, 'R' , '영수증','C' , '현금영수증', 'B', '계산서', '-') APPLYGUBUN , E.PUBGUBUN, E.BILLREQDT   /*  요청서류 */
                , TO_CHAR(TO_DATE(C.APPDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') INDATE  /* 수강신청일 */  
                , DECODE( A.MEMO, null, 'N', 'Y') ISMEMO   
                , A.USEMILEAGE     
           FROM  T_LMS_PAYMENT A, T_LMS_SUBJSEQ B, T_LMS_MEMBER D , T_LMS_BILLPUBREQ E, T_LMS_PROPOSE C 
		   WHERE A.SUBJ	 			= B.SUBJ																					
			  	AND A.YEAR			= B.YEAR																				
   				AND A.SUBJSEQ 		= B.SUBJSEQ																					
   				AND A.USERID		= D.USERID
   				AND A.ISLICENSE = 'N' 
   				AND A.SUBJ = E.SUBJ(+)
                AND A.SUBJSEQ = E.SUBJSEQ(+)
                AND A.YEAR = E.YEAR (+)
				AND A.USERID = E.USERID (+)
				AND A.SEQ = E.PAYMENTSEQ(+)
                AND A.SUBJ = C.SUBJ(+)
                AND A.SUBJSEQ = C.SUBJSEQ(+)
                AND A.YEAR = C.YEAR (+)
                AND A.USERID = C.USERID (+)
		  ]]>
	 	<isNotEmpty property="p_subj">
	           AND A.SUBJ	 				= #p_subj#
	    </isNotEmpty> 		
	    <isNotEmpty property="p_subjseq">
	           AND A.SUBJSEQ	 			= #p_subjseq#
	    </isNotEmpty>
	    <isNotEmpty property="p_paymethod">
	           AND A.PAYMETHOD	 			= #p_paymethod#
	    </isNotEmpty>	
	    <isNotEmpty property="p_recogstate">
 		 		AND A.RECOGSTATE in ( $p_recogstate$ )
	    </isNotEmpty>
	    <isNotEmpty property="p_applygubun">
 		 		AND E.APPLYGUBUN 			= #p_applygubun#
	    </isNotEmpty>
	    <isNotEmpty property="p_pricetype">
 		 		AND C.PRICETYPE 			= #p_pricetype#
	    </isNotEmpty>	
	    <isNotEmpty property="p_searchval" >
		     <isEqual property="p_searchitem" compareValue="USERID" prepend="">
			     	AND D.USERID	 LIKE #p_searchval#||'%'
			</isEqual>
			<isEqual property="p_searchitem" compareValue="USERNAME" prepend="">
			     	AND D.NAME LIKE '%'||#p_searchval#||'%' 
			</isEqual>
			<isEqual property="p_searchitem" compareValue="RESNO" prepend="">
			     	AND (   D.RESNO = 	REPLACE( #p_searchval# , '-','') ) 
			</isEqual>
	    	<isEqual property="p_searchitem" compareValue="COMPNM" prepend="">
			     	AND (   D.COMPNM LIKE '%'||#p_searchval#||'%' 
			     			OR ( ( SELECT COMPNM FROM T_LMS_COMPCLASS WHERE COMP = D.COMP )  LIKE '%'||#p_searchval#||'%' ) )  
			</isEqual>
	    </isNotEmpty> 
	    		ORDER BY C.APPDATE DESC  ) BB WHERE ROWNUM IS NOT NULL	
	    <isNotEmpty property="p_costsupport">
 		 		AND COSTSUPPORTNM 			= #p_costsupport#
	    </isNotEmpty>				    		
		<include refid="pageingBottom" />	
	</select>
		
	<!---->
	<select id="selectRefundPageList" resultClass="cmap" parameterClass="cmap">
	    <include refid="pageingTop" />
	    	<![CDATA[
	    	/* payment.selectRefundPageList  */
			SELECT  A.SEQ, C.SUBJNM ,C.SUBJ ,B.SUBJSEQ , TO_NUMBER(B.SUBJSEQGR) SUBJSEQGR    /*과정 */
				,CASE WHEN (( A.INSTALLMENT_SEQ ='999' or  A.INSTALLMENT_SEQ  is null) AND ( e.PRICE IS NOT NULL  and e.price < (NVL(e.BIYONG,0) + NVL(e.BOOKPRICESUM,0 )) )) THEN TO_CHAR(NVL(e.BIYONG,0) + NVL(e.BOOKPRICESUM,0 ) )
               	  WHEN ( ( A.INSTALLMENT_SEQ ='999' or  A.INSTALLMENT_SEQ  is null) AND   e.PRICE IS NOT NULL    ) THEN TO_CHAR(e.price )   /* B.BIYONG */ 
                    WHEN (E.PRICE IS NULL)  THEN '-'     /* B.BIYONG */  
                    ELSE TO_CHAR((SELECT TO_NUMBER(PRICE) FROM T_LMS_PROPOSEPAYINSTALL WHERE SUBJ = A.SUBJ AND SUBJSEQ = A.SUBJSEQ AND YEAR = A.YEAR AND USERID = A.USERID  and installment_seq = A.installment_seq)) END BIYONG /* 수강료  */
                , DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT      /* 환급여부 */
                , PRICETYPE ,   DECODE( PRICETYPE, '98' ,'회원' ,'99' ,'비회원' , GET_CODENM('0109', PRICETYPE) )  PRICETYPENM  /* 회/ 비/ 특 */
                , D.USERID ,D.NAME , D.COMPNM  COMPANYNM, D.DEPTNAM  /*개인정보  */
                , DECODE(A.PAYMETHOD, '001000000000' ,'무통장', '010000000000','가상계좌','100000000000','카드','9999','개인능력카드','9998','마일리지','') PAYMETHOD    /* 결제수단 */
                ,  DECODE( A.RECOGSTATE, 'C', 0, 'F', 0, 'I', 0, 'N', 0,  A.AMOUNT ) AMOUNT /* 결제금액 */
                , A.RECOGSTATE ,GET_CODENM('0048', A.RECOGSTATE) PAYSTATUS   /*  결제여부 */
                , DECODE (A.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', TO_CHAR(TO_DATE(A.PAYDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')) PAYDATE   /* 결제일 */    
                , GET_CODENM('0087', A.REFUNDREASON) REFUNDREASONNM     /* 환불사유 */
                , NVL(A.REFUNDAMOUNT,0) REFUNDAMOUNT      /* 환불금액 */
                , A.AMOUNT - REFUNDAMOUNT BALANCE         /* 환불 후 잔액 */
                , TO_CHAR(TO_DATE(A.REFUNDREQDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDREQDT     /* 환불 신청일 */
                , TO_CHAR(TO_DATE(A.REFUNDCOMPLETE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDCOMPLETE  /* 환불 처리일 */
        		, DECODE(A.RECOGSTATE, 'C' ,'취소','E' ,'완료', 'D','처리완료','R','요청','P','처리중', '미요청') REFUNDSTATUS     /* 환불상태 */
        		, GET_CODENM('0050',A.REFUNDBANKCD) BANK_NAME   /*환불은행*/
		     	, A.REFUNDDEPOSITOR                             /*환불예금주*/
        		, A.REFUNDACCOUNT                               /*환불계좌번호*/
                , B.GRCODE ,B.ISGOYONG  ,B.YEAR                                                         
                , D.EMAIL, D.HANDPHONE 
                , A.PAY_PAPER_NO, A.PAY_PAPER_STATE   /*  결제에 대한 전표번호, 전표 처리 여부 */
                , A.REPAY_PAPER_NO, A.REPAY_PAPER_STATE   /*  환불에 대한 전표번호, 전표 처리 여부 */
                , A.INSTALLMENT_SEQ   /* 수강료 분할 값  */
                , DECODE( A.MEMO, null, 'N', 'Y') ISMEMO
                , A.USEMILEAGE
            FROM  T_LMS_PAYMENT A, T_LMS_SUBJSEQ B, T_LMS_SUBJ C, T_LMS_MEMBER D , T_LMS_PROPOSE E
               WHERE A.SUBJ                 = B.SUBJ                                                                                    
                 AND A.YEAR                = B.YEAR                                                                                
                 AND A.SUBJSEQ             = B.SUBJSEQ        
                 AND A.SUBJ                = C.SUBJ                                                                                    
                 AND A.USERID            = D.USERID
                 AND A.SUBJ                 = E.SUBJ(+)
                 AND A.SUBJSEQ           = E.SUBJSEQ(+)
                 AND A.YEAR                 = E.YEAR(+)
                 AND A.USERID              = E.USERID(+)
                 AND A.RECOGSTATE IN ('E','D','P','R' )   /* 상태가   환불완료/환불처리완료/ 환불처리중 / 환불요청  */ 
                 AND A.ISLICENSE = 'N' 
                 AND ( A.ISOPENSUBJ = 'N' OR A.ISOPENSUBJ IS NULL)  
	  ]]>	
		<isNotEmpty property="p_trainingclass">
	           AND C.TRAININGCLASS 				= #p_trainingclass#
	    </isNotEmpty>  		
	    <isNotEmpty property="p_grcode">
	           AND B.GRCODE	 		= #p_grcode#	
	    </isNotEmpty>
	 	<isNotEmpty property="p_subj">
	           AND A.SUBJ	 				= #p_subj#
	    </isNotEmpty>
 		<isNotEmpty property="p_grseq">
	           AND B.GRSEQ	 			= #p_grseq#
	    </isNotEmpty>
	    <isNotEmpty property="p_gyear">
	           AND B.GYEAR	 			= #p_gyear#
	    </isNotEmpty>
	    <isNotEmpty property="p_gubun">
	           AND C.ISONOFF	 			= #p_gubun#
	    </isNotEmpty>
	    <isNotEmpty property="p_trainingarea">
	           AND C.TRAININGAREA	= #p_trainingarea#
	    </isNotEmpty>
	    <isNotEmpty property="p_subjseq">
	           AND A.SUBJSEQ	 			= #p_subjseq#
	    </isNotEmpty>
	    <isNotEmpty property="p_comp">
	             AND D.COMP	IN( SELECT DISTINCT(COMP) FROM T_LMS_COMPCLASS
                                 WHERE (UPPERCOMP=#p_comp# AND GROUPYN='N') 
                                    OR (COMP=#p_comp# AND GROUPYN='N')
                              )
	    </isNotEmpty>
	    <isNotEmpty property="p_searchval" >
		     <isEqual property="p_searchitem" compareValue="USERID" prepend="">
			     	AND D.USERID	 LIKE #p_searchval#||'%'
			</isEqual>
			<isEqual property="p_searchitem" compareValue="USERNAME" prepend="">
			     	AND D.NAME LIKE '%'||#p_searchval#||'%' 
			</isEqual>
			<isEqual property="p_searchitem" compareValue="RESNO" prepend="">
			     	AND (   D.RESNO = 	REPLACE( #p_searchval# , '-','') ) 
			</isEqual>
	    	<isEqual property="p_searchitem" compareValue="COMPNM" prepend="">
			     	AND (   D.COMPNM LIKE '%'||#p_searchval#||'%' 
			     			OR ( ( SELECT COMPNM FROM T_LMS_COMPCLASS WHERE COMP = D.COMP )  LIKE '%'||#p_searchval#||'%' ) )  
			</isEqual>
	    </isNotEmpty>
	    <isNotEmpty property="p_costsupport">
			    AND  (SELECT COSTSUPPORT FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  )	= #p_costsupport#
		</isNotEmpty>
	    <isNotEmpty property="p_paymethod">
	           AND A.PAYMETHOD	= #p_paymethod#
	    </isNotEmpty>
	    <isNotEmpty property="p_paystartdt">
	           AND SUBSTR(A.PAYDATE,1,10) &gt;= #p_paystartdt#
	           AND A.RECOGSTATE NOT IN ('N','F','I','C') 
	    </isNotEmpty>
	    <isNotEmpty property="p_payenddt">
	    		AND SUBSTR(A.PAYDATE,1,10) &lt;= #p_payenddt#
	    </isNotEmpty> 
	     <isNotEmpty property="p_recogstate">
 		 		AND A.RECOGSTATE in ( $p_recogstate$ )
	    </isNotEmpty>
	    <isNotEmpty property="p_repay_paper_state">
 		 		AND A.REPAY_PAPER_STATE = #p_repay_paper_state#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundcomplete1">
	           AND SUBSTR(A.REFUNDCOMPLETE,1,8) &gt;= #p_refundcomplete1#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundcomplete2">
	    		AND SUBSTR(A.REFUNDCOMPLETE,1,8) &lt;= #p_refundcomplete2#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundreqdt1">
	           AND SUBSTR(A.REFUNDREQDT,1,8) &gt;= #p_refundreqdt1#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundreqdt2">
	    		AND SUBSTR(A.REFUNDREQDT,1,8) &lt;= #p_refundreqdt2#
	    </isNotEmpty>
	    	ORDER BY A.REFUNDREQDT DESC 
		<include refid="pageingBottom" />	
	</select>
	
	<select id="getIsSettlementTmpProgress" resultClass="integer" parameterClass="cmap" >
	    	<![CDATA[
				SELECT COUNT(*) FROM T_LMS_PAYMENT 
				WHERE SEQ = #p_seq# AND PAY_PAPER_STATE in('1', '9')  		
		  ]]>																							
	</select>
	
	<select id="getIsRePayTmpProgress" resultClass="integer" parameterClass="cmap" >
	    	<![CDATA[
				SELECT COUNT(*) FROM T_LMS_PAYMENT 
				WHERE SEQ = #p_seq# AND REPAY_PAPER_STATE in('1', '9')  		
		  ]]>																							
	</select>
	
	<!---->
	<select id="getPaymentRecogstate" resultClass="string" parameterClass="cmap" >
	    	<![CDATA[
				SELECT RECOGSTATE FROM T_LMS_PAYMENT 
				WHERE SEQ = #p_seq#	
		  ]]>																							
	</select>
		
	<!---->
	<select id="getPaymentApplyInfo" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
	    	select A.SEQ, #p_atlc_aplt_key# ATLC_APLT_KEY , A.YEAR
	    		,( SELECT BUDGET_CODE FROM T_LMS_BUDGETCODE 
					WHERE TYPE='CO' AND COURSEID = A.SUBJ AND YEAR = A.YEAR ) BUDGET_CODE
				, NVL ( A.AMOUNT, 0) AMOUNT, TO_NUMBER (A.SUBJSEQ)  SUBJSEQ
				, B.SUBJNM || ' ' ||   TO_NUMBER(C.SUBJSEQGR) || '기' COURSE_NAME
				, #p_aprv_yn# APRV_YN
				, #p_inpt_dttm# INPT_DTTM
				, #s_userid# CRTR_ID
			FROM T_LMS_PAYMENT A , T_LMS_SUBJ B , T_LMS_SUBJSEQ C
			WHERE A.SUBJ = B.SUBJ
				AND A.SUBJ = C.SUBJ
				AND A.SUBJSEQ = C.SUBJSEQ
				AND A.YEAR = C.YEAR
				AND A.SUBJ = #p_subj#
				AND A.YEAR = #p_year#
				AND A.SUBJSEQ = #p_subjseq#
				AND A.USERID = #p_userid#
				AND A.SEQ = #p_seq#		
		  ]]>																							
	</select>
	<!---->
	<select id="getPaymentTestApplyInfo" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
	    	select A.SEQ, #p_atlc_aplt_key# ATLC_APLT_KEY , SUBSTR( B.TESTSTARTDT,0,4) YEAR
	    		,( SELECT BUDGET_CODE FROM T_LMS_BUDGETCODE 
					WHERE TYPE='TE' AND COURSEID = A.RIGHTNO AND YEAR =  SUBSTR( B.TESTSTARTDT,0,4)  ) BUDGET_CODE 
				, NVL ( A.AMOUNT, 0) AMOUNT
				, C.KORNM || ' ' || B.INNINGNM || '회' TEST_NAME
				, #p_aprv_yn# APRV_YN  
				, #p_inpt_dttm# INPT_DTTM
				, #s_userid# CRTR_ID
			FROM T_LMS_PAYMENT A , T_LMS_RIGHTINNING B, T_LMS_RIGHTTEST C
			WHERE A.RIGHTNO = B.RIGHTNO
				  AND A.RIGHTNO = B.RIGHTNO
				  AND B.RIGHTNO = C.RIGHTNO
				  AND C.RIGHTNO = A.RIGHTNO
				  AND A.INNINGSEQ = B.SEQ 
				  AND A.SEQ = #p_seq#
		  ]]>																							
	</select>
	
	<!---->
	<select id="getRepayApplyInfo" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
	    	select A.SEQ STLM_KEY, #p_atlc_aplt_key# ATLC_APLT_KEY, A.SEQ RFNM_KEY, A.YEAR
	    		,( SELECT BUDGET_CODE FROM T_LMS_BUDGETCODE 
					WHERE TYPE='CO' AND COURSEID = A.SUBJ AND YEAR = A.YEAR ) BUDGET_CODE
				, A.REFUNDAMOUNT AMOUNT , A.REFUNDDEPOSITOR , A.REFUNDBANKCD, A.REFUNDACCOUNT   /* 환불 금액, 환불 계좌 예금주, 환불 은행 코드, 환불계좌번호   */
				, (SELECT M.NAME FROM T_LMS_MEMBER M WHERE M.USERID = A.USERID ) USER_NAME
				, #p_aprv_yn# APRV_YN
				, #p_inpt_dttm# INPT_DTTM
				, #s_userid# CRTR_ID
			FROM T_LMS_PAYMENT A , T_LMS_SUBJ B , T_LMS_SUBJSEQ C
			WHERE A.SUBJ = B.SUBJ
				AND A.SUBJ = C.SUBJ
				AND A.SUBJSEQ = C.SUBJSEQ
				AND A.YEAR = C.YEAR
				AND A.SEQ = #p_seq#
		  ]]>																							
	</select>
	
	<!---->
	<select id="getRepayTestApplyInfo" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
	    	select A.SEQ STLM_KEY , A.SEQ RFNM_KEY, #p_atlc_aplt_key# ATLC_APLT_KEY, SUBSTR( B.TESTSTARTDT, 0,4 ) YEAR
	    		,( SELECT BUDGET_CODE FROM T_LMS_BUDGETCODE 
					WHERE TYPE='TE' AND COURSEID = A.RIGHTNO AND YEAR =  SUBSTR( B.TESTSTARTDT, 0,4 ) ) BUDGET_CODE
				, A.REFUNDAMOUNT AMOUNT , A.REFUNDDEPOSITOR , A.REFUNDBANKCD, A.REFUNDACCOUNT   /* 환불 금액, 환불 계좌 예금주, 환불 은행 코드, 환불계좌번호   */
				, (SELECT M.NAME FROM T_LMS_MEMBER M WHERE M.USERID = A.USERID ) USER_NAME
				, #p_aprv_yn# APRV_YN
				, #p_inpt_dttm# INPT_DTTM
				, #s_userid# CRTR_ID 
			FROM T_LMS_PAYMENT A , T_LMS_RIGHTINNING B
			WHERE A.RIGHTNO = B.RIGHTNO
				AND A.INNINGSEQ = B.SEQ
				AND A.SEQ = #p_seq#
				AND A.USERID = #p_userid#
		  ]]>																							
	</select>	
			
	<!---->		
	<update id="updatePaymentPaperState" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT 
				SET PAY_PAPER_STATE = '1'
				, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			WHERE SEQ = #p_seq#
		]]>
	</update>

	<!---->		
	<update id="updateRepayPaperState" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT 
				SET REPAY_PAPER_STATE = '1'
				, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			WHERE SEQ = #p_repay_key#
		]]>
	</update>
	
	<select id="selectPaymentDetail" resultClass="cmap" parameterClass="cmap" >
	<![CDATA[ /* payment.selectPaymentDetail */
        SELECT  P.SUBJ, P.YEAR, P.SUBJSEQ, P.SEQ, P.USERID, P.RECOGSTATE
            , P.PAYMETHOD , GET_CODENM('0056', P.PAYMETHOD) PAYMETHODNM
            , GET_CODENM('0048', P.RECOGSTATE) PAYSTATUS
            , DECODE(P.RECOGSTATE, 'C','취소', 'E','완료','D','처리완료','R','요청', 'P','처리중','미요청') REFUNDSTATUS
            , DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT , COSTSUPPORT      /* 환급여부  (1003 : 고용보험) */            
            , P.REFUNDREQDT
            , P.REFUNDCOMPLETE
            , P.REFUNDUSERID
            , P.REFUNDBANKCD, P.REFUNDACCOUNT 
            , P.REFUNDREASON, P.REFUNDAMOUNT, P.REFUNDTYPE, P.REFUNDDEPOSITOR
            , P.AMOUNT
            , P.MEMO
            , M.NAME , M.RESNO    , M.HOMETEL, M.HANDPHONE, M.POST1, M.POST2  /*이름, 주민번호, 전화, 핸드폰, 우편번호1, 우편번호2*/ 
            , M.ADDR  MEMBERADDR , M.ADDR2  MEMBERADDR2 , M.EMAIL ,M.COMPNM   
            , R.PRICE BIYONG /* 수강료  */
            , P.PAY_PAPER_NO, P.PAY_PAPER_STATE                   /*  결제에 대한 전표번호, 전표 처리 여부 */
            , P.REPAY_PAPER_NO, P.REPAY_PAPER_STATE       /*  환불에 대한 전표번호, 전표 처리 여부 */ 
            , DECODE(R.PRICETYPE, '98' ,'회원' ,'99' ,'비회원' , GET_CODENM('0109', PRICETYPE) ) PRICETYPENM, R.ENG_NAME
            , I.APPLDATE, I.APPLNUM , GET_CODENM('0050',I.VACT_BANKCODE) BANK_NAME, VACT_NUM 
            , P.INSTALLMENT_SEQ   /* 분납정보 */
            , DECODE (P.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', P.PAYDATE) PAYDATE   /* 결제일 */
            , SUBJNM, SUBJSEQNM, EDUSTART, EDUEND    /* 과정 정보 */
            , A.APPLYGUBUN, A.BILLREQDT,  A.PUBGUBUN , A.INSURAYN   /* 계산서 정보 */ 
            , A.DOCPREPAREYN, A.COMPNM BILLCOMPNM, A.CHIEFNM, A.REGSTNO            /* 계산서 정보 */
            , A.BUSINESSCOND, A.BUSINESSTYPE, A.ZIPCODE, A.ADDR1, A.ADDR2   /* 계산서 정보 */
            , A.COMTEL, A.COMFAX    /* 계산서 정보 */
            , A.RIGHTNO, A.INNINGSEQ, A.APPLYNUM 
            , P.DOCUMENTSYN
            , R.TRAININGCLASS
            , P.USEMILEAGE
            , A.RECEIPTNO
        FROM T_LMS_PAYMENT P, T_LMS_MEMBER M
            , (SELECT GET_SUBJNM(A.SUBJ) SUBJNM,  A.SUBJ, A.SUBJSEQ, TO_NUMBER(B.SUBJSEQGR) || '기' SUBJSEQNM,  A.YEAR, A.USERID, A.PRICETYPE , A.ENG_NAME 
                   , B.EDUSTART, B.EDUEND  , A.COSTSUPPORT , A.PRICE, C.TRAININGCLASS
               FROM T_LMS_PROPOSE A, T_LMS_SUBJSEQ B, T_LMS_SUBJ C
               WHERE A.SUBJ = B.SUBJ AND A.SUBJSEQ = B.SUBJSEQ AND A.YEAR = B.YEAR  AND A.SUBJ = C.SUBJ) R 
            , T_PAY_INIPAY I
            , T_LMS_BILLPUBREQ A
        WHERE P.USERID = M.USERID
            AND P.SUBJ = R.SUBJ(+)
            AND P.YEAR = R.YEAR(+)
            AND P.SUBJSEQ = R.SUBJSEQ(+)
            AND P.USERID = R.USERID(+)
            AND P.TID = I.TID(+)
            AND P.SUBJ = A.SUBJ(+)
            AND P.SUBJSEQ = A.SUBJSEQ(+)
            AND P.YEAR = A.YEAR(+)
            AND P.USERID = A.USERID(+)
            AND P.SEQ = A.PAYMENTSEQ(+)
            AND P.SEQ = #p_seq#  ]]>
		
	</select>	
	<!---->
	<select id="selectPaymentUseKamisDetail" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
	    		/* payment.selectPaymentUseKamisDetail */
				 SELECT    P.SUBJ, P.YEAR, P.SUBJSEQ, P.SEQ, P.USERID, P.RECOGSTATE
                  , P.PAYMETHOD , GET_CODENM('0056', P.PAYMETHOD) PAYMETHODNM
                  , GET_CODENM('0048', P.RECOGSTATE) PAYSTATUS
                  , DECODE(P.RECOGSTATE, 'C','취소', 'E','완료','D','처리완료','R','요청', 'P','처리중','미요청') REFUNDSTATUS
                  , DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT , COSTSUPPORT      /* 환급여부  (1003 : 고용보험) */        
                  , P.REFUNDREQDT
                  , P.REFUNDCOMPLETE
                  , P.REFUNDUSERID
                  , P.REFUNDBANKCD, P.REFUNDACCOUNT 
                  , P.REFUNDREASON, P.REFUNDAMOUNT, P.REFUNDTYPE, P.REFUNDDEPOSITOR
                  , P.AMOUNT
                  , P.MEMO
                  , M.NAME , M.RESNO    , M.HOMETEL, M.HANDPHONE, M.POST1, M.POST2  /*이름, 주민번호, 전화, 핸드폰, 우편번호1, 우편번호2*/ 
                  , M.ADDR  MEMBERADDR , M.ADDR2  MEMBERADDR2 , M.EMAIL ,M.COMPNM
                  , P.PAY_PAPER_NO, P.PAY_PAPER_STATE           /*  결제에 대한 전표번호, 전표 처리 여부 */
                  , P.REPAY_PAPER_NO, P.REPAY_PAPER_STATE       /*  환불에 대한 전표번호, 전표 처리 여부 */ 
                  , DECODE(R.PRICETYPE, '98' ,'회원' ,'99' ,'비회원' , GET_CODENM('0109', PRICETYPE) ) PRICETYPENM, R.ENG_NAME
                  , P.INSTALLMENT_SEQ   /* 분납정보 */
                  , DECODE (P.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', P.PAYDATE) PAYDATE   /* 결제일 */
                  , SUBJNM, SUBJSEQNM, EDUSTART, EDUEND    /* 과정 정보 */
                  , A.APPLYGUBUN, A.BILLREQDT,  A.PUBGUBUN , A.INSURAYN   /* 계산서 정보 */ 
                  , A.DOCPREPAREYN, A.COMPNM BILLCOMPNM, A.CHIEFNM, A.REGSTNO         /* 계산서 정보 */
                  , A.BUSINESSCOND, A.BUSINESSTYPE, A.ZIPCODE, A.ADDR1, A.ADDR2   /* 계산서 정보 */
                  , A.COMTEL, A.COMFAX    /* 계산서 정보 */
                  , A.RIGHTNO, A.INNINGSEQ, A.APPLYNUM 
                  , P.DOCUMENTSYN
                  , R.TRAININGCLASS
                FROM T_LMS_PAYMENT P, T_LMS_MEMBER M
                    , (SELECT GET_SUBJNM(A.SUBJ) SUBJNM,  A.SUBJ, A.SUBJSEQ, TO_NUMBER(B.SUBJSEQGR) || '기' SUBJSEQNM,  A.YEAR, A.USERID, A.PRICETYPE , A.ENG_NAME 
                    , B.EDUSTART, B.EDUEND  , A.COSTSUPPORT , A.PRICE, C.TRAININGCLASS
                             FROM T_LMS_PROPOSE A, T_LMS_SUBJSEQ B, T_LMS_SUBJ C
                             WHERE A.SUBJ = B.SUBJ AND A.SUBJSEQ = B.SUBJSEQ AND A.YEAR = B.YEAR  AND A.SUBJ = C.SUBJ) R
                    ,T_LMS_BILLPUBREQ A
                WHERE P.USERID = M.USERID
                    AND P.SUBJ = R.SUBJ(+)
                    AND P.YEAR = R.YEAR(+)
                    AND P.SUBJSEQ = R.SUBJSEQ(+)
                    AND P.USERID = R.USERID(+)
                    AND P.SUBJ = A.SUBJ(+) 
                    AND P.SUBJSEQ = A.SUBJSEQ(+) 
                    AND P.YEAR = A.YEAR(+)
                    AND P.USERID = A.USERID(+)
                    AND P.SEQ = A.PAYMENTSEQ(+)
				    AND P.SEQ=#p_seq#
		  ]]>																								
	</select>
	<!---->
	<select id="selectExamPaymentDetail" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
				SELECT	P.RIGHTNO, P.INNINGSEQ, P.APPLYNUM, P.SEQ, P.USERID, P.RECOGSTATE
				  , P.PAYMETHOD , GET_CODENM('0056', P.PAYMETHOD) PAYMETHODNM
				  , GET_CODENM('0048', P.RECOGSTATE) PAYSTATUS
				  , DECODE(P.RECOGSTATE, 'C','취소','E','완료','D','처리완료','R','요청', 'P','처리중','미요청') REFUNDSTATUS	
				  , P.REFUNDREQDT
				  , P.REFUNDCOMPLETE
				  , P.REFUNDUSERID
				  , P.REFUNDBANKCD, P.REFUNDACCOUNT 
				  , P.REFUNDREASON, P.REFUNDAMOUNT, P.REFUNDTYPE, P.REFUNDDEPOSITOR
				  , P.AMOUNT
				  , P.MEMO
				  , M.NAME			  
				  , P.PAY_PAPER_NO, P.PAY_PAPER_STATE   		/*  결제에 대한 전표번호, 전표 처리 여부 */
				  , P.REPAY_PAPER_NO, P.REPAY_PAPER_STATE   	/*  환불에 대한 전표번호, 전표 처리 여부 */ 				  
				  , I.APPLDATE, I.APPLNUM , GET_CODENM('0050',I.VACT_BANKCODE) BANK_NAME  
				FROM T_LMS_PAYMENT P, T_LMS_MEMBER M	, T_PAY_INIPAY I
				WHERE P.USERID = M.USERID
				    AND P.TID = I.TID
				    AND P.SEQ=#p_seq#
		  ]]>																								
	</select>
	
	<!---->
	<select id="selectExamPaymentUseKamisDetail" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
				SELECT	P.RIGHTNO, P.INNINGSEQ, P.APPLYNUM, P.SEQ, P.USERID, P.RECOGSTATE
				  , P.PAYMETHOD , GET_CODENM('0056', P.PAYMETHOD) PAYMETHODNM
				  , GET_CODENM('0048', P.RECOGSTATE) PAYSTATUS
				  , DECODE(P.RECOGSTATE, 'C','취소','E','완료','D','처리완료','R','요청', 'P','처리중','미요청') REFUNDSTATUS	
				  , P.REFUNDREQDT
				  , P.REFUNDCOMPLETE
				  , P.REFUNDUSERID
				  , P.REFUNDBANKCD, P.REFUNDACCOUNT 
				  , P.REFUNDREASON, P.REFUNDAMOUNT, P.REFUNDTYPE, P.REFUNDDEPOSITOR
				  , P.AMOUNT
				  , P.MEMO
				  , M.NAME			  
				  , P.PAY_PAPER_NO, P.PAY_PAPER_STATE   		/*  결제에 대한 전표번호, 전표 처리 여부 */
				  , P.REPAY_PAPER_NO, P.REPAY_PAPER_STATE   	/*  환불에 대한 전표번호, 전표 처리 여부 */ 		
				FROM T_LMS_PAYMENT P, T_LMS_MEMBER M
				WHERE P.USERID = M.USERID
				    AND P.SEQ=#p_seq#
		  ]]>																								
	</select>
		
	<select id="selectPaymentHistoryDetail" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
				SELECT *
				FROM T_LMS_PAYMENT_HISTORY
				WHERE tno = #tno#
		  ]]>																							
	</select>	
	
	<!---->
	<select id="selectPaymentSeq" resultClass="string" parameterClass="cmap">
		<![CDATA[ 
				SELECT NVL(MAX(SEQ), 1) + 1 SEQ 
				FROM 	T_LMS_PAYMENT	
				WHERE SUBJ				= #p_subj#
				  	AND YEAR				= #p_year#
				  	AND SUBJSEQ		= #p_subjseq#
				  	AND USERID			= #p_userid#
			  ]]>
	</select>
	
	
	<update id="insertPaymentHistory" parameterClass="cmap"  >
		<![CDATA[
		 	INSERT INTO T_LMS_PAYMENT_HISTORY(
		 		 ORDR_IDXX, REQ_TX, PAY_METHOD, GOOD_NAME, GOOD_MNY, BUYR_NAME, BUYR_TEL1, BUYR_TEL2, BUYR_MAIL
		 		 ,RES_CD, RES_MSG, TNO, AMOUNT, VAN_CD, CARD_CD, CARD_NAME 
		 		 ,APP_TIME, APP_NO, NOINF, QUOTA, CARD_NO, ESCW_YN, BK_CODE, BK_NAME, BK_RECEIPT_GUBN
		 		 ,BK_TAXNO, BANKNAME, BANKCODE, ACCOUNT, CASH_YN, CASH_AUTHNO, CASH_TR_CODE, CASH_ID_INFO
		 		 ,REGDT)
		 		 VALUES (
					#ordr_idxx#, #req_tx#, #pay_method#, #good_name#, #good_mny#, #buyr_name#, #buyr_tel1#, #buyr_tel2#, #buyr_mail#
					,#res_cd#, #res_msg#, #tno#, #amount#, #van_cd#, #card_cd#, #card_name#
					,#app_time#, #app_no#, #noinf#, #quota#, #card_no#, #escw_yn#, #bk_code#, #bk_name#, #bk_receipt_gubn#
					,#bk_taxno#, #bankname#, #bankcode#, #account#, #cash_yn#, #cash_authno#, #cash_tr_code#, #cash_id_info# 
					,TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				)
		]]>
	</update>
	
	<update id="updatePaymentHistoryIpgm" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT_HISTORY
				  SET   IPGM_TIME = #ipgm_time#
				  		 , IPGM_MNYX = IPGM_MNYX + #ipgm_mnyx#
				  		 , CASH_YN = #cash_yn# 
				  		 , CASH_AUTHNO = #cash_authno#
				  		 , NOTI_ID	= #noti_id#
			WHERE TNO = #tno#
		]]>
	</update>
	
	<update id="updatePaymentHistoryRefund" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT_HISTORY
				  SET   REQ_TX='mod'
			WHERE TNO = #tno#
		]]>
	</update>
	
	<!---->
	<select id="selectPaymentMemo" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
				SELECT	P.USERID, P.SUBJ, P.YEAR, P.SUBJSEQ 
				  , P.MEMO
				  , M.NAME	  
				FROM T_LMS_PAYMENT P, T_LMS_MEMBER M 
				WHERE P.USERID = M.USERID
				    AND P.SEQ in ( $p_seqs$)
		  ]]>																								
	</select>
	
	<update id="addPaymentMemo" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT
				  SET   MEMO = MEMO || chr(13)||chr(10) ||#p_memo#
			WHERE SEQ in ( $p_seqs$)
		]]>
	</update>
	
	<update id="updatePaymentMemo" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT
				  SET   MEMO = #p_memo#
			WHERE SEQ in ( $p_seqs$)
		]]>
	</update>
	
	<!---->
	<update id="updateLangQMemo" parameterClass="cmap" >
	    /* payment.updateLangQMemo */
	    	<![CDATA[
				UPDATE T_LMS_PAYMENT 
					  SET MEMO= #p_memo# 
				WHERE 
					USERID=#p_userid#
				AND
					MOID=#p_moid#	
		  ]]>																							
	</update>
	
	<!---->
	<select id="getUserInfoLangQ" resultClass="cmap" parameterClass="cmap" >
	    /* payment.getUserInfoLangQ */
	    	SELECT handphone,name FROM T_LMS_MEMBER WHERE userid=#p_userid#																			
	</select>
	
	<!---->
	<select id="getUserInfoLangQ2" resultClass="cmap" parameterClass="cmap" >
	    /* payment.getUserInfoLangQ2 */
	    	SELECT 
	    		a.edustart "edustart", b.moid "moid" 
	    	from 
	    		t_lms_subjseq a, t_lms_payment b 
	    	WHERE  
	    		a.subj=b.subj 
	    	AND b.SUBJ='4230' 
	    	AND b.SUBJSEQ=#p_subjseq# 
	    	AND b.USERID=#p_userid#
	    	AND SUBSTR(b.moid,INSTR(moid,'_',-1,1)+1) = (
	    			SELECT 
			    		max(SUBSTR(moid,INSTR(moid,'_',-1,1)+1)) 
			    	from 
			    		t_lms_subjseq a, t_lms_payment b 
			    	WHERE 
			    		a.subj=b.subj 
			    	AND b.SUBJ='4230' 
			    	AND b.SUBJSEQ=#p_subjseq# 
			    	AND b.USERID=#p_userid#
			    	AND a.SUBJSEQ=b.SUBJSEQ
	    		)
	    	AND a.SUBJSEQ=b.SUBJSEQ 														
	</select>
	
	<!---->
	<update id="insertPayment" parameterClass="cmap">
        /* payment.insertPayment */
        INSERT INTO T_LMS_PAYMENT
            ( TID
            , SEQ
            , MOID
            , PAYMETHOD
            , AMOUNT
            , RECOGSTATE
            , ISLICENSE
            , PAY_PAPER_NO
            , PAY_PAPER_STATE
            , REPAY_PAPER_NO
            , REPAY_PAPER_STATE
            , SUBJ
            , YEAR
            , SUBJSEQ
            , USERID
            , INSTALLMENT_SEQ
            , RIGHTNO
            , INNINGSEQ
            , APPLYNUM
            , REFUNDBANKCD
            , REFUNDACCOUNT
            , REFUNDREQDT
            , REFUNDCOMPLETE
            , REFUNDUSERID
            , REFUNDREASON
            , REFUNDAMOUNT
            , MEMO
            , REFUNDTYPE
            , REFUNDDEPOSITOR
            , INUSERID
            , INDATE
            , LUSERID
            , LDATE
            , PAYDATE
            , ISOPENSUBJ
            , USEMILEAGE )
        VALUES
            ( #p_tid#
            , (SELECT NVL(MAX(SEQ),120000)+1 FROM T_LMS_PAYMENT)
            , #p_moid#
            , #p_paymethod#
            , #p_amount#
            , #p_recogstate#
            , #p_islicense#
            , #p_pay_paper_no#
            , #p_pay_paper_state#
            , #p_repay_paper_no#
            , #p_repay_paper_state#
            , #p_subj#
            , #p_year#
            , #p_subjseq#
            , #p_userid#
            , #p_installment_seq#
            , #p_rightno#
            , #p_inningseq#
            , #p_applynum#
            , #p_refundbankcd#
            , #p_refundaccount#
            , #p_refundreqdt#
            , #p_refundcomplete#
            , #p_refunduserid#
            , #p_refundreason#
            , #p_refundamount#
            , #p_memo#
            , #p_refundtype#
            , #p_refunddepositor#
            , #s_userid#
            , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
            , #s_userid#
            , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
            , #p_paydate#
            , #p_isopensubj# 
            , #p_usemileage# )
	</update>
	
	<update id="updatePaymentIpgm" parameterClass="cmap"  >
		<![CDATA[
			UPDATE T_LMS_PAYMENT
				  SET   APPTIME = #ipgm_time#
				  		 , APP_NO = #cash_authno#
				  		 , IPGM_MNYX = IPGM_MNYX + #ipgm_mnyx#
				  		 , CASHYN = #cash_yn# 
				  		 , RECOGSTATE = 'Y'
			WHERE TNO = #tno#
		]]>
	</update>
	
	<!---->
	<update id="updatePaymentRefund" parameterClass="cmap"  >
		 UPDATE T_LMS_PAYMENT A SET 
		 	   RECOGSTATE    = #p_recogstate#
		 	 , REFUNDREQDT	 = #p_refundreqdt#
		 	<isNotEmpty property="p_refundtype">
	      	  , REFUNDTYPE    = #p_refundtype#
	       	</isNotEmpty>
	       	<isNotEmpty property="p_refundreason">
	      	  , REFUNDREASON  = #p_refundreason#
	       	</isNotEmpty>
		 	 , REFUNDAMOUNT  = #p_refundamount#
			<isNotEmpty property="p_refundbankcd">
	      	  , REFUNDBANKCD = #p_refundbankcd#
	       	</isNotEmpty>
		 	 , REFUNDACCOUNT = #p_refundaccount# 	
		 	 , REFUNDDEPOSITOR = #p_refunddepositor#
			<isNotEmpty property="p_paymethod">
	      	 , PAYMETHOD  = #p_paymethod#
	       	</isNotEmpty>
	       	<isNotEmpty property="p_amount">
	      	 , AMOUNT  = #p_amount#
	       	</isNotEmpty>
	       	<isEqual property="p_isComplet" compareValue="Y" prepend="">
			 , PAYDATE = TO_CHAR(SYSDATE, 'YYYYMMDD') 
			</isEqual>
	       	<isEqual property="p_refundtype" compareValue="F" prepend="">
			 , REFUNDCOMPLETE = TO_CHAR(SYSDATE, 'YYYYMMDD') 
			</isEqual>
			<isEqual property="p_allmileage" compareValue="Y" prepend="">
			 , REFUNDCOMPLETE = TO_CHAR(SYSDATE, 'YYYYMMDD') 
			</isEqual>
			, LUSERID = #s_userid#
			, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		  WHERE SEQ = #p_seq#
    </update>
	
	<!---->
	<update id="updatePaymentRefundRequest" parameterClass="cmap">
		 UPDATE T_LMS_PAYMENT_DAMO A SET
			   RECOGSTATE  		= #p_recogstate#
			 , REFUNDBANKCD = #p_refundbankcd#
			 , SEC_REFUNDACCOUNT = DAMO.ENC_VARCHAR('KITALMS','T_LMS_PAYMENT','REFUNDACCOUNT',#p_refundaccount#)
			<isNotEmpty property="p_refundreason">
			 , REFUNDREASON = #p_refundreason#
			</isNotEmpty>
			<isNotEmpty property="p_refunddepositor">
			 , REFUNDDEPOSITOR = #p_refunddepositor#
			</isNotEmpty>
			 , REFUNDREQDT = NVL(#p_refundreqdt#,TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'))
			 , LUSERID = #s_userid#
			 , LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			  WHERE SUBJ 		= #p_subj#
			    AND YEAR 		= #p_year#
			    AND SUBJSEQ	= #p_subjseq#
			    AND USERID = #p_userid#
			    AND SEQ = #p_seq#
			    AND  RECOGSTATE IN ('Y', 'N')
	</update>

	<!---->
	<update id="updatePaymentRefundFinish" parameterClass="cmap">
		 UPDATE T_LMS_PAYMENT A SET 									
			   RECOGSTATE  		= #p_recogstate#
			   , LUSERID = #s_userid#
			   , LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			   , REFUNDUSERID = #s_userid#
			  WHERE SUBJ 		= #p_subj#
			    AND YEAR 		= #p_year#
			    AND SUBJSEQ	= #p_subjseq#
			    AND USERID = #p_userid#
			    AND SEQ = #p_seq#
			    AND  RECOGSTATE IN ('D')
	</update>
		
	<!---->
	<update id="updatePaymentRecogState" parameterClass="cmap"  >
			UPDATE T_LMS_PAYMENT
				SET 		
		<isEqual property="p_recogstate" compareValue="Y" prepend="">
		     	 RECOGSTATE = #p_recogstate#
		     	, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				, PAYDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') 
		</isEqual>	
		<isEqual property="p_recogstate" compareValue="N" prepend="">
		     	 RECOGSTATE = #p_recogstate#
		     	, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				, PAYDATE = ''
		</isEqual>		
				WHERE SEQ = #p_seq#
				    AND YEAR = #p_year#
				    AND SUBJSEQ = #p_subjseq#
				    AND USERID = #p_userid#
				    AND SUBJ = #p_subj#
	</update>
	
	<!---->
	<update id="updateRightTestPaymentRecogState" parameterClass="cmap"  >
			UPDATE T_LMS_PAYMENT
				SET 		
		<isEqual property="p_recogstate" compareValue="Y" prepend="">
		     	 RECOGSTATE = #p_recogstate#
		     	, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				, PAYDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') 
		</isEqual>	
		<isEqual property="p_recogstate" compareValue="N" prepend="">
		     	 RECOGSTATE = #p_recogstate#
		     	, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				, PAYDATE = ''
		</isEqual>		
				WHERE RIGHTNO = #p_rightno#
				    AND INNINGSEQ = #p_inningseq#
				    AND APPLYNUM = #p_applynum#
				    AND USERID = #p_userid#
	</update>
	
	<!---->
	<update id="updatePaymentMethodDocuments" parameterClass="cmap"  >
			UPDATE T_LMS_PAYMENT
				SET 		
		<isNotEmpty property="p_paymethod">
		     	 PAYMETHOD = #p_paymethod# ,
		</isNotEmpty>	
		<isNotEmpty property="p_documentsyn">
		     	 DOCUMENTSYN = #p_documentsyn# ,
		</isNotEmpty>
		     	LUSERID = #s_userid# ,
				LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				WHERE SEQ = #p_seq#
				    AND YEAR = #p_year#
				    AND SUBJSEQ = #p_subjseq#
				    AND USERID = #p_userid#
				    AND SUBJ = #p_subj#
	</update>
	
	
	<!---->
	<update id="updateTestRightApplystateChange" parameterClass="cmap"  >
			UPDATE T_LMS_RIGHTAPPLY
			   SET APPLYSTATE = 'PF'
			WHERE RIGHTNO = #p_rightno#
			  AND SEQ = #p_inningseq#
			  AND APPLYNUM = #p_applynum#
			  AND USERID = #p_userid#
	</update>

	<!---->
	<update id="updateProposeBiyongPrice" parameterClass="cmap"  >
			UPDATE T_LMS_PROPOSE
				SET BIYONG = #p_biyong#
					, PRICE = #p_biyong# + 	NVL(BOOKPRICESUM, 0) 
					, PRICETYPE = #p_pricetype# 
					, LUSERID = #s_userid#
					, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				WHERE SUBJ = #p_subj#
				    AND YEAR = #p_year#
				    AND SUBJSEQ = #p_subjseq#
				    AND USERID = #p_userid#
	</update>
	
	<!---->
	<update id="updateImplNoti" parameterClass="cmap">
		<![CDATA[ /* payment."updateImplNoti" */
		UPDATE T_LMS_STUDENT
		SET IMPLNOTIYN = #p_implnotiyn#
		WHERE SUBJ = #p_subj#
		    AND YEAR = #p_year#
		    AND SUBJSEQ = #p_subjseq#
		    AND USERID = #p_userid#
		]]>
	</update>
	
	<insert id="insertInipay" parameterClass="cmap">
        /* payment.insertInipay */
        INSERT INTO T_PAY_INIPAY
            ( TID
            , RESULTCODE
            , RESULTMSG
            , MOID
            , APPLDATE
            , APPLNUM
            , PAYMETHOD
            , TOTPRICE
            , EVENTCODE
            , BUYERNAME
            , BUYERTEL
            , RECVNAME
            , RECVTEL
            , RECVADDR
            , RECVPOSTNUM
            , RECVMSG
            , JOINCARD
            , JOINEXPIRE
            , USERID
            , CARD_NUM
            , CARD_INTEREST
            , CARD_QUOTA
            , CARD_CODE
            , CARD_BANKCODE
            , ORGCURRENCY
            , EXCHANGERATE
            , OCB_NUM
            , OCB_SAVEAPPLNUM
            , OCB_PAYAPPLNUM
            , OCB_APPLDATE
            , OCB_PAYPRICE
            , VACT_NUM
            , VACT_BANKCODE
            , VACT_NAME
            , VACT_INPUTNAME
            , VACT_DATE )
        VALUES ( #p_tid#
            , #p_resultcode#
            , #p_resultmsg#
            , #p_moid#
		<isNotEmpty property="p_appldate">
            , #p_appldate#
	    </isNotEmpty>
	    <isEmpty property="p_appldate">
            , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
	    </isEmpty>
            , #p_applnum#
            , #p_paymethod#
            , #p_totprice#
            , #p_eventcode#
            , #p_buyername#
            , #p_buyertel#
            , #p_recvname#
            , #p_recvtel#
            , #p_recvaddr#
            , #p_recvpostnum#
            , #p_recvmsg#
            , #p_joincard#
            , #p_joinexpire#
            , #p_userid#
            , #p_card_num#
            , #p_card_interest#
            , #p_card_quota#
            , #p_card_code#
            , #p_card_bankcode#
            , #p_orgcurrency#
            , #p_exchangerate#
            , #p_ocb_num#
            , #p_ocb_saveapplnum#
            , #p_ocb_payapplnum#
            , #p_ocb_appldate#
            , #p_ocb_payprice#
            , #p_vact_num#
            , #p_vact_bankcode#
            , #p_vact_name#
            , #p_vact_inputname#
            , #p_vact_date# )
	</insert>
	
	<!---->
	<delete id="deleteInipay" parameterClass="cmap">
		<![CDATA[	/* payment.deleteInipay */
			DELETE FROM T_PAY_INIPAY
				WHERE TID = #v_tid#
		]]>
	</delete>
	
	<insert id="insertInipayVacct" parameterClass="cmap">
        /* payment.insertInipayVacct */
        INSERT INTO T_PAY_INIPAYVACCT
            ( TID
            , MOID
            , NO_TID
            , CD_BANK
            , CD_DEAL
            , DT_TRANS
            , TM_TRANS
            , NO_VAACT
            , AMT_INPUT
            , AMT_CHECK
            , FLG_CLOSE
            , CL_CLOSE
            , TYPE_MSG
            , NM_INPUTBANK
            , NM_INPUT
            , DT_INPUTSTD
            , DT_CALCULSTD
            , DT_TRANSBASE
            , CL_TRANS
            , CL_KOR
            , DT_CSHR
            , TM_CSHR
            , NO_CSHR_APPL
            , NO_CSHR_TID )
        VALUES ( #p_tid#
            , #p_moid#
            , #p_no_tid#
            , #p_cd_bank#
            , #p_cd_deal#
            , #p_dt_trans#
            , #p_tm_trans#
            , #p_no_vacct#
            , #p_amt_input#
            , #p_amt_check#
            , #p_flg_close#
            , #p_cl_close#
            , #p_type_msg#
            , #p_nm_inputbank#
            , #p_nm_input#
            , #p_dt_inputstd#
            , #p_dt_calculstd#
            , #p_dt_transbase#
            , #p_cl_trans#
            , #p_cl_kor#
            , #p_dt_cshr#
            , #p_tm_cshr#
            , #p_no_cshr_appl#
            , #p_no_cshr_tid# )
	</insert>
	<!---->
	<select id="getPaymentSubjNmSubjSeq" parameterClass = "cmap" resultClass="cmap">
		SELECT GET_SUBJNM(SUBJ)SUBJNM , SUBJSEQ  FROM T_LMS_SUBJSEQ WHERE SUBJ = #p_subj#   	
     </select>	
     
     <!---->
     <update id="updateRePayRecogstate" parameterClass="cmap"  >
			UPDATE T_LMS_PAYMENT
				  SET   RECOGSTATE = #p_recogstate#
			<isEqual property="p_iscancelrefund" compareValue="Y" prepend="">
			     		, REFUNDBANKCD = ''
			     		, REFUNDACCOUNT = ''
			     		, REFUNDREQDT = ''
			     		, REFUNDCOMPLETE = ''
			     		, REFUNDUSERID = ''
			     		, REFUNDREASON = ''
			     		, REFUNDAMOUNT = ''
			     		, REFUNDTYPE = ''
			     		, REFUNDDEPOSITOR = ''
			</isEqual>
				  		, LUSERID = #s_userid#
						, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
			WHERE SEQ = #p_seq#
	</update>
	
	<!---->
	<select id="getSubjDiscountAll" parameterClass = "cmap" resultClass="cmap"> 
		SELECT '98' TARGETCD , '회원' CODENM FROM DUAL 
		UNION 
		SELECT '99' TARGETCD , '비회원' CODENM FROM DUAL  
		UNION
		SELECT  TARGETCD ,GET_CODENM('0109',TARGETCD) CODENM   FROM  T_LMS_SUBJDISCOUNT 
    </select>
	
	<!---->
	<select id="getSubjBiyong" parameterClass = "cmap" resultClass="string">
		SELECT CASE WHEN #p_pricetype# = '99' THEN ( SELECT BIYONG FROM T_LMS_SUBJ WHERE SUBJ = #p_subj# )  /* 비회원가 */
			WHEN #p_pricetype# = '98' THEN ( SELECT MEMBERBIYONG FROM T_LMS_SUBJ WHERE SUBJ = #p_subj# )  /* 회원가 */
			ELSE ( SELECT DCAMT FROM T_LMS_SUBJDISCOUNT WHERE SUBJ =  #p_subj# AND TARGETCD = #p_pricetype#  ) END  BIYONG 
		FROM DUAL 
    </select>
    
    <!---->
	<update id="updateCostSupport" parameterClass="cmap">
		<![CDATA[ /* payment.updateCostSupport */
		UPDATE T_LMS_PROPOSE
		SET COSTSUPPORT = #p_costsupport#
			, LUSERID = #s_userid#
			, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		WHERE SUBJ = #p_subj#
		    AND YEAR = #p_year#
		    AND SUBJSEQ = #p_subjseq#
		    AND USERID = #p_userid#
		]]>
	</update>
	
	<!---->
	<update id="updateProposeEngName" parameterClass="cmap">
		<![CDATA[ /* payment.updateProposeEngName */
		UPDATE T_LMS_PROPOSE
		SET ENG_NAME = #p_memberengname#
			, LUSERID = #s_userid#
			, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		WHERE SUBJ = #p_subj#
		    AND YEAR = #p_year#
		    AND SUBJSEQ = #p_subjseq#
		    AND USERID = #p_userid#
		]]>
	</update>
	
	<!---->
	<select id="selectPriceTypeItem" resultClass="cmap" parameterClass="cmap" >
	    	SELECT TARGETCD CODE, GET_CODENM('0109', TARGETCD) CODENM, B.SUBJ, B.SUBJSEQ, B.YEAR, B.USERID 
	    	FROM T_LMS_SUBJDISCOUNT A, T_LMS_PAYMENT B
	    	WHERE A.SUBJ = B.SUBJ AND B.SEQ = #p_seq#								
	</select>

	<!---->
	<select id="selectPaymentCouseRightInfo" resultClass="cmap" parameterClass="cmap" >
	    	SELECT USERID, SUBJ, SUBJSEQ, YEAR,RIGHTNO, APPLYNUM, INNINGSEQ , SEQ , INSTALLMENT_SEQ, RECOGSTATE, REFUNDREQDT, REFUNDACCOUNT, REFUNDDEPOSITOR, REFUNDAMOUNT, PAYDATE, PAYMETHOD, MOID  
	    	FROM T_LMS_PAYMENT
	    	WHERE 
		<isNotEmpty property="p_seqs">
            SEQ IN ( $p_seqs$ )
	    </isNotEmpty>
	    <isEmpty property="p_seqs">
           	SEQ = #p_seq#
	    </isEmpty>																								
	</select>
	
	<!---->
	<select id="selectPaymentSectionPageList" resultClass="cmap" parameterClass="cmap">
	    <include refid="pageingTop" />
	    	<![CDATA[
	    	/* payment.selectPaymentSectionPageList*/
			SELECT    A.SEQ, B.OPENSUBJNM SUBJNM ,B.OPENSUBJID SUBJ ,A.SUBJSEQ , TO_NUMBER(A.SUBJSEQ) SUBJSEQGR
			    , CASE WHEN ( E.PRICE IS NOT NULL  AND E.price < (NVL(E.BIYONG,0) + NVL(E.BOOKPRICESUM,0 )) ) THEN TO_CHAR(NVL(E.BIYONG,0) + NVL(E.BOOKPRICESUM,0 ) )
               	  WHEN ( E.PRICE IS NOT NULL ) THEN TO_CHAR( E.price )   /* B.BIYONG */ 
                  ELSE '-' END BIYONG /* 수강료  */
				, DECODE( A.RECOGSTATE, 'C', 0, 'F', 0, 'I', 0, 'N', 0,  A.AMOUNT ) AMOUNT /* 결제금액 */
  				, DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT      /* 환급여부  (1003 : 고용보험) */
  				, PRICETYPE 
  				, DECODE( PRICETYPE, '98' ,'회' ,'99' ,'비', NVL2( GET_CODENM('0109', PRICETYPE),'특',''))  VIEWPRICENM
                , D.USERID ,D.NAME , D.COMPNM COMPANYNM, D.DEPTNAM  /*개인정보  */
				, TO_CHAR(TO_DATE(SUBSTR(E.APPDATE,1,8),'YYYYMMDDHH24MISS'),'YYYY.MM.DD') APPDATE  /* 수강신청일 */
                , A.PAYMETHOD
                , DECODE(A.PAYMETHOD, '03' ,'무통장', '02','가상계좌','01','카드','04','핸드폰','9998','마일리지','') PAYMETHODNM   /* 결제수단 */
                , A.RECOGSTATE ,GET_CODENM('0048', A.RECOGSTATE) PAYSTATUS   /*  결제여부 */
                , DECODE (A.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', TO_CHAR(TO_DATE(A.PAYDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')) PAYDATE   /* 결제일 */                
                , NVL(A.REFUNDAMOUNT,0) REFUNDAMOUNT      /* 환불금액 */
                , TO_CHAR(TO_DATE(A.REFUNDREQDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDREQDT     /* 환불 신청일 */
                , TO_CHAR(TO_DATE(A.REFUNDCOMPLETE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDCOMPLETE  /* 환불 처리일 */
                , DECODE(A.RECOGSTATE, 'E' ,'완료', 'D','처리완료','R','요청','P','처리중', '미요청') REFUNDSTATUS     /* 환불상태 */    
                , A.YEAR                                                                     
                , D.EMAIL, D.HANDPHONE 
                , A.PAY_PAPER_NO, A.PAY_PAPER_STATE   /*  결제에 대한 전표번호, 전표 처리 여부 */
                , A.REPAY_PAPER_NO, A.REPAY_PAPER_STATE   /*  환불에 대한 전표번호, 전표 처리 여부 */
                , A.INSTALLMENT_SEQ   /* 수강료 분할 값  */
                , A.DOCUMENTSYN       /* 서류 접수 여부 */ 
                , G.PUBGUBUN
                , DECODE( G.APPLYGUBUN, 'R' , '영수증','C' , '현금영수증', 'B', '계산서', '-') APPLYGUBUN  
				, TO_CHAR(TO_DATE(G.BILLPUBDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') BILLPUBDT 
                , TO_CHAR(TO_DATE(G.BILLREQDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') BILLREQDT
                , DECODE( A.MEMO, null, 'N', 'Y') ISMEMO
                , A.USEMILEAGE 
		   FROM  T_LMS_PAYMENT A, T_LMS_OPENSUBJ B, T_LMS_MEMBER D, T_LMS_BILLPUBREQ G, T_LMS_PROPOSE E
		   WHERE A.SUBJ	 			= B.OPENSUBJID																				
   				AND A.USERID		= D.USERID
   				AND A.SEQ			= G.PAYMENTSEQ(+) 
   				AND A.SUBJ			= E.SUBJ(+)
   				AND A.SUBJSEQ		= E.SUBJSEQ(+)
   				AND A.YEAR			= E.YEAR(+)
   				AND A.USERID		= E.USERID(+)
   				AND A.ISLICENSE = 'N' 
   				AND A.ISOPENSUBJ = 'Y'  ]]>	
	   		<isNotEmpty property="p_comp" prepend="AND">
				 B.COMP = #P_comp#	/* 회사 */
			</isNotEmpty>
			<isNotEmpty property="p_upperclass" prepend="AND">
				 SUBSTR (T_LMS_OPENSUBJ.SUBJCLASS, 0, 4) = #p_upperclass#	/* 대분류 */
			</isNotEmpty>
			<isNotEmpty property="p_middleclass" prepend="AND">
				 SUBSTR (T_LMS_OPENSUBJ.SUBJCLASS, 5, 4) = #p_middleclass#	/* 중분류 */
			</isNotEmpty>
			<isNotEmpty property="p_lowerclass" prepend="AND">
				 SUBSTR (T_LMS_OPENSUBJ.SUBJCLASS, 9, 4) = #p_lowerclass#	/* 소분류 */
			</isNotEmpty>
			<isNotEmpty property="p_opensubjnm" prepend="AND">
				 OPENSUBJNM LIKE '%'||#p_opensubjnm#||'%'	/* 지식명 */
			</isNotEmpty>
			<isNotEmpty property="p_comp">
	           AND D.COMP	IN( SELECT DISTINCT(COMP) FROM T_LMS_COMPCLASS
                                 WHERE (UPPERCOMP=#p_comp# AND GROUPYN='N') 
                                    OR (COMP=#p_comp# AND GROUPYN='N')
                              )
		    </isNotEmpty>
		    <isNotEmpty property="p_costsupport">
				    AND  (SELECT COSTSUPPORT FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  )	= #p_costsupport#
			</isNotEmpty>
		    <isNotEmpty property="p_searchval" >
				<isEqual property="p_searchitem" compareValue="USER" prepend="">
					   	AND (   D.USERID		LIKE '%'||#p_searchval#||'%'	OR D.NAME LIKE '%'||#p_searchval#||'%'	)
				</isEqual>
				<isEqual property="p_searchitem" compareValue="RESNO" prepend="">
				     	AND (   D.RESNO = 	REPLACE( #p_searchval# , '-','') ) 
				</isEqual>
		    	<isEqual property="p_searchitem" compareValue="COMPNM" prepend="">
				     	AND (   D.COMPNM LIKE '%'||#p_searchval#||'%' 
				     			OR ( ( SELECT COMPNM FROM T_LMS_COMPCLASS WHERE COMP = D.COMP )  LIKE '%'||#p_searchval#||'%' ) )  
				</isEqual>
		    </isNotEmpty>
		    <isNotEmpty property="p_paymethod">
		           AND A.PAYMETHOD	in(  $p_paymethod$ ) 
		    </isNotEmpty>
		    <isNotEmpty property="p_paystartdt">
		           AND SUBSTR(A.PAYDATE,1,8) &gt;= #p_paystartdt#
		           AND A.RECOGSTATE NOT IN ('N','F','I','C') 
		    </isNotEmpty>
		    <isNotEmpty property="p_payenddt">
		    		AND SUBSTR(A.PAYDATE,1,8) &lt;= #p_payenddt#
		    </isNotEmpty>
		     <isNotEmpty property="p_appdate1">
		           AND (SELECT SUBSTR(APPDATE,1,8) FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  )  &gt;= #p_appdate1#
		    </isNotEmpty>
		    <isNotEmpty property="p_appdate2">
		    		AND (SELECT SUBSTR(APPDATE,1,8) FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  ) &lt;= #p_appdate2#
		    </isNotEmpty>
		    <isNotEmpty property="p_refundcomplete1">
		           AND SUBSTR(A.REFUNDCOMPLETE,1,8) &gt;= #p_refundcomplete1#
		    </isNotEmpty>
		    <isNotEmpty property="p_refundcomplete2">
		    		AND SUBSTR(A.REFUNDCOMPLETE,1,8) &lt;= #p_refundcomplete2#
		    </isNotEmpty>
		    <isNotEmpty property="p_amountstart">
		           AND A.AMOUNT &gt;= #p_amountstart#
		    </isNotEmpty>
		    <isNotEmpty property="p_amountend">
		    		AND A.AMOUNT &lt;= #p_amountend#
		    </isNotEmpty>
		    <isNotEmpty property="p_recogstate">
	 		 		AND A.RECOGSTATE in ( $p_recogstate$ )
		    </isNotEmpty>
		    <isNotEmpty property="p_pay_paper_state">
	 		 		AND A.PAY_PAPER_STATE = #p_pay_paper_state#
		    </isNotEmpty>	    
	    		ORDER BY A.INDATE DESC 
		<include refid="pageingBottom" />	
	</select>		
	<!---->
	<select id="selectRefundSectionPageList" resultClass="cmap" parameterClass="cmap">
	    <include refid="pageingTop" />
	    	<![CDATA[
	    	/* payment.selectRefundSectionPageList  */
			SELECT  A.SEQ, B.OPENSUBJNM SUBJNM ,B.OPENSUBJID SUBJ ,A.SUBJSEQ , TO_NUMBER(A.SUBJSEQ) SUBJSEQGR     /*과정 */
                , CASE WHEN ( E.PRICE IS NOT NULL  AND E.price < (NVL(E.BIYONG,0) + NVL(E.BOOKPRICESUM,0 )) ) THEN TO_CHAR(NVL(E.BIYONG,0) + NVL(E.BOOKPRICESUM,0 ) )
               	  WHEN ( E.PRICE IS NOT NULL ) THEN TO_CHAR( E.price )   /* B.BIYONG */ 
                  ELSE '-' END BIYONG /* 수강료  */
                , DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT      /* 환급여부 */
                , PRICETYPE ,   DECODE( PRICETYPE, '98' ,'회원' ,'99' ,'비회원' , GET_CODENM('0109', PRICETYPE) )  PRICETYPENM  /* 회/ 비/ 특 */
                , D.USERID ,D.NAME , D.COMPNM  COMPANYNM, D.DEPTNAM  /*개인정보  */
                , DECODE(A.PAYMETHOD, '03' ,'무통장', '02','가상계좌','01','카드','04','핸드폰','9998','마일리지','') PAYMETHOD   /* 결제수단 */
                ,  DECODE( A.RECOGSTATE, 'C', 0, 'F', 0, 'I', 0, 'N', 0,  A.AMOUNT ) AMOUNT /* 결제금액 */
                , A.RECOGSTATE ,GET_CODENM('0048', A.RECOGSTATE) PAYSTATUS   /*  결제여부 */
                , DECODE (A.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', TO_CHAR(TO_DATE(A.PAYDATE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD')) PAYDATE   /* 결제일 */    
                , GET_CODENM('0087', A.REFUNDREASON) REFUNDREASONNM     /* 환불사유 */
                , NVL(A.REFUNDAMOUNT,0) REFUNDAMOUNT      /* 환불금액 */
                , A.AMOUNT - REFUNDAMOUNT BALANCE         /* 환불 후 잔액 */
                , TO_CHAR(TO_DATE(A.REFUNDREQDT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDREQDT     /* 환불 신청일 */
                , TO_CHAR(TO_DATE(A.REFUNDCOMPLETE,'YYYYMMDDHH24MISS'),'YYYY.MM.DD') REFUNDCOMPLETE  /* 환불 처리일 */
        		, DECODE(A.RECOGSTATE, 'C' ,'취소','E' ,'완료', 'D','처리완료','R','요청','P','처리중', '미요청') REFUNDSTATUS     /* 환불상태 */
        		, A.YEAR
                , D.EMAIL, D.HANDPHONE 
                , A.PAY_PAPER_NO, A.PAY_PAPER_STATE   /*  결제에 대한 전표번호, 전표 처리 여부 */
                , A.REPAY_PAPER_NO, A.REPAY_PAPER_STATE   /*  환불에 대한 전표번호, 전표 처리 여부 */
                , A.INSTALLMENT_SEQ   /* 수강료 분할 값  */
                , DECODE( A.MEMO, null, 'N', 'Y') ISMEMO
                , A.USEMILEAGE 
            FROM  T_LMS_PAYMENT A, T_LMS_OPENSUBJ B, T_LMS_MEMBER D , T_LMS_PROPOSE E
               WHERE A.SUBJ                 = B.OPENSUBJID                                                                          
                 AND A.USERID            = D.USERID
                 AND A.SUBJ                 = E.SUBJ(+)
                 AND A.SUBJSEQ           = E.SUBJSEQ(+)
                 AND A.YEAR                 = E.YEAR(+)
                 AND A.USERID              = E.USERID(+)
                 AND A.RECOGSTATE IN ('E','D','P','R' )   /* 상태가   환불완료/환불처리완료/ 환불처리중 / 환불요청  */ 
                 AND A.ISLICENSE = 'N' 
                 AND A.ISOPENSUBJ ='Y'
	  ]]>	
		<isNotEmpty property="p_comp" prepend="AND">
				 B.COMP = #P_comp#	/* 회사 */
			</isNotEmpty>
			<isNotEmpty property="p_upperclass" prepend="AND">
				 SUBSTR (T_LMS_OPENSUBJ.SUBJCLASS, 0, 4) = #p_upperclass#	/* 대분류 */
			</isNotEmpty>
			<isNotEmpty property="p_middleclass" prepend="AND">
				 SUBSTR (T_LMS_OPENSUBJ.SUBJCLASS, 5, 4) = #p_middleclass#	/* 중분류 */
			</isNotEmpty>
			<isNotEmpty property="p_lowerclass" prepend="AND">
				 SUBSTR (T_LMS_OPENSUBJ.SUBJCLASS, 9, 4) = #p_lowerclass#	/* 소분류 */
			</isNotEmpty>
			<isNotEmpty property="p_opensubjnm" prepend="AND">
				 OPENSUBJNM LIKE '%'||#p_opensubjnm#||'%'	/* 지식명 */
			</isNotEmpty>
	    <isNotEmpty property="p_comp">
	             AND D.COMP	IN( SELECT DISTINCT(COMP) FROM T_LMS_COMPCLASS
                                 WHERE (UPPERCOMP=#p_comp# AND GROUPYN='N') 
                                    OR (COMP=#p_comp# AND GROUPYN='N')
                              )
	    </isNotEmpty>
	    <isNotEmpty property="p_searchval" >
		    <isEqual property="p_searchitem" compareValue="USER" prepend="">
			     	AND (   D.USERID		LIKE '%'||#p_searchval#||'%'	OR D.NAME LIKE '%'||#p_searchval#||'%'	)
			</isEqual>
			<isEqual property="p_searchitem" compareValue="RESNO" prepend="">
			     	AND (   D.RESNO = 	REPLACE( #p_searchval# , '-','') ) 
			</isEqual>
	    	<isEqual property="p_searchitem" compareValue="COMPNM" prepend="">
			     	AND (   D.COMPNM LIKE '%'||#p_searchval#||'%' 
			     			OR ( ( SELECT COMPNM FROM T_LMS_COMPCLASS WHERE COMP = D.COMP )  LIKE '%'||#p_searchval#||'%' ) )  
			</isEqual>
	    </isNotEmpty>
	    <isNotEmpty property="p_costsupport">
			    AND  (SELECT COSTSUPPORT FROM T_LMS_PROPOSE WHERE SUBJ = A.SUBJ AND YEAR = A.YEAR AND SUBJSEQ = A.SUBJSEQ AND USERID = A.USERID  )	= #p_costsupport#
		</isNotEmpty>
	    <isNotEmpty property="p_paymethod">
	           AND A.PAYMETHOD	= #p_paymethod#
	    </isNotEmpty>
	    <isNotEmpty property="p_paystartdt">
	           AND SUBSTR(A.PAYDATE,1,10) &gt;= #p_paystartdt#
	           AND A.RECOGSTATE NOT IN ('N','F','I','C') 
	    </isNotEmpty>
	    <isNotEmpty property="p_payenddt">
	    		AND SUBSTR(A.PAYDATE,1,10) &lt;= #p_payenddt#
	    </isNotEmpty> 
	     <isNotEmpty property="p_recogstate">
 		 		AND A.RECOGSTATE in ( $p_recogstate$ )
	    </isNotEmpty>
	    <isNotEmpty property="p_repay_paper_state">
 		 		AND A.REPAY_PAPER_STATE = #p_repay_paper_state#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundcomplete1">
	           AND SUBSTR(A.REFUNDCOMPLETE,1,8) &gt;= #p_refundcomplete1#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundcomplete2">
	    		AND SUBSTR(A.REFUNDCOMPLETE,1,8) &lt;= #p_refundcomplete2#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundreqdt1">
	           AND SUBSTR(A.REFUNDREQDT,1,8) &gt;= #p_refundreqdt1#
	    </isNotEmpty>
	    <isNotEmpty property="p_refundreqdt2">
	    		AND SUBSTR(A.REFUNDREQDT,1,8) &lt;= #p_refundreqdt2#
	    </isNotEmpty>
	    	ORDER BY A.REFUNDREQDT DESC 
		<include refid="pageingBottom" />	
	</select>
	
	<select id="selectPaymentSectionDetail" resultClass="cmap" parameterClass="cmap" >
	    	<![CDATA[
	    		/* payment.selectPaymentSectionDetail */
				SELECT	P.SUBJ, P.YEAR, P.SUBJSEQ, P.SEQ, P.USERID, P.RECOGSTATE
				  , P.PAYMETHOD , GET_CODENM('0056', P.PAYMETHOD) PAYMETHODNM
				  , GET_CODENM('0048', P.RECOGSTATE) PAYSTATUS
				  , DECODE(P.RECOGSTATE, 'C','취소', 'E','완료','D','처리완료','R','요청', 'P','처리중','미요청') REFUNDSTATUS
				  , DECODE(  COSTSUPPORT, '1003', 'Y' ,'','-','N') CONSTSUPPORT , COSTSUPPORT      /* 환급여부  (1003 : 고용보험) */		
				  , P.REFUNDREQDT
				  , P.REFUNDCOMPLETE
				  , P.REFUNDUSERID
				  , P.REFUNDBANKCD, P.REFUNDACCOUNT 
				  , P.REFUNDREASON, P.REFUNDAMOUNT, P.REFUNDTYPE, P.REFUNDDEPOSITOR
				  , P.AMOUNT
				  , P.MEMO
				  , M.NAME , M.RESNO	, M.HOMETEL, M.HANDPHONE, M.POST1, M.POST2  /*이름, 주민번호, 전화, 핸드폰, 우편번호1, 우편번호2*/ 
				  , M.ADDR  MEMBERADDR , M.ADDR2  MEMBERADDR2 , M.EMAIL ,M.COMPNM   
				  , R.PRICE  BIYONG   /* 수강료  */
				  , P.PAY_PAPER_NO, P.PAY_PAPER_STATE   		/*  결제에 대한 전표번호, 전표 처리 여부 */
				  , P.REPAY_PAPER_NO, P.REPAY_PAPER_STATE   	/*  환불에 대한 전표번호, 전표 처리 여부 */ 
				  , DECODE(R.PRICETYPE, '98' ,'회원' ,'99' ,'비회원' , GET_CODENM('0109', PRICETYPE) ) PRICETYPENM, R.ENG_NAME
				  , I.APPLDATE, I.APPLNUM , GET_CODENM('0050',I.VACT_BANKCODE) BANK_NAME, VACT_NUM 
				  , P.INSTALLMENT_SEQ   /* 분납정보 */
				  , DECODE (P.RECOGSTATE, 'N', '', 'F', '', 'I', '','C','', P.PAYDATE) PAYDATE   /* 결제일 */
				  , SUBJNM, SUBJSEQNM, EDUSTART, EDUEND    /* 과정 정보 */
				  , A.APPLYGUBUN, A.BILLREQDT,  A.PUBGUBUN , A.INSURAYN   /* 계산서 정보 */ 
				  , A.DOCPREPAREYN, A.COMPNM BILLCOMPNM, A.CHIEFNM, A.REGSTNO		 /* 계산서 정보 */
				  , A.BUSINESSCOND, A.BUSINESSTYPE, A.ZIPCODE, A.ADDR1, A.ADDR2   /* 계산서 정보 */
				  , A.COMTEL, A.COMFAX    /* 계산서 정보 */
				  , A.RIGHTNO, A.INNINGSEQ, A.APPLYNUM 
				  , P.DOCUMENTSYN
				  , P.USEMILEAGE 
				FROM T_LMS_PAYMENT P, T_LMS_MEMBER M
					, (SELECT B.OPENSUBJNM SUBJNM,  A.SUBJ, A.SUBJSEQ, TO_NUMBER(A.SUBJSEQ) || '기' SUBJSEQNM,  A.YEAR, A.USERID, A.PRICETYPE , A.ENG_NAME 
                    , 	C.EDUSTART, C.EDUEND  , A.COSTSUPPORT , A.PRICE
                             FROM T_LMS_PROPOSE A, T_LMS_OPENSUBJ B , T_LMS_STUDENT C 
                             WHERE A.SUBJ = B.OPENSUBJID  AND A.SUBJ = C.SUBJ(+) AND A.YEAR = C.YEAR(+) AND  A.SUBJSEQ = C.SUBJSEQ(+) AND A.USERID= C.USERID(+) ) R 
					, T_PAY_INIPAY I
					,T_LMS_BILLPUBREQ A
				WHERE P.USERID = M.USERID
				    AND P.SUBJ = R.SUBJ(+)
				    AND P.YEAR = R.YEAR(+)
				    AND P.SUBJSEQ = R.SUBJSEQ(+)
				    AND P.USERID = R.USERID(+)
				    AND P.TID = I.TID(+)
				    AND P.SUBJ = A.SUBJ(+) 
				    AND P.SUBJSEQ = A.SUBJSEQ(+) 
				    AND P.YEAR = A.YEAR(+)
				    AND P.USERID = A.USERID(+)
				    AND P.SEQ = A.PAYMENTSEQ(+)
				    AND P.SEQ=#p_seq#
		  ]]>																								
	</select>	
	
	<!---->
	<update id="insertPaymentChangeHistory" parameterClass="cmap"  >
		<![CDATA[
		  INSERT INTO T_LMS_PAYMENT_CHANGEHISTORY (
			 	  HSEQ, USERID, SUBJ, YEAR, SUBJSEQ, PAYMETHOD, AMOUNT, RECOGSTATE, REFUNDBANKCD, REFUNDACCOUNT 
			 	  , REFUNDREQDT ,REFUNDCOMPLETE ,REFUNDUSERID ,INDATE ,REFUNDREASON ,REFUNDAMOUNT ,REFUNDTYPE
			 	  , REFUNDDEPOSITOR ,PAY_PAPER_NO ,PAY_PAPER_STATE ,REPAY_PAPER_NO ,REPAY_PAPER_STATE, INSTALLMENT_SEQ
			 	  , ISLICENSE ,TID ,SEQ ,RIGHTNO ,INNINGSEQ ,APPLYNUM ,INUSERID ,LUSERID ,LDATE ,DOCUMENTSYN ,PAYDATE 
			 	  , ISOPENSUBJ ,USEMILEAGE  )
		  SELECT  (SELECT NVL(MAX(HSEQ),0)+1 HSEQ FROM T_LMS_PAYMENT_CHANGEHISTORY ) 
		  		  , USERID, SUBJ, YEAR, SUBJSEQ, PAYMETHOD, AMOUNT, RECOGSTATE, REFUNDBANKCD, REFUNDACCOUNT 
			 	  , REFUNDREQDT ,REFUNDCOMPLETE ,REFUNDUSERID ,INDATE ,REFUNDREASON ,REFUNDAMOUNT ,REFUNDTYPE
			 	  , REFUNDDEPOSITOR ,PAY_PAPER_NO ,PAY_PAPER_STATE ,REPAY_PAPER_NO ,REPAY_PAPER_STATE, INSTALLMENT_SEQ
			 	  , ISLICENSE ,TID ,SEQ ,RIGHTNO ,INNINGSEQ ,APPLYNUM ,INUSERID ,LUSERID ,LDATE ,DOCUMENTSYN ,PAYDATE 
			 	  , ISOPENSUBJ ,USEMILEAGE
				 FROM T_LMS_PAYMENT
				 WHERE SEQ = #p_repay_key#
		]]>
	</update>
	
	<!---->
	<update id="updatePnaccCd" parameterClass="cmap"  >
		<![CDATA[
		  UPDATE T_LMS_PAYMENT 
		  	SET PNACC_SRNO = #p_pnacc_srno#
		  	WHERE SEQ = #p_seq#
		]]>
	</update>
	
	<!---->
	<update id="updatePaymentRecogstateC" parameterClass="cmap"  >
	    /* payment.updatePaymentRecogstateC */
		<![CDATA[
		  UPDATE T_LMS_PAYMENT 
		  	SET RECOGSTATE = 'C'
		  	WHERE SUBJ = #v_subj# 
					AND YEAR = #v_year# 
					AND SUBJSEQ = #v_subjseq# 
					AND USERID = #p_userid#
					AND TID = #v_tid#
		]]>
	</update>
	
	<!---->
	<update id="updateToeflPaymentRecogState" parameterClass="cmap"  >
			UPDATE T_LMS_PAYMENT
				SET 		
		<isEqual property="p_recogstate" compareValue="Y" prepend="">
		     	 RECOGSTATE = #p_recogstate#
		     	, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				, PAYDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') 
		</isEqual>	
		<isEqual property="p_recogstate" compareValue="N" prepend="">
		     	 RECOGSTATE = #p_recogstate#
		     	, LUSERID = #s_userid#
				, LDATE = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
				, PAYDATE = ''
		</isEqual>		
				WHERE MOID = #p_moid# AND USERID = #p_userid#
	</update>
	
	
</sqlMap>